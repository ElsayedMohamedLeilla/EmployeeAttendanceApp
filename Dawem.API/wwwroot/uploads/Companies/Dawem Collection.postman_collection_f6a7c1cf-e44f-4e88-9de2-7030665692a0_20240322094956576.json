{
	"info": {
		"_postman_id": "94b43a2a-1f6f-4691-b681-783404665e1f",
		"name": "Dawem Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30670245"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Verify Company Code",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Email\": \"elsayed.mohammedshouse@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"CompanyCode\": null,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/VerifyCompanyCode?identityCode=FRTBFEDRFG",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"VerifyCompanyCode"
							],
							"query": [
								{
									"key": "identityCode",
									"value": "FRTBFEDRFG"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "SignUp",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyName\": \"AmgadElsayedForEmailVerification\",\n    \"companyCountryId\": 65,\n    \"companyAddress\": \"No Address For Company Code\",\n    \"companyEmail\": \"ali.mohammed.leilla70@gmail.com\",\n    \"password\": \"123456\",\n    \"confirmPassword\": \"123456\",\n    \"userEmail\": \"ali.mohammed.leilla70@gmail.com\",\n    \"userMobileCountryId\": 65,\n    \"userMobileNumber\": \"01025995333\",\n    \"name\": \"Amgad Elsayed For Email Verification\",\n    \"numberOfEmployees\": 200,\n    \"subscriptionDurationInMonths\": 6,\n    \"planId\": null,\n    \"agreed\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/SignUp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"SignUp"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "SignIn",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Email\": \"elsayed.mohammed70@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"CompanyId\": 7,\n    \"ApplicationType\": 1 ,// Web = 0 , Android = 1 , Ios = 2\n    \"FCMToken\": \"fake web or android or ios token\",\n    \"FingerprintMobileCode\":\"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/SignIn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"SignIn"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"OldPassword\": \"12345678\",\n    \"NewPassword\": \"1234567\",\n    \"ConfirmNewPassword\": \"1234567\",\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/ChangePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"ChangePassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Request Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/RequestResetPassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"RequestResetPassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\",\n    \"ResetToken\": \"CfDJ8JIaNsoev7JKvBnV5hqeRiVGRg2wAjqYHfF0VzYuFGlF7P6meMcVwaruwF3ShP8ho3lajP65EKHvlEQtNkPXliEgAnSfXAtvDY1XGGvWGF5RgZTK56JiJJJpamDuNleVRO4RZOJBxOp/PW5oK+2w/G5wRRwqFtqWyrTVVjHIpl1DPiXV3G6S8b/7919HAg5zpA==\",\n    \"NewPassword\": \"12345678\",\n    \"ConfirmNewPassword\": \"12345678\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/ResetPassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"ResetPassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookups",
			"item": [
				{
					"name": "Get Countries",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/Lookups/GetCountries?PagingEnabled=true&PageSize=5&PageNumber=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Lookups",
								"GetCountries"
							],
							"query": [
								{
									"key": "PagingEnabled",
									"value": "true"
								},
								{
									"key": "PageSize",
									"value": "5"
								},
								{
									"key": "PageNumber",
									"value": "0"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Notifications",
			"item": [
				{
					"name": "Get Notifications",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/NotificationStore/GetNotifications?PagingEnabled=true&PageSize=5&PageNumber=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"NotificationStore",
								"GetNotifications"
							],
							"query": [
								{
									"key": "PagingEnabled",
									"value": "true"
								},
								{
									"key": "PageSize",
									"value": "5"
								},
								{
									"key": "PageNumber",
									"value": "1"
								},
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get UnViewed Notification Count",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "lang",
								"value": "en",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/NotificationStore/GetUnViewedNotificationCount",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"NotificationStore",
								"GetUnViewedNotificationCount"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Mark As Viewd",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/NotificationStore/MarkAsViewed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"NotificationStore",
								"MarkAsViewed"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Mark As Read",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/NotificationStore/MarkAsRead?notificationStoreId=13",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"NotificationStore",
								"MarkAsRead"
							],
							"query": [
								{
									"key": "notificationStoreId",
									"value": "13"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Core",
			"item": [
				{
					"name": "Employees",
					"item": [
						{
							"name": "Create Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateEmployeeModelString",
											"value": "{\"IsActive\":true,\"AttendanceType\":1,\"name\":\"AmgadMohamedTest\",\"DirectManagerId\":42,\"email\":\"amgad.mohamed@gmail.com\",\"address\":\"dss\",\"EmployeeType\":1,\"mobileNumber\":\"05544554\",\"mobileCountryId\":65,\"JobTitleId\":1,\"DepartmentId\":15,\"JoiningDate\":\"11/28/2023\",\"AllowChangeFingerprintMobileCode\":\"\",\"ScheduleId\":3,\"AnnualVacationBalance\":25,\"EmployeeNumber\" :\"2901\",\"ZoneIds\": [27]}",
											"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\n\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Amgad/Desktop/3ed89037-5138-4f3c-a148-5fa7af2ffe77.jpg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\":13,\"IsActive\":true,\"AttendanceType\":1,\"name\":\"موظف للتجربة\",\"DirectManagerId\":42,\"email\":\"dawem.app@gmjail.com\",\"address\":\"ش ابن الحكم متفرع من الخنذندار - مربع خالد بن الوليد - القاهرة\",\"EmployeeType\":1,\"mobileCountryId\":65,\"mobileNumber\":\"0554453254\",\"JobTitleId\":1,\"DepartmentId\":15,\"JoiningDate\":\"11/28/2023\",\"AllowChangeFingerprintMobileCode\":\"\",\"ScheduleId\":3,\"AnnualVacationBalance\":25,\"EmployeeNumber\":\"21\",\"ZoneIds\": [4,6,12,13]}",
											"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Photos/WhatsApp Image 2022-11-16 at 5.31.32 PM.jpeg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Get?PageSize=5&PageNumber=0&Code=&DepartmentId=&JobTitleId&ScheduleId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": "دان عبد",
											"disabled": true
										},
										{
											"key": "IsExport",
											"value": "true",
											"disabled": true
										},
										{
											"key": "PagingEnabled",
											"value": "true",
											"disabled": true
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Code",
											"value": ""
										},
										{
											"key": "DepartmentId",
											"value": ""
										},
										{
											"key": "JobTitleId",
											"value": null
										},
										{
											"key": "ScheduleId",
											"value": null
										},
										{
											"key": "DirectManagerId",
											"value": "42",
											"disabled": true
										},
										{
											"key": "EmployeeNumber",
											"value": "21",
											"disabled": true
										},
										{
											"key": "Status",
											"value": "",
											"description": "public enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetForDropDown?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&WithoutCurrentEmployee=false&Status=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "WithoutCurrentEmployee",
											"value": "false"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "16",
											"disabled": true
										},
										{
											"key": "Status",
											"value": "",
											"description": "public enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Enable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Enable?employeeId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Enable"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Disable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Disable?id=30&disableReason=the disable reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Disable"
									],
									"query": [
										{
											"key": "id",
											"value": "30"
										},
										{
											"key": "disableReason",
											"value": "the disable reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Delete?employeeId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Delete"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetInfo?employeeId=72",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetInfo"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "72"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Current Employee Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetCurrentEmployeeInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetCurrentEmployeeInfo"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetById?employeeId=72",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetById"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "72"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetEmployeesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetEmployeesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum AttendanceType\n{\n    FullAttendance,\n    PartialAttendance,\n    FreeOrShiftAttendance\n}\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}\npublic enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}\n\n ```"
				},
				{
					"name": "Department",
					"item": [
						{
							"name": "Create Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"IT DEP ZONE 51\",\r\n  \"isActive\": true,\r\n  \"parentId\": 5,\r\n  \"managerId\": 13,\r\n  \"managerDelegatorIds\": [\r\n    13,14,15\r\n  ],\r\n  \"zoneIds\": [\r\n   4,6\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\" : 15,\r\n  \"name\": \"قسم نظم المعلومات\",\r\n  \"isActive\": true,\r\n  \"parentId\": 14,\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    16,17\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetInfo?departmentid=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetInfo"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetById?departmentid=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetById"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Departments For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "3"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department For Tree",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetForTree?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&ParentId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetForTree"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "IsBaseParent",
											"value": "true",
											"disabled": true
										},
										{
											"key": "ParentId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/delete?departmentid=8",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"delete"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/disable?Id=27&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "27"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/enable?departmentId=14",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"enable"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "14"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Departments Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetDepartmentsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetDepartmentsInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Holiday Type",
					"item": [
						{
							"name": "Create Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Holiday Type 3\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Holiday Type 11\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetInfo?holidayTypeid=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetInfo"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetById?holidayTypeid=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetById"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Types For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/delete?holidayTypeid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"delete"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Types Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetHolydayTypesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetHolydayTypesInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Holidays",
					"item": [
						{
							"name": "Admin",
							"item": [
								{
									"name": "Create Holiday",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"فرح\",\r\n  \"isActive\": true,\r\n  \"dateType\": 0,\r\n  \"startDate\": \"2023-12-23\",\r\n  \"endDate\": \"2023-12-30\",\r\n  \"notes\": \"تجربه البدايه والنهايه\",\r\n  \"isSpecifiedByYear\": false\r\n\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Holiday",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\" : \"12\",\r\n  \"name\": \"عيد الاضحي\",\r\n  \"isActive\": true,\r\n  \"dateType\": 1,\r\n  \"startDate\": \"1445-10-12\",\r\n  \"endDate\": \"1445-14-12\",\r\n  \"notes\": \"عيد الاضحي مدته ابعه ايام\",\r\n   \"isSpecifiedByYear\": false\r\n\r\n}\r\n\r\n\r\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/GetInfo?HolidayId=11",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"GetInfo"
											],
											"query": [
												{
													"key": "HolidayId",
													"value": "11"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/GetById?holidayId=9",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"GetById"
											],
											"query": [
												{
													"key": "holidayId",
													"value": "9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holidays For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "DateType",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holidays For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "ids",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Holiday",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/delete?Holidayid=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"delete"
											],
											"query": [
												{
													"key": "Holidayid",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Holiday",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/enable?HolidayId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"enable"
											],
											"query": [
												{
													"key": "HolidayId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Holiday",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/disable?Id=27&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "27"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holidays Information",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Holiday/GetHolidaiesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Holiday",
												"GetHolidaiesInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Employee",
							"item": [
								{
									"name": "Get Holidays For Employee",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeHoliday/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeHoliday",
												"Get"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "0."
				},
				{
					"name": "Vacation Balance",
					"item": [
						{
							"name": "Create Vacation Balance",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ForType\": 0, // 0 Employees, 1 Groups, 2 Departments\r\n    \"EmployeeId\": 13,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": null,\r\n    \"Year\": 2023,\r\n    \"VacationType\": 0, // 0 Ordinary, 1 Emergency, 2 Sick, 3 FemaleVacation, 4 Other\r\n    \"Balance\": 30,\r\n    \"notes\": \"notes 2000\",\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Vacation Balance",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\":1,\r\n    \"ForType\": 2, // 0 Employees, 1 Groups, 2 Departments\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": 4,\r\n    \"Year\": 2020,\r\n    \"DefaultVacationType\": 1, // 0 Ordinary, 1 Emergency, 2 Sick, 3 FemaleVacation, 4 Other\r\n    \"Balance\": 6,\r\n    \"notes\": \"notes 2000\",\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/GetInfo?vacationBalanceId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"GetInfo"
									],
									"query": [
										{
											"key": "vacationBalanceId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/GetById?vacationBalanceId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"GetById"
									],
									"query": [
										{
											"key": "vacationBalanceId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=&Code=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "FreeText",
											"value": "",
											"description": "search employee name "
										},
										{
											"key": "Code",
											"value": "7"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/delete?vacationBalanceId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"delete"
									],
									"query": [
										{
											"key": "vacationBalanceId",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Vacation Balances Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationBalance/GetVacationBalancesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationBalance",
										"GetVacationBalancesInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "public enum ForType  \n{  \nEmployees,  \nGroups,  \nDepartments  \n}\n\npublic enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Sign Up",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"CompanyId\": \"7\",\r\n    \"EmployeeNumber\": \"21\",\r\n    \"Name\": \"Mostafa Dar4\",\r\n    \"Email\": \"mostafaabdelmaaboud3@gmail.com\",\r\n    \"Password\": \"123456\",\r\n    \"ConfirmPassword\": \"123456\",\r\n    \"MobileCountryId\": 65,\r\n    \"MobileNumber\": \"01011319559\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/SignUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"SignUp"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Verify Email",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": \"58\",\r\n    \"VerificationCode\": \"048919\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/VerifyEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"VerifyEmail"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Send Verification Code",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": \"58\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/SendVerificationCode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"SendVerificationCode"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateUserModelString",
											"value": "{\"EmployeeId\": \"13\",\n    \"Name\": \"Test User\",\n\"Email\": \"elsayed.mohammedtest@gmail.com\",\n\"Password\": \"123456\",\n\"ConfirmPassword\": \"123456\",\"mobileCountryId\":65,\n\"MobileNumber\": \"011026366233\",\n\"Roles\":[31,32],\n    \"IsAdmin\": true,\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Pictures/نبيل.png"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateUserModelString",
											"value": "{\"Id\": \"70\",   \n\"EmployeeId\": \"13\",\n    \"Name\": \"Test User\",\n\"Email\": \"elsayed.mohammedtest@gmail.com\",\n\"Password\": \"123456\",\n\"ConfirmPassword\": \"123456\",\"mobileCountryId\":65,\n\"MobileNumber\": \"011026366233\",\n\"Roles\":[31,33,34],\n    \"IsAdmin\": true,\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/file.jpg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/User/Delete?userId=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Delete"
									],
									"query": [
										{
											"key": "userId",
											"value": "15"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetInfo?userId=70",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetInfo"
									],
									"query": [
										{
											"key": "userId",
											"value": "70"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetById?userId=70",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetById"
									],
									"query": [
										{
											"key": "userId",
											"value": "70"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/User/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=كيلاني",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										},
										{
											"key": "FreeText",
											"value": "كيلاني"
										},
										{
											"key": "Code",
											"value": "10",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Users For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Users Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetUsersInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetUsersInformations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Role For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Role/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Role",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Job Titles",
					"item": [
						{
							"name": "Create Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Job Title 2\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"مسمي وظيفي تجربة\",\r\n  \"isActive\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetInfo?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetInfo"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetById?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetById"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Titles For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/delete?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"delete"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Titles Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetJobTitlesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetJobTitlesInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Create Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"string\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n   13,14,15\r\n  ],\r\n  \"groupManagerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n   17,18,19\r\n  ],\r\n  \"zoneIds\": [\r\n    4,6\r\n  ]\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 29,\r\n  \"name\": \"Group After Add Zone Update\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n    15,17\r\n  ],\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    19\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}\r\n"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetInfo?groupId=29",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetInfo"
									],
									"query": [
										{
											"key": "groupId",
											"value": "29"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetById?groupId=29",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetById"
									],
									"query": [
										{
											"key": "groupId",
											"value": "29"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "ids",
											"value": "1",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/delete?groupId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"delete"
									],
									"query": [
										{
											"key": "groupId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/enable?groupId=27",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"enable"
									],
									"query": [
										{
											"key": "groupId",
											"value": "27"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/disable?Id=27&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "27"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetGroupsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetGroupsInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Zones",
					"item": [
						{
							"name": "Create Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Ahmed Nasr Zone 1\",\r\n  \"isActive\": true,\r\n  \"latitude\": 29.91045434030701,\r\n  \"longitude\": 30.947295846446366,\r\n  \"radius\": 5000\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 11,\r\n  \"name\": \"HR Department Zone Updated 11 \",\r\n  \"isActive\": true,\r\n  \"latitude\": 99.0000000,\r\n  \"longitude\": 170.0000000,\r\n  \"radius\": 200\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetInfo?zoneId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetInfo"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetById?zoneId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetById"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zones For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids=4&Ids=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "4"
										},
										{
											"key": "Ids",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/enable?zoneId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"enable"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/disable?Id=1&DisableReason=NotUsingYet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "NotUsingYet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/delete?zoneId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"delete"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zones Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetZonesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetZonesInformations"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "General",
			"item": [
				{
					"name": "Get Week Days For Dropdown",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/General/GetWeekDays",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"General",
								"GetWeekDays"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Schedules",
			"item": [
				{
					"name": "Schedules",
					"item": [
						{
							"name": "Create Schedule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"دوام 1\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"WeekDay\": 0,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 1,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 2,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 3,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 4,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 5,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 6,\r\n            \"ShiftId\": 2\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Schedule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"3\",\r\n    \"name\": \"دوام 7\",\r\n    \"notes\": \"notes 7\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"id\": 4,\r\n            \"weekDay\": 0,\r\n            \"shiftId\": 4\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"weekDay\": 1,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"weekDay\": 2,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"weekDay\": 3,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 8,\r\n            \"weekDay\": 4,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 9,\r\n            \"weekDay\": 5,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 10,\r\n            \"weekDay\": 6,\r\n            \"shiftId\": 3\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Delete?ScheduleId=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Delete"
									],
									"query": [
										{
											"key": "ScheduleId",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetInfo?scheduleId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetInfo"
									],
									"query": [
										{
											"key": "scheduleId",
											"value": "3"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetById?scheduleId=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetById"
									],
									"query": [
										{
											"key": "scheduleId",
											"value": "3"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules For Gid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetSchedulesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetSchedulesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Shift Working Time",
					"item": [
						{
							"name": "Create Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Shift 4\",\r\n  \"timePeriod\": 1, //0 am, 1 pm\r\n  \"checkInTime\": \"20:00:00\",\r\n  \"checkOutTime\": \"11:00:00\",\r\n  \"allowedMinutes\": 30,\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"2\",\r\n  \"name\": \"Shift 3 After Edit\",\r\n  \"timePeriod\": 0,  //0 am, 1 pm\r\n  \"checkInTime\": \"07:00:00\",\r\n  \"checkOutTime\": \"11:30:00\",\r\n  \"allowedMinutes\": 10,\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetInfo?ShiftWorkingTimeId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetInfo"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetById?ShiftWorkingTimeId=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetById"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/delete?ShiftWorkingTimeId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"delete"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/enable?ShiftWorkingTimeId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"enable"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/disable?Id=1&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Times Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetShiftWorkingTimesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetShiftWorkingTimesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedule Plan",
					"item": [
						{
							"name": "Create Schedule Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SchedulePlanType\": 2, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": 15,\r\n    \"ScheduleId\": 2,\r\n    \"DateFrom\": \"03/01/2024\",\r\n    \"notes\": \"notes 200\",\r\n    \"isActive\": true\r\n}\r\n\r\n/*public enum SchedulePlanType\r\n{\r\n        Employees,\r\n        Groups,\r\n        Departments\r\n}*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Schedule Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"6\",\r\n    \"SchedulePlanType\": 1, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": 4,\r\n    \"DepartmentId\": null,\r\n    \"ScheduleId\": 3,\r\n    \"DateFrom\": \"2024-01-02\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Delete?schedulePlanId=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Delete"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetInfo?schedulePlanId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetInfo"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "6"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetById?schedulePlanId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetById"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "9"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans For Gid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Code=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "FreeText",
											"value": "جزئي",
											"disabled": true
										},
										{
											"key": "Code",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetSchedulePlansInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetSchedulePlansInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedule Plan Logs",
					"item": [
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text",
											"disabled": true
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlanLog/GetInfo?schedulePlanLogId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlanLog",
										"GetInfo"
									],
									"query": [
										{
											"key": "schedulePlanLogId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlanLog/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlanLog",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plan Log Employees",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlanLog/GetSchedulePlanLogEmployees?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&SchedulePlanLogId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlanLog",
										"GetSchedulePlanLogEmployees"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "SchedulePlanLogId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum ForType\n{\n    Employees,\n    Groups,\n    Departments\n}\n\n ```"
				}
			]
		},
		{
			"name": "Attendances",
			"item": [
				{
					"name": "Employee Attendances",
					"item": [
						{
							"name": "Create FingerPrint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Latitude\": \"28.663108\",\r\n    \"Longitude\": \"30.814411\",\r\n    \"Type\": 1,\r\n    \"RecognitionWay\": 1,\r\n    \"FingerprintMobileCode\":\"\"\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/CreateFingerPrint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"CreateFingerPrint"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Current FingerPrint Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetCurrentFingerPrintInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetCurrentFingerPrintInfo"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetInfo?employeeAttendanceId=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetInfo"
									],
									"query": [
										{
											"key": "employeeAttendanceId",
											"value": "2"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employee Attendances On Month",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/Get?Month=11&Year=2023",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"Get"
									],
									"query": [
										{
											"key": "Month",
											"value": "11"
										},
										{
											"key": "Year",
											"value": "2023"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Attendances",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetAttendances?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetAttendances"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/delete?Id=23&Type=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"delete"
									],
									"query": [
										{
											"key": "Id",
											"value": "23"
										},
										{
											"key": "Type",
											"value": "2",
											"description": "public enum DeleteEmployeeAttendanceType\n{\n   CheckIn,\n   CheckOut,\n   Both\n}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Employees Attendances Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetEmployeesAttendancesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetEmployeesAttendancesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum EmployeeAttendanceStatus\n{\n    Success,\n    Warning,\n    Error\n}\npublic enum FingerPrintType // Type with Create Finger Print\n{\n    CheckIn,\n    CheckOut,\n    BreakIn,\n    BreakOut,\n    Summon\n}\npublic enum EmployeeStatus\n{\n    NotAttendYet,\n    AtWork,\n    AttendThenLeaved,\n    LeavedOnly\n}\npublic enum RecognitionWay\n{\n    NotSet,\n    FingerPrint,\n    FaceRecognition,\n    VoiceRecognition,\n    PaternRecognition,\n    PinRecognition,\n    PasswordRecognition\n}\npublic enum FingerprintCheckType // defaultCheckType in Get Current FingerPrint Info\n{\n    NotDefined,\n    CheckIn,\n    CheckOut,\n    Summon\n}\npublic enum DeleteEmployeeAttendanceType\n{\n   CheckIn, بصمة الدخول\n   CheckOut, بصمة الخروج\n   Both كلاهما\n}\n\n ```"
				},
				{
					"name": "Fingerprint Devices",
					"item": [
						{
							"name": "Create Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.33.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.5.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetInfo?fingerprintDeviceid=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetInfo"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetById?fingerprintDeviceid=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetById"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Devices For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										},
										{
											"key": "FreeText",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/delete?fingerprintDeviceid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"delete"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/disable?Id=1&DisableReason=NotUsingYet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "NotUsingYet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/enable?fingerprintDeviceId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"enable"
									],
									"query": [
										{
											"key": "fingerprintDeviceId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Devices Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetFingerprintDevicesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetFingerprintDevicesInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				}
			]
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Task Request",
							"item": [
								{
									"name": "Create Task Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestTaskModelString",
													"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"02/18/2023\",\"DateTo\":\"02/18/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ULTIMA-USER-GUIDE.pdf"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Task Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestTaskModelString",
													"value": "{\"Id\":2,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Task Requests For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": "المعلاوي",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Code",
													"value": "1",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Reject?id=1&RejectReason=the reject reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the reject reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/GetInfo?requestId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "5"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/GetById?requestId=131",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "131"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Tasks Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestTask/GetTasksInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestTask",
												"GetTasksInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Vacation Request",
							"item": [
								{
									"name": "Create Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestVacationModelString",
													"value": "{\"IsNecessary\":true,\"ForEmployee\":true,\"EmployeeId\":13,\"VacationTypeId\":8,\"DateFrom\":\"02/08/2023\",\"DateTo\":\"02/08/2023\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestVacationModelString",
													"value": "{\"Id\":4,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"VacationTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Vacation Requests For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Accept?requestId=99",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "99"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Reject?id=1&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/GetInfo?requestId=103",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "103"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/GetById?requestId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "4"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Vacations Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestVacation/GetVacationsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestVacation",
												"GetVacationsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Request",
							"item": [
								{
									"name": "Create Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestPermissionModelString",
													"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"PermissionTypeId\":1,\"DateFrom\":\"02/18/2024 11:30\",\"DateTo\":\"02/18/2024 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestPermissionModelString",
													"value": "{\"Id\":151,\"IsNecessary\":true,\"ForEmployee\":false,\"PermissionTypeId\":6,\"DateFrom\":\"12/13/2024 11:30\",\"DateTo\":\"12/13/2024 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Dawem Collection.postman_collection.json"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Permission Requests For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&IsExport=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": "المعلاوي",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Code",
													"value": "75",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "false"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Reject?id=1&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/GetInfo?requestId=195",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "195"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/GetById?requestId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "4"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Permissions Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestPermission/GetPermissionsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestPermission",
												"GetPermissionsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Assignment Request",
							"item": [
								{
									"name": "Create Assignment Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestAssignmentModelString",
													"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"AssignmentTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Assignment Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestAssignmentModelString",
													"value": "{\"Id\":13,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"AssignmentTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/11.PNG"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Assignment Requests For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=هند",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "FreeText",
													"value": "هند"
												},
												{
													"key": "Code",
													"value": "93",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Accept?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Reject?id=13&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "13"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/GetInfo?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/GetById?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Assignments Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestAssignment/GetAssignmentsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestAssignment",
												"GetAssignmentsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Justification Request",
							"item": [
								{
									"name": "Create Justification Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestJustificationModelString",
													"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"JustificationTypeId\":1,\"DateFrom\":\"01/05/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Justification Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestJustificationModelString",
													"value": "{\"id\":149,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"JustificationTypeId\":1,\"DateFrom\":\"01/06/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Amgad/Desktop/Warning.jpg"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Justification Requests For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Accept?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Reject?id=13&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "13"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/GetInfo?requestId=297",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "297"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/GetById?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Justifications Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/RequestJustification/GetJustificationsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"RequestJustification",
												"GetJustificationsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Request",
							"item": [
								{
									"name": "Get",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": "Assignment Typ",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/GetInfo?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/Reject?id=1&refuseReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "refuseReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Requests Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Request/GetRequestsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Request",
												"GetRequestsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Employee",
					"item": [
						{
							"name": "Task Request",
							"item": [
								{
									"name": "Create Task Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestTaskModelString",
													"value": "{\"IsNecessary\":true,\"TaskTypeId\":1,\"DateFrom\":\"04/02/2024 00:30:00\",\"DateTo\":\"04/02/2024 01:30:00\",\"TaskEmployeeIds\":[13],\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ULTIMA-USER-GUIDE.pdf"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Task Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestTaskModelString",
													"value": "{\"Id\":2,\"IsNecessary\":true,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Task Requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Get?Month=2&year=2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Get"
											],
											"query": [
												{
													"key": "Month",
													"value": "2"
												},
												{
													"key": "year",
													"value": "2024"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Reject?id=1&RejectReason=the reject reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the reject reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/GetInfo?requestId=131",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "131"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestTask/GetById?requestId=130",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestTask",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "130"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Vacation Request",
							"item": [
								{
									"name": "Create Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestVacationModelString",
													"value": "{\"IsNecessary\":true,\"VacationTypeId\":4,\"DateFrom\":\"02/05/2023\",\"DateTo\":\"02/10/2023\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestVacationModelString",
													"value": "{\"Id\":4,\"IsNecessary\":true,\"VacationTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Vacation Requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&VacationStatus=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "VacationStatus",
													"value": "2",
													"description": "public enum VacationStatus\n{\n    Previous,\n    Current,        \n    Next\n}"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Accept?requestId=7",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "7"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Reject?id=1&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetInfo?requestId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "4"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetById?requestId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "4"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Vacations Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetVacationsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestVacation",
												"GetVacationsInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "public enum VacationStatus  \n{  \nPrevious,  \nCurrent,  \nNext  \n}"
						},
						{
							"name": "Permission Request",
							"item": [
								{
									"name": "Create Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestPermissionModelString",
													"value": "{\"IsNecessary\":true,\"PermissionTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Vacation Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestPermissionModelString",
													"value": "{\"Id\":11,\"IsNecessary\":true,\"PermissionTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Dawem Collection.postman_collection.json"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Permission Requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Reject?id=1&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/GetInfo?requestId=11",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "11"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestPermission/GetById?requestId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestPermission",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "4"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Assignment Request",
							"item": [
								{
									"name": "Create Assignment Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestAssignmentModelString",
													"value": "{\"IsNecessary\":true,\"AssignmentTypeId\":1,\"DateFrom\":\"01/05/2023 11:30\",\"DateTo\":\"01/06/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Assignment Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestAssignmentModelString",
													"value": "{\"Id\":13,\"IsNecessary\":true,\"AssignmentTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/11.PNG"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Assignment Requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Get?Month=12&year=2023",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Get"
											],
											"query": [
												{
													"key": "Month",
													"value": "12"
												},
												{
													"key": "year",
													"value": "2023"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Accept?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Reject?id=13&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "13"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/GetInfo?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/GetById?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestAssignment",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Justification Request",
							"item": [
								{
									"name": "Create Justification Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateRequestJustificationModelString",
													"value": "{\"IsNecessary\":true,\"JustificationTypeId\":1,\"DateFrom\":\"01/05/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Justification Request",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateRequestJustificationModelString",
													"value": "{\"Id\":13,\"IsNecessary\":true,\"JustificationTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
													"type": "text"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/11.PNG"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Justification Requests",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Accept?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Reject?id=13&RejectReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "13"
												},
												{
													"key": "RejectReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/GetInfo?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequestJustification/GetById?requestId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequestJustification",
												"GetById"
											],
											"query": [
												{
													"key": "requestId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Request",
							"item": [
								{
									"name": "Get",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequest/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequest",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequest/GetInfo?requestId=11",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequest",
												"GetInfo"
											],
											"query": [
												{
													"key": "requestId",
													"value": "11"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequest/Accept?requestId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequest",
												"Accept"
											],
											"query": [
												{
													"key": "requestId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Reject",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequest/Reject?id=1&refuseReason=the refuse reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequest",
												"Reject"
											],
											"query": [
												{
													"key": "id",
													"value": "1"
												},
												{
													"key": "refuseReason",
													"value": "the refuse reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeRequest/Delete?requestId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeRequest",
												"Delete"
											],
											"query": [
												{
													"key": "requestId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Request Types",
					"item": [
						{
							"name": "Assignment Type",
							"item": [
								{
									"name": "Create Assignment Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Assignment Type 5\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Assignment Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":5,\r\n  \"name\": \"Assignment Type 55\",\r\n  \"isActive\": false\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Type Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/GetInfo?assignmentTypeId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"GetInfo"
											],
											"query": [
												{
													"key": "assignmentTypeId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Type by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/GetById?assignmentTypeId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"GetById"
											],
											"query": [
												{
													"key": "assignmentTypeId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Types For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Type For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Assignment Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/delete?assignmentTypeId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"delete"
											],
											"query": [
												{
													"key": "assignmentTypeId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Assignment Types Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AssignmentType/GetAssignmentTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AssignmentType",
												"GetAssignmentTypesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Task Type",
							"item": [
								{
									"name": "Create Task Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Task Type 3\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Task Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":3,\r\n  \"name\": \"Task Type 33\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Task Type Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/GetInfo?taskTypeid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"GetInfo"
											],
											"query": [
												{
													"key": "taskTypeid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Task Type by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/GetById?taskTypeid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"GetById"
											],
											"query": [
												{
													"key": "taskTypeid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Task Types For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Task Type For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Task Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/delete?taskTypeid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"delete"
											],
											"query": [
												{
													"key": "taskTypeid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Task Types Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/TaskType/GetTaskTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"TaskType",
												"GetTaskTypesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Justification Type",
							"item": [
								{
									"name": "Create Justification Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Tabreer 4\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Justification Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Tabreer 6 edited\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Justification Type Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/GetInfo?justificationTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"GetInfo"
											],
											"query": [
												{
													"key": "justificationTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Justification Type By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/GetById?justificationTypeId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"GetById"
											],
											"query": [
												{
													"key": "justificationTypeId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Justification Type For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Justification Type For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Justification Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/delete?justificationTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"delete"
											],
											"query": [
												{
													"key": "justificationTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Justification Types Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JustificationType/GetJustificationTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JustificationType",
												"GetJustificationTypesInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Type",
							"item": [
								{
									"name": "Create Permission Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Permission type 1\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Permission Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Permision 1 edited\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Type Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/GetInfo?permissionTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"GetInfo"
											],
											"query": [
												{
													"key": "permissionTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Type By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/GetById?permissionTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"GetById"
											],
											"query": [
												{
													"key": "permissionTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Type For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Type For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Permission Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/delete?permissionTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"delete"
											],
											"query": [
												{
													"key": "permissionTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Types Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionType/GetPermissionTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionType",
												"GetPermissionTypesInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Vacation Type",
							"item": [
								{
									"name": "Create Vacation Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"عارضة\",\r\n  \"isActive\": true,\r\n  \"DefaultType\":0 \r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Vacation Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Vacation 22 edited\",\r\n  \"DefaultType\":0 ,\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Type Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/GetInfo?VacationTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"GetInfo"
											],
											"query": [
												{
													"key": "VacationTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Type By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/GetById?VacationTypeId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"GetById"
											],
											"query": [
												{
													"key": "VacationTypeId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Type For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Type For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/GetForDropDown?IsExport=false&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Vacation Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/delete?VacationTypeId=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"delete"
											],
											"query": [
												{
													"key": "VacationTypeId",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Types Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationType/GetVacationTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationType",
												"GetVacationTypesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "public enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
						}
					],
					"description": "public enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
				}
			],
			"description": "public enum RequestType  \n{  \nAssignment,  \nJustifications,  \nPermissions,  \nTask,  \nVacations  \n}\n\npublic enum RequestStatus  \n{  \nPending,  \nAccepted,  \nRejected  \n}"
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Get Header Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetHeaderInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetHeaderInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees Attendances Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesAttendancesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetEmployeesAttendancesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Requests Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetRequestsStatus?Type=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetRequestsStatus"
									],
									"query": [
										{
											"key": "DateFrom",
											"value": "01-01-2023",
											"disabled": true
										},
										{
											"key": "DateTo",
											"value": "01-01-2024",
											"disabled": true
										},
										{
											"key": "Type",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesStatus",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetEmployeesStatus"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Departments Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetDepartmentsInformations?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Type=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetDepartmentsInformations"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Type",
											"value": "1",
											"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
										},
										{
											"key": "DateFrom",
											"value": "01-01-2023",
											"disabled": true
										},
										{
											"key": "DateTo",
											"value": "06-06-2023",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees Attendances Status",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesAttendancesStatus?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=9&Type=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetEmployeesAttendancesStatus"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "9"
										},
										{
											"key": "Type",
											"value": "1",
											"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
										},
										{
											"key": "DateFrom",
											"value": "01-01-2023",
											"disabled": true
										},
										{
											"key": "DateTo",
											"value": "06-06-2023",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Best Employees",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Dashboard/GetBestEmployees?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Type=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Dashboard",
										"GetBestEmployees"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Type",
											"value": "1",
											"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
										},
										{
											"key": "DateFrom",
											"value": "01-01-2023",
											"disabled": true
										},
										{
											"key": "DateTo",
											"value": "06-06-2023",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Employee",
					"item": [
						{
							"name": "Get Header Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeDashboard/GetHeaderInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeDashboard",
										"GetHeaderInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Permissions",
					"item": [
						{
							"name": "Create Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ForType\": 1, // 0 Role  1 User\r\n    \"UserId\": 71,\r\n    \"RoleId\": null,\r\n    \"PermissionScreens\": [\r\n        {\r\n            \"ScreenCode\": 0,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 0\r\n                },\r\n                {\r\n                    \"ActionCode\": 1\r\n                }/*,\r\n                {\r\n                    \"ActionCode\": 3\r\n                }*/\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenCode\": 1,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenCode\": 2,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 0\r\n                },\r\n                {\r\n                    \"ActionCode\": 1\r\n                },\r\n                {\r\n                    \"ActionCode\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenCode\": 3,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 0\r\n                },\r\n                {\r\n                    \"ActionCode\": 1\r\n                },\r\n                {\r\n                    \"ActionCode\": 2\r\n                },\r\n                {\r\n                    \"ActionCode\": 3\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Permission/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 5,\r\n    \"ForType\": 1, // 0 Role  1 User\r\n    \"UserId\": 58,\r\n    \"RoleId\": null,\r\n    \"permissionScreens\": [\r\n        {\r\n            \"screenCode\": 0,\r\n            \"permissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 0\r\n                },\r\n                {\r\n                    \"ActionCode\": 1\r\n                },\r\n                {\r\n                    \"ActionCode\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenCode\": 1,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 3\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenCode\": 2,\r\n            \"PermissionScreenActions\": [\r\n                {\r\n                    \"ActionCode\": 0\r\n                },\r\n                {\r\n                    \"ActionCode\": 1\r\n                },\r\n                {\r\n                    \"ActionCode\": 2\r\n                }\r\n            ]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Permission/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetInfo?permissionId=12",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetInfo"
									],
									"query": [
										{
											"key": "permissionId",
											"value": "12"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Screens",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetPermissionScreens?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&PermissionId=12&FreeText=&ScreenCode&ActionCode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetPermissionScreens"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "PermissionId",
											"value": "12"
										},
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "ScreenCode",
											"value": null
										},
										{
											"key": "ActionCode",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetById?permissionId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetById"
									],
									"query": [
										{
											"key": "permissionId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Check And Get Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/CheckAndGetPermission?RoleId=32",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"CheckAndGetPermission"
									],
									"query": [
										{
											"key": "RoleId",
											"value": "32"
										},
										{
											"key": "UserId",
											"value": "74",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permissions For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=&ScreenCode&ActionCode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "ScreenCode",
											"value": null
										},
										{
											"key": "ActionCode",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/delete?permissionId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"delete"
									],
									"query": [
										{
											"key": "permissionId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permissions Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetPermissionsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetPermissionsInformations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Permission Logs",
					"item": [
						{
							"name": "Get Permission Log Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/PermissionLog/GetInfo?permissionLogId=330",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionLog",
										"GetInfo"
									],
									"query": [
										{
											"key": "permissionLogId",
											"value": "330"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Logs",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionLog/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionLog",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Helpers",
					"item": [
						{
							"name": "Get All Screens With Available Actions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetAllScreensWithAvailableActions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetAllScreensWithAvailableActions"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Role For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Role/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Role",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Current User Permissions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Permission/GetCurrentUserPermissions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Permission",
										"GetCurrentUserPermissions"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "``` csharp\n public enum ApplicationScreenCode\n {\n     AssignmentType,\n     Dashboard,\n     Department,\n     Employee,\n     EmployeeAttendance,\n     EmployeeDashboard,\n     EmployeeHoliday,\n     EmployeeRequest,\n     EmployeeRequestAssignment,\n     EmployeeRequestJustification,\n     EmployeeRequestPermission,\n     EmployeeRequestTask,\n     EmployeeRequestVacation,\n     FingerprintDevice,\n     Group,\n     Holiday,\n     HolidayType,\n     JobTitle,\n     JustificationType,\n     Permission,\n     PermissionLog,\n     PermissionType,\n     Request,\n     RequestAssignment,\n     RequestJustification,\n     RequestPermission,\n     RequestTask,\n     RequestVacation,\n     Role,\n     Schedule,\n     SchedulePlan,\n     SchedulePlanBackgroundJobLog,\n     ShiftWorkingTime,\n     TaskType,\n     User,\n     VacationBalance,\n     VacationType,\n     Zone\n }\n public enum ApplicationAction\n{\n    AdditionAction, // الاضافة\n    EditAction,// التعديل\n    DeletionAction,// الحذف\n    ViewingAction,// المشاهدة\n    AcceptAction,// القبول\n    RejectAction,// الرفض\n    EnableAction,// التفعيل\n    DisableAction// التعطيل\n}\npublic enum ForRoleOrUser\n{\n    Role,\n    User\n}\n\n ```"
		},
		{
			"name": "Summons",
			"item": [
				{
					"name": "Sanctions",
					"item": [
						{
							"name": "Create Sanction",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Test Sanction 5\",\r\n    \"type\": 0,\r\n    \"WarningMessage\": \"يجب تسجيل البصمة والا يتم إرسال انذار\",\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Sanction",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 5,\r\n    \"name\": \"Test Sanction 5 Edited\",\r\n    \"type\": 0,\r\n    \"WarningMessage\": \"يجب تسجيل البصمة والا يتم إرسال انذار\",\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sanction Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/GetInfo?sanctionId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"GetInfo"
									],
									"query": [
										{
											"key": "sanctionId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sanction by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/GetById?sanctionId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"GetById"
									],
									"query": [
										{
											"key": "sanctionId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sanctions For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sanction For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Sanction",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/delete?sanctionId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"delete"
									],
									"query": [
										{
											"key": "sanctionId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Sanction",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/disable?Id=4&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "4"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Sanction",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/enable?sanctionId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"enable"
									],
									"query": [
										{
											"key": "sanctionId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Sanctions Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Sanction/GetSanctionsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Sanction",
										"GetSanctionsInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum SanctionType نوع الجزاء\n{\n    Notification, // تنبيه\n    CancelDayFingerprint  // الغاء بصمة اليوم\n}\n\n ```"
				},
				{
					"name": "Summons",
					"item": [
						{
							"name": "Create Summon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"forType\": 2,\r\n    \"forAllEmployees\": null, // boolean\r\n    \"allowedTime\": 60,\r\n    \"TimeType\": 0,\r\n    \"notifyWays\": [\r\n        0,\r\n        1\r\n    ],\r\n    \"DateAndTime\": \"2018-03-29 13:40\",   \r\n    \"Employees\": [\r\n        77,\r\n        78\r\n    ], // list\r\n    \"Groups\": [\r\n        16,\r\n        17,\r\n        28,\r\n        30\r\n    ], // list\r\n    \"Departments\":[\r\n        28,\r\n        29,\r\n        30\r\n    ], // list\r\n    \"Sanctions\": [\r\n        1,\r\n        2\r\n    ], // list\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Summon/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Summon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 5,\r\n    \"forType\": 0,\r\n    \"forAllEmployees\": null, // boolean\r\n    \"allowedTime\": 30,\r\n    \"TimeType\": 0,\r\n    \"notifyWays\": [\r\n        0,\r\n        1\r\n    ],\r\n    \"DateAndTime\": \"2018-03-29 13:40\",   \r\n    \"Employees\": [\r\n        78\r\n    ], // list\r\n    \"Groups\": null, // list\r\n    \"Departments\": null, // list\r\n    \"Sanctions\": [\r\n        1,\r\n        2\r\n    ], // list\r\n    \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Summon/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summon Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Summon/GetInfo?summonId=8",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"GetInfo"
									],
									"query": [
										{
											"key": "summonId",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summon by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Summon/GetById?summonId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"GetById"
									],
									"query": [
										{
											"key": "summonId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summons For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Summon/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Summon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Summon/delete?summonId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"delete"
									],
									"query": [
										{
											"key": "summonId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Summon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Summon/disable?Id=5&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "5"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Summon",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Summon/enable?summonId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"enable"
									],
									"query": [
										{
											"key": "summonId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summons Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Summon/GetSummonsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Summon",
										"GetSummonsInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum ForType\n{\n    Employees,\n    Groups,\n    Departments\n}\npublic enum TimeType\n{\n     Second,\n     Minute,\n     Hour\n}\npublic enum NotifyWay\n{\n    OnApp,\n    Email\n}\n\n ```"
				},
				{
					"name": "Summon Missing Logs",
					"item": [
						{
							"name": "Get Summon Missing Log Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/SummonMissingLog/GetInfo?summonMissingLogId=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SummonMissingLog",
										"GetInfo"
									],
									"query": [
										{
											"key": "summonMissingLogId",
											"value": "25"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summon Missing Logs For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SummonMissingLog/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SummonMissingLog",
										"Get"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": "",
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Summon Missing Logs Informations",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/SummonMissingLog/GetSummonMissingLogsInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SummonMissingLog",
										"GetSummonMissingLogsInformations"
									]
								}
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum ForType\n{\n    Employees,\n    Groups,\n    Departments\n}\npublic enum TimeType\n{\n     Second,\n     Minute,\n     Hour\n}\npublic enum NotifyWay\n{\n    OnApp,\n    Email\n}\n\n ```"
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Get Attendance Summary",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/AttendanceSummaryReport/GetAttendanceSummary?PagingEnabled=true&PageSize=5&PageNumber=0&DateFrom=10-18-2023&DateTo=12-12-2023&EmployeesIds=13",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"AttendanceSummaryReport",
								"GetAttendanceSummary"
							],
							"query": [
								{
									"key": "PagingEnabled",
									"value": "true"
								},
								{
									"key": "PageSize",
									"value": "5"
								},
								{
									"key": "PageNumber",
									"value": "0"
								},
								{
									"key": "DateFrom",
									"value": "10-18-2023"
								},
								{
									"key": "DateTo",
									"value": "12-12-2023"
								},
								{
									"key": "FreeText",
									"value": "معلاوي",
									"disabled": true
								},
								{
									"key": "IsExport",
									"value": "true",
									"description": "assign true if you need all data to export in pdf or excel",
									"disabled": true
								},
								{
									"key": "EmployeesIds",
									"value": "13"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": [
						{
							"name": "Get Attendance Summary",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/AttendanceSummaryReport/GetAttendanceSummary?PagingEnabled=true&PageSize=5&PageNumber=0&DateFrom=10-18-2023&DateTo=12-12-2023&EmployeesIds=13",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AttendanceSummaryReport",
										"GetAttendanceSummary"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "DateFrom",
											"value": "10-18-2023"
										},
										{
											"key": "DateTo",
											"value": "12-12-2023"
										},
										{
											"key": "FreeText",
											"value": "معلاوي",
											"disabled": true
										},
										{
											"key": "IsExport",
											"value": "true",
											"description": "assign true if you need all data to export in pdf or excel",
											"disabled": true
										},
										{
											"key": "EmployeesIds",
											"value": "13"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "409"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "Date",
									"value": "Mon, 18 Mar 2024 20:33:56 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"employeeId\": 13,\n            \"employeeNumber\": 21, //  الرقم الوظيفي\n            \"employeeName\": \"امجد المعلاوي\",  //  إسم الموظف\n            \"shouldAttendCount\": \"48 يوم\",  // الحضور الإفتراضي\n            \"actualAttendCount\": \"9 يوم\",  // الحضور الفعلي\n            \"vacationsCount\": \"0 يوم\",  // الأجازات\n            \"absencesCount\": \"39 يوم\",  // الغياب\n            \"workingHoursCount\": \"61.30 ساعة\",  // وقت العمل\n            \"lateArrivalsCount\": \"19.42 ساعة\",  // التأخير\n            \"earlyDeparturesCount\": \"9.03 ساعة\",  // المغادرة مبكرا\n            \"overTimeCount\": \"48.81 ساعة\"  // الوقت الإضافي\n        }\n    ],\n    \"totalCount\": 1\n}"
						}
					]
				}
			]
		},
		{
			"name": "Excel",
			"item": [
				{
					"name": "Employees",
					"item": [
						{
							"name": "Export Draft",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/CreateExportDraft",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"CreateExportDraft"
									]
								}
							},
							"response": []
						},
						{
							"name": "Import Employees From Excel",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "/C:/Users/Amgad/Downloads/DraftExample.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/CreateImportDataFromExcel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"CreateImportDataFromExcel"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}