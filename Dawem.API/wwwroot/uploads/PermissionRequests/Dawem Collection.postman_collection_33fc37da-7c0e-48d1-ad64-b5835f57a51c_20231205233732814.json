{
	"info": {
		"_postman_id": "265bda67-302e-437d-834f-2e54887e644a",
		"name": "Dawem Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30670245"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Verify Company Code",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Email\": \"elsayed.mohammedshouse@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"CompanyCode\": null,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/VerifyCompanyCode?identityCode=FRTBFEDRFG",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"VerifyCompanyCode"
							],
							"query": [
								{
									"key": "identityCode",
									"value": "FRTBFEDRFG"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "SignUp",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"companyName\": \"AmgadElsayedForCompanyCode\",\n    \"companyCountryId\": 65,\n    \"companyAddress\": \"No Address For Company Code\",\n    \"companyEmail\": \"elsayed.mohammed70ForCompanyCode@gmail.com\",\n    \"password\": \"123456\",\n    \"confirmPassword\": \"123456\",\n    \"userEmail\": \"elsayed.mohammed70ForCompanyCode@gmail.com\",\n    \"userMobileNumber\": \"010254215478\",\n    \"name\": \"Amgad Elsayed For Company Code\",\n    \"agreed\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/SignUp",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"SignUp"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "SignIn",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Email\": \"elsayed.mohammed70@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"CompanyId\": 7,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/SignIn",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"SignIn"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"OldPassword\": \"12345678\",\n    \"NewPassword\": \"1234567\",\n    \"ConfirmNewPassword\": \"1234567\",\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/ChangePassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"ChangePassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Request Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/RequestResetPassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"RequestResetPassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\",\n    \"ResetToken\": \"CfDJ8JIaNsoev7JKvBnV5hqeRiVGRg2wAjqYHfF0VzYuFGlF7P6meMcVwaruwF3ShP8ho3lajP65EKHvlEQtNkPXliEgAnSfXAtvDY1XGGvWGF5RgZTK56JiJJJpamDuNleVRO4RZOJBxOp/PW5oK+2w/G5wRRwqFtqWyrTVVjHIpl1DPiXV3G6S8b/7919HAg5zpA==\",\n    \"NewPassword\": \"12345678\",\n    \"ConfirmNewPassword\": \"12345678\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/Authentication/ResetPassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Authentication",
								"ResetPassword"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookups",
			"item": [
				{
					"name": "Get Countries",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/api/Lookups/GetCountries?PagingEnabled=true&PageSize=10&PageNumber=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Lookups",
								"GetCountries"
							],
							"query": [
								{
									"key": "PagingEnabled",
									"value": "true"
								},
								{
									"key": "PageSize",
									"value": "10"
								},
								{
									"key": "PageNumber",
									"value": "0"
								}
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Core",
			"item": [
				{
					"name": "Employees",
					"item": [
						{
							"name": "Create Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateEmployeeModelString",
											"value": "{\"IsActive\":true,\"AttendanceType\":1,\"name\":\"AmgadMohamedTest\",\"DirectManagerId\":42,\"email\":\"AmgadMohamedTest@Gmail.com\",\"address\":\"dss\",\"EmployeeType\":1,\"mobileNumber\":\"05544554\",\"JobTitleId\":1,\"DepartmentId\":15,\"JoiningDate\":\"11/28/2023\",\"ScheduleId\":3,\"AnnualVacationBalance\":25,\"EmployeeNumber\" :\"3\",\"ZoneIds\": [4,6]}",
											"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\n\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Amgad/Desktop/3ed89037-5138-4f3c-a148-5fa7af2ffe77.jpg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Employee",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\":13,\"IsActive\":true,\"AttendanceType\":1,\"name\":\"Test Employee\",\"DirectManagerId\":42,\"email\":\"dawem.app@gmjail.com\",\"address\":\"address one\",\"EmployeeType\":1,\"mobileNumber\":\"0554453254\",\"JobTitleId\":1,\"DepartmentId\":15,\"JoiningDate\":\"11/28/2023\",\"ScheduleId\":3,\"AnnualVacationBalance\":25,\"EmployeeNumber\":\"21\",\"ZoneIds\": [4,6]}",
											"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Photos/WhatsApp Image 2022-11-16 at 5.31.32 PM.jpeg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Enable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Enable?employeeId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Enable"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Disable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Disable?id=30&disableReason=the disable reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Disable"
									],
									"query": [
										{
											"key": "id",
											"value": "30"
										},
										{
											"key": "disableReason",
											"value": "the disable reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Delete?employeeId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Delete"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetInfo?employeeId=13",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetInfo"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "13"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Current Employee Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetCurrentEmployeeInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetCurrentEmployeeInfo"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetById?employeeId=47",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetById"
									],
									"query": [
										{
											"key": "employeeId",
											"value": "47"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Employee/Get?FreeText=&PagingEnabled=true&PageSize=5&PageNumber=0&Code=&DepartmentId=&JobTitleId&ScheduleId&DirectManagerId&EmployeeNumber=21",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Code",
											"value": ""
										},
										{
											"key": "DepartmentId",
											"value": ""
										},
										{
											"key": "JobTitleId",
											"value": null
										},
										{
											"key": "ScheduleId",
											"value": null
										},
										{
											"key": "DirectManagerId",
											"value": null
										},
										{
											"key": "EmployeeNumber",
											"value": "21"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employees For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Employee/GetForDropDown?FreeText=&PagingEnabled=true&PageSize=5&PageNumber=0&WithoutCurrentEmployee=false&Ids=16&Ids=17",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Employee",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "WithoutCurrentEmployee",
											"value": "false"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "16"
										},
										{
											"key": "Ids",
											"value": "17"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum AttendanceType\n{\n    FullAttendance,\n    PartialAttendance,\n    FreeOrShiftAttendance\n}\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}\n\n ```"
				},
				{
					"name": "Department",
					"item": [
						{
							"name": "Create Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"IT DEP ZONE 5\",\r\n  \"isActive\": true,\r\n  \"parentId\": 5,\r\n  \"managerId\": 13,\r\n  \"managerDelegatorIds\": [\r\n    13,14,15\r\n  ],\r\n  \"zoneIds\": [\r\n   4,6\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\" : 15,\r\n  \"name\": \"IT DEP ZONES fffttfff\",\r\n  \"isActive\": true,\r\n  \"parentId\": 12,\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    16,17\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetInfo?departmentid=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetInfo"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department by Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetById?departmentid=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetById"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "15"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Departments For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Department For Tree",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/Department/GetForTree?PagingEnabled=true&PageSize=5&PageNumber=0&IsBaseParent=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"GetForTree"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "IsBaseParent",
											"value": "true"
										},
										{
											"key": "ParentId",
											"value": "4",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/delete?departmentid=8",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"delete"
									],
									"query": [
										{
											"key": "departmentid",
											"value": "8"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/disable?Id=27&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "27"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Department",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Department/enable?departmentId=14",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Department",
										"enable"
									],
									"query": [
										{
											"key": "departmentId",
											"value": "14"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Assignment Type",
					"item": [
						{
							"name": "Create Assignment Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Assignment Type 5\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Assignment Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":5,\r\n  \"name\": \"Assignment Type 55\",\r\n  \"isActive\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Assignment Type Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/GetInfo?assignmentTypeId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"GetInfo"
									],
									"query": [
										{
											"key": "assignmentTypeId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Assignment Type by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/GetById?assignmentTypeId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"GetById"
									],
									"query": [
										{
											"key": "assignmentTypeId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Assignment Types For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Assignment Type For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Assignment Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/AssignmentType/delete?assignmentTypeId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AssignmentType",
										"delete"
									],
									"query": [
										{
											"key": "assignmentTypeId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Holiday Type",
					"item": [
						{
							"name": "Create Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Holiday Type 3\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Holiday Type 11\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetInfo?holidayTypeid=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetInfo"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetById?holidayTypeid=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetById"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Types For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Holiday Type For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Holiday Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/HolidayType/delete?holidayTypeid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"HolidayType",
										"delete"
									],
									"query": [
										{
											"key": "holidayTypeid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Task Type",
					"item": [
						{
							"name": "Create Task Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Task Type 3\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Task Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":3,\r\n  \"name\": \"Task Type 33\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Type Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/GetInfo?taskTypeid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"GetInfo"
									],
									"query": [
										{
											"key": "taskTypeid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Type by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/GetById?taskTypeid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"GetById"
									],
									"query": [
										{
											"key": "taskTypeid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Types For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task Type For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Task Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/TaskType/delete?taskTypeid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"TaskType",
										"delete"
									],
									"query": [
										{
											"key": "taskTypeid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Justification Type",
					"item": [
						{
							"name": "Create Justification Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Tabreer 6\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Justification Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Tabreer 6 edited\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Justification Type Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/GetInfo?justificationTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"GetInfo"
									],
									"query": [
										{
											"key": "justificationTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Justification Type By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/GetById?justificationTypeId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"GetById"
									],
									"query": [
										{
											"key": "justificationTypeId",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Justification Type For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Justification Type For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Justification Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JustificationType/delete?justificationTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JustificationType",
										"delete"
									],
									"query": [
										{
											"key": "justificationTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Get Role For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Role/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Role",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Permission Type",
					"item": [
						{
							"name": "Create Permission Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Permission type 1\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Permission Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Permision 1 edited\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Type Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/GetInfo?permissionTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"GetInfo"
									],
									"query": [
										{
											"key": "permissionTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Type By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/GetById?permissionTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"GetById"
									],
									"query": [
										{
											"key": "permissionTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Type For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Permission Type For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Permission Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/PermissionType/delete?permissionTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"PermissionType",
										"delete"
									],
									"query": [
										{
											"key": "permissionTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Vacation Type",
					"item": [
						{
							"name": "Create Vacation Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Vacation Type 2\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Vacation Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Vacation 22 edited\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Vacation Type Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/GetInfo?VacationTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"GetInfo"
									],
									"query": [
										{
											"key": "VacationTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Vacation Type By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/GetById?VacationTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"GetById"
									],
									"query": [
										{
											"key": "VacationTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Vacation Type For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Vacation Type For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Vacation Type",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/VacationType/delete?VacationTypeId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"VacationType",
										"delete"
									],
									"query": [
										{
											"key": "VacationTypeId",
											"value": "6"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Sign Up",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"CompanyId\":\"7\",\r\n    \"EmployeeNumber\":\"21\",\r\n    \"Name\": \"Test Sign Up 12\",\r\n    \"Email\": \"elsayed.mohammed70@gmail.com\",\r\n    \"Password\": \"123456\",\r\n    \"ConfirmPassword\": \"123456\",\r\n    \"MobileNumber\": \"01063254973\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/SignUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"SignUp"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Verify Email",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": \"38\",\r\n    \"VerificationCode\": \"095249\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/VerifyEmail",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"VerifyEmail"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Send Verification Code",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"UserId\": \"38\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/SendVerificationCode",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"SendVerificationCode"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Create User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateUserModelString",
											"value": "{\"EmployeeId\": \"13\",\n    \"Name\": \"House User\",\n\"Email\": \"elsayed.mohammedshouse@gmail.com\",\n\"Password\": \"123456\",\n\"ConfirmPassword\": \"123456\",\n\"MobileNumber\": \"011025466233\",\n\"Roles\":[\"HOUSEKEEPING\"],\n    \"IsAdmin\": false,\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Pictures/نبيل.png"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateUserModelString",
											"value": "{\"Id\": \"8\",   \n\"EmployeeId\": \"13\",\n    \"Name\": \"Amgad\",\n\"Email\": \"elsayed.mohammed7s93@gmail.com\",\n\"MobileNumber\": \"010s65256132\",\n\"ProfileImageName\":null\n    \"IsAdmin\": true,\n    \"IsActive\": \"true\",\n\"Roles\":[\"FULLACCESS\",\"ADMIN\"]}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/User/Delete?userId=15",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Delete"
									],
									"query": [
										{
											"key": "userId",
											"value": "15"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "en",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetInfo?userId=21",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetInfo"
									],
									"query": [
										{
											"key": "userId",
											"value": "21"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetById?userId=21",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetById"
									],
									"query": [
										{
											"key": "userId",
											"value": "21"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/User/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Users For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/User/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"User",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										},
										{
											"key": "Ids",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Job Titles",
					"item": [
						{
							"name": "Create Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Job Title 2\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":3,\r\n  \"name\": \"Job Title 3 Edited\",\r\n  \"isActive\": false\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetInfo?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetInfo"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetById?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetById"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Titles For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Job Title For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Job Title",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/JobTitle/delete?jobTitleid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"JobTitle",
										"delete"
									],
									"query": [
										{
											"key": "jobTitleid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Create Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"string\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n   13,14,15\r\n  ],\r\n  \"groupManagerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n   17,18,19\r\n  ],\r\n  \"zoneIds\": [\r\n    4,6\r\n  ]\r\n}\r\n\r\n"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 29,\r\n  \"name\": \"Group After Add Zone Update\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n    15,17\r\n  ],\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    19\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}\r\n"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetInfo?groupId=29",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetInfo"
									],
									"query": [
										{
											"key": "groupId",
											"value": "29"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Group by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetById?groupId=29",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetById"
									],
									"query": [
										{
											"key": "groupId",
											"value": "29"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Groups For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Group/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&ids=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "ids",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/delete?groupId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"delete"
									],
									"query": [
										{
											"key": "groupId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/enable?groupId=27",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"enable"
									],
									"query": [
										{
											"key": "groupId",
											"value": "27"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Group",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Group/disable?Id=27&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Group",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "27"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				},
				{
					"name": "Zones",
					"item": [
						{
							"name": "Create Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"HR Department Zone 1\",\r\n  \"isActive\": true,\r\n  \"latitude\": 88.0000000,\r\n  \"longitude\": 177.0000000,\r\n  \"radius\": 500\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 11,\r\n  \"name\": \"HR Department Zone Updated 11 \",\r\n  \"isActive\": true,\r\n  \"latitude\": 99.0000000,\r\n  \"longitude\": 170.0000000,\r\n  \"radius\": 200\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetInfo?zoneId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetInfo"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetById?zoneId=9",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetById"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "9"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zones For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Zone For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Zone/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Ids=4&Ids=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": "4"
										},
										{
											"key": "Ids",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/enable?zoneId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"enable"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/disable?Id=1&DisableReason=NotUsingYet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "NotUsingYet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Zone",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Zone/delete?zoneId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Zone",
										"delete"
									],
									"query": [
										{
											"key": "zoneId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "General",
			"item": [
				{
					"name": "Get Week Days For Dropdown",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{BearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "lang",
								"value": "ar",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/General/GetWeekDays",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"General",
								"GetWeekDays"
							]
						},
						"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Schedules",
			"item": [
				{
					"name": "Schedules",
					"item": [
						{
							"name": "Create Schedule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"دوام 1\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"WeekDay\": 0,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 1,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 2,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 3,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 4,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 5,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 6,\r\n            \"ShiftId\": 2\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Schedule",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"3\",\r\n    \"name\": \"دوام 7\",\r\n    \"notes\": \"notes 7\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"id\": 4,\r\n            \"weekDay\": 0,\r\n            \"shiftId\": 4\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"weekDay\": 1,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"weekDay\": 2,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"weekDay\": 3,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 8,\r\n            \"weekDay\": 4,\r\n            \"shiftId\": null\r\n        },\r\n        {\r\n            \"id\": 9,\r\n            \"weekDay\": 5,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 10,\r\n            \"weekDay\": 6,\r\n            \"shiftId\": 3\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Delete?ScheduleId=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Delete"
									],
									"query": [
										{
											"key": "ScheduleId",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetInfo?scheduleId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetInfo"
									],
									"query": [
										{
											"key": "scheduleId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetById?scheduleId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetById"
									],
									"query": [
										{
											"key": "scheduleId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules For Gid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/Schedule/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Schedule",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Shift Working Time",
					"item": [
						{
							"name": "Create Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Shift 4\",\r\n  \"timePeriod\": 1, //0 am, 1 pm\r\n  \"checkInTime\": \"20:00:00\",\r\n  \"checkOutTime\": \"11:00:00\",\r\n  \"allowedMinutes\": 30,\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"2\",\r\n  \"name\": \"Shift 3 After Edit\",\r\n  \"timePeriod\": 0,  //0 am, 1 pm\r\n  \"checkInTime\": \"07:00:00\",\r\n  \"checkOutTime\": \"11:30:00\",\r\n  \"allowedMinutes\": 10,\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetInfo?ShiftWorkingTimeId=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetInfo"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time By ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetById?ShiftWorkingTimeId=2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetById"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Shift Working Time For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/delete?ShiftWorkingTimeId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"delete"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/enable?ShiftWorkingTimeId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"enable"
									],
									"query": [
										{
											"key": "ShiftWorkingTimeId",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Shift Working Time",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/ShiftWorkingTime/disable?Id=1&DisableReason=gggg",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"ShiftWorkingTime",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "gggg"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedule Plan",
					"item": [
						{
							"name": "Create Schedule Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"SchedulePlanType\": 2, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": 4,\r\n    \"ScheduleId\": 2,\r\n    \"DateFrom\": \"20/11/2023\",\r\n    \"notes\": \"notes 200\",\r\n    \"isActive\": true\r\n}\r\n\r\n/*public enum SchedulePlanType\r\n{\r\n        Employees,\r\n        Groups,\r\n        Departments\r\n}*/",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Schedule Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"6\",\r\n    \"SchedulePlanType\": 1, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": 4,\r\n    \"DepartmentId\": null,\r\n    \"ScheduleId\": 3,\r\n    \"DateFrom\": \"2024-01-15\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Delete?schedulePlanId=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Delete"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetInfo?schedulePlanId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetInfo"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "6"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetById?schedulePlanId=6",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetById"
									],
									"query": [
										{
											"key": "schedulePlanId",
											"value": "6"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans For Gid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedule Plans For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlan/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlan",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Ids",
											"value": null
										},
										{
											"key": "Id",
											"value": null
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedule Plan Logs",
					"item": [
						{
							"name": "Get Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateEmployeeModelString",
											"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
											"type": "text"
										},
										{
											"key": "ProfileImageFile",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlanBackgroundJobLog/GetInfo?schedulePlanBackgroundJobLogId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlanBackgroundJobLog",
										"GetInfo"
									],
									"query": [
										{
											"key": "schedulePlanBackgroundJobLogId",
											"value": "4"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Schedules For Gid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/SchedulePlanBackgroundJobLog/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"SchedulePlanBackgroundJobLog",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Attendances",
			"item": [
				{
					"name": "Employee Attendances",
					"item": [
						{
							"name": "FingerPrint",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Latitude\": \"31.5265463\",\r\n    \"Longitude\": \"101.952196\",\r\n    \"Type\": 0,\r\n    \"RecognitionWay\": 0\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/FingerPrint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"FingerPrint"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Current FingerPrint Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetCurrentFingerPrintInfo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetCurrentFingerPrintInfo"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Employee Attendances On Month",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/Get?Month=11&Year=2023",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"Get"
									],
									"query": [
										{
											"key": "Month",
											"value": "11"
										},
										{
											"key": "Year",
											"value": "2023"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Attendances",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{baseUrl}}/api/EmployeeAttendance/GetAttendances?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"EmployeeAttendance",
										"GetAttendances"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "// this is status for ( entire row and in and out ) => 0 or 1 or 2 (success or warning or error )\n\npublic enum EmployeeAttendanceStatus  \n{  \nSuccess,  \nWarning,  \nError  \n}\n\n---\n\n// fingerprint response will be 0, or 1 => in or out\n\npublic enum FingerPrintType  \n{  \nCheckIn,  \nCheckOut,  \nBreakCheckIn,  \nBreakCheckOut  \n}\n\n---\n\npublic enum EmployeeStatus  \n{  \nNotAttendYet,  \nAtWork,  \nAttendThenLeaved,  \nLeavedOnly  \n}\n\n__________________________________________________________\n\npublic enum RecognitionWay  \n{  \nFingerPrint,  \nFaceRecognition,  \nVoiceRecognition,  \nPaternRecognition,  \nPinRecognition,  \nPasswordRecognition  \n}"
				},
				{
					"name": "Fingerprint Devices",
					"item": [
						{
							"name": "Create Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.33.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Create"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.5.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device Info",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetInfo?fingerprintDeviceid=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetInfo"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetById?fingerprintDeviceid=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetById"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Devices For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Fingerprint Device For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "Id",
											"value": null,
											"disabled": true
										},
										{
											"key": "Ids",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/delete?fingerprintDeviceid=3",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"delete"
									],
									"query": [
										{
											"key": "fingerprintDeviceid",
											"value": "3"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Disable Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/disable?Id=1&DisableReason=NotUsingYet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"disable"
									],
									"query": [
										{
											"key": "Id",
											"value": "1"
										},
										{
											"key": "DisableReason",
											"value": "NotUsingYet"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Enable Fingerprint Device",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/FingerprintDevice/enable?fingerprintDeviceId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"FingerprintDevice",
										"enable"
									],
									"query": [
										{
											"key": "fingerprintDeviceId",
											"value": "4"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "0."
				}
			]
		},
		{
			"name": "Requests",
			"item": [
				{
					"name": "Task Request",
					"item": [
						{
							"name": "Create Task Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateRequestTaskModelString",
											"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ULTIMA-USER-GUIDE.pdf"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Task Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateRequestTaskModelString",
											"value": "{\"Id\":2,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Accept",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Accept?requestId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Accept"
									],
									"query": [
										{
											"key": "requestId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Reject",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Reject?id=1&reject Reason=the reject reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Reject"
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										},
										{
											"key": "reject Reason",
											"value": "the reject reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Delete?requestId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Delete"
									],
									"query": [
										{
											"key": "requestId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/GetInfo?requestId=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"GetInfo"
									],
									"query": [
										{
											"key": "requestId",
											"value": "5"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/GetById?requestId=8",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"GetById"
									],
									"query": [
										{
											"key": "requestId",
											"value": "8"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Task Requests For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestTask/Get?FreeText=&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestTask",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Vacation Request",
					"item": [
						{
							"name": "Create Vacation Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateRequestVacationModelString",
											"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"VacationTypeId\":4,\"DateFrom\":\"12/05/2023\",\"DateTo\":\"12/10/2023\"}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": [],
											"disabled": true
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/#16_606a8059-7809-4f0b-a7b1-1bcbf6e4d3dc_20231204134545939(2).jpg"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Vacation Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateRequestVacationModelString",
											"value": "{\"Id\":2,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61]}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Accept",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Accept?requestId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Accept"
									],
									"query": [
										{
											"key": "requestId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Reject",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Reject?id=1&refuseReason=the refuse reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Reject"
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										},
										{
											"key": "refuseReason",
											"value": "the refuse reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Delete?requestId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Delete"
									],
									"query": [
										{
											"key": "requestId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/GetInfo?requestId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"GetInfo"
									],
									"query": [
										{
											"key": "requestId",
											"value": "4"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/GetById?requestId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"GetById"
									],
									"query": [
										{
											"key": "requestId",
											"value": "4"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Vacation Requests For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestVacation/Get?FreeText=&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestVacation",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Permission Request",
					"item": [
						{
							"name": "Create Vacation Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateRequestPermissionModelString",
											"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"PermissionTypeId\":1,\"DateFrom\":\"12/05/2023\",\"DateTo\":\"12/10/2023\"}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": [],
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Vacation Request",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateRequestPermissionModelString",
											"value": "{\"Id\":2,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"PermissionTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\"}",
											"type": "text"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Accept",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Accept?requestId=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Accept"
									],
									"query": [
										{
											"key": "requestId",
											"value": "1"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Reject",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Reject?id=1&refuseReason=the refuse reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Reject"
									],
									"query": [
										{
											"key": "id",
											"value": "1"
										},
										{
											"key": "refuseReason",
											"value": "the refuse reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Delete?requestId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Delete"
									],
									"query": [
										{
											"key": "requestId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/GetInfo?requestId=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"GetInfo"
									],
									"query": [
										{
											"key": "requestId",
											"value": "10"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/GetById?requestId=4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"GetById"
									],
									"query": [
										{
											"key": "requestId",
											"value": "4"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Vacation Requests For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/RequestPermission/Get?FreeText=&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"RequestPermission",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				}
			],
			"description": "public enum RequestType  \n{  \nAssignment,  \nJustifications,  \nPermissions,  \nTask,  \nVacations  \n}\n\npublic enum RequestStatus  \n{  \nPending,  \nAccepted,  \nRejected  \n}"
		}
	]
}