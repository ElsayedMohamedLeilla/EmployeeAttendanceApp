{
	"info": {
		"_postman_id": "3f6444d9-91c9-49cb-a1c8-92d6be997266",
		"name": "Dawem Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30670245"
	},
	"item": [
		{
			"name": "Admin Panel",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Sign In",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Email\": \"leilla.admin@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Authentication/SignIn",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Authentication",
										"SignIn"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": [
								{
									"name": "Sign In",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Email\": \"mostafa.ahmed.dawem@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Authentication/SignIn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Authentication",
												"SignIn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "2573"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Date",
											"value": "Sun, 30 Jun 2024 20:48:09 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"state\": 1,\n    \"message\": \"تم تسجيل الدخول بنجاح\",\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJtb3N0YWZhLmFobWVkLmRhd2VtQGdtYWlsLmNvbSIsImp0aSI6IjQ2MTRhMzE0LTViMjUtNDllZC04YzdjLTNhMGM3N2Y5MmQwZiIsInVuaXF1ZV9uYW1lIjoiMTA5IiwiVXNlcklkIjoiMTA5IiwiQ29tcGFueUlkIjoiIiwiQXBwbGljYXRpb25UeXBlIjoiMCIsIlJlbWVtYmVyTWUiOiJ0cnVlIiwibmJmIjoxNzE5NzgwNDg5LCJleHAiOjE3MjAwMzk2ODksImlhdCI6MTcxOTc4MDQ4OSwiaXNzIjoiQ29tcGFueUlzc3Vlci5jb20iLCJhdWQiOiJDb21wYW55SXNzdWVyLmNvbSJ9.PCRc3YwlZNnuy_iyqX4cJ215DX89EBfTsEpxk9SvRG8\",\n        \"userId\": 109,\n        \"isAdmin\": true,\n        \"menuItems\": [\n            {\n                \"id\": 62,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الإعدادات\",\n                \"icon\": \"bi-gear\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 2,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الصلاحيات\",\n                        \"icon\": \"bi-key\",\n                        \"url\": \"/admin/userPermissions\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 3,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"سجلات الصلاحيات\",\n                        \"icon\": \"bi-clock-history\",\n                        \"url\": \"/admin/PermissionLog\",\n                        \"availableActions\": [\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 9,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الإعدادات\",\n                        \"icon\": \"bi-gear\",\n                        \"url\": \"/admin/settings\",\n                        \"availableActions\": [\n                            1,\n                            3\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 63,\n                \"groupOrScreenType\": 0,\n                \"name\": \"التعريفات\",\n                \"icon\": \"bi-diagram-3\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 1,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الشركات\",\n                        \"icon\": \"bi-building\",\n                        \"url\": \"/admin/Companies\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 4,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المسؤوليات\",\n                        \"icon\": \"bi-diagram-3\",\n                        \"url\": \"/admin/responsibility\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 5,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الخطط\",\n                        \"icon\": \"bi-palette2\",\n                        \"url\": \"/admin/plans\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 6,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الإشتراكات\",\n                        \"icon\": \"bi-wallet2\",\n                        \"url\": \"/admin/subscriptions\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 7,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المستخدمين\",\n                        \"icon\": \"bi-person\",\n                        \"url\": \"/admin/users\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 8,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"مدفوعات الإشتراكات\",\n                        \"icon\": \"bi-credit-card\",\n                        \"url\": \"/admin/subscriptionsPayments\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 10,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الشاشات\",\n                        \"icon\": \"bi-laptop\",\n                        \"url\": \"/admin/Screens\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 11,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"مجموعات الشاشات\",\n                        \"icon\": \"bi-grid-3x3-gap\",\n                        \"url\": \"/admin/ScreenGroup\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    }\n                ]\n            }\n        ]\n    },\n    \"totalCount\": null\n}"
								}
							]
						},
						{
							"name": "Change Password",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OldPassword\": \"12345678\",\n    \"NewPassword\": \"1234567\",\n    \"ConfirmNewPassword\": \"1234567\",\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Authentication/ChangePassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Authentication",
										"ChangePassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Request Reset Password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Authentication/RequestResetPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Authentication",
										"RequestResetPassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\",\n    \"ResetToken\": \"CfDJ8JIaNsoev7JKvBnV5hqeRiVGRg2wAjqYHfF0VzYuFGlF7P6meMcVwaruwF3ShP8ho3lajP65EKHvlEQtNkPXliEgAnSfXAtvDY1XGGvWGF5RgZTK56JiJJJpamDuNleVRO4RZOJBxOp/PW5oK+2w/G5wRRwqFtqWyrTVVjHIpl1DPiXV3G6S8b/7919HAg5zpA==\",\n    \"NewPassword\": \"12345678\",\n    \"ConfirmNewPassword\": \"12345678\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Authentication/ResetPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Authentication",
										"ResetPassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Companies",
					"item": [
						{
							"name": "Create SignUp",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyName\": \"Test Company\",\n    \"companyCountryId\": 65,\n    \"companyAddress\": \"No Address For Company\",\n    \"companyEmail\": \"dawem.test.empty@gmail.com\",\n    \"password\": \"123456\",\n    \"confirmPassword\": \"123456\",\n    \"userEmail\": \"dawem.test.empty@gmail.com\",\n    \"userMobileCountryId\": 65,\n    \"userMobileNumber\": \"01025995333\",\n    \"name\": \"Test User\",\n    \"numberOfEmployees\": 200,\n    \"IsTrial\": true,   // Radio Buttons to select Trial OR Subscription,\n    \"subscriptionDurationInMonths\": null,\n    \"agreed\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/CreateSignUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"CreateSignUp"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Create Company",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "CreateCompanyModelString",
											"value": "{\n   \"CountryId\":65,\n   \"PreferredLanguageId\":17,\n   \"Name\":\"Leilla Company Test 7\",\n   \"WebSite\":\"www.leillacompanytest1.com\",\n   \"HeadquarterAddress\":\"Headquarter Address 1\",\n   \"HeadquarterLocation\":\"Headquarter Location 1\",\n   \"HeadquarterPostalCode\":\"Headquarter Postal Code 1\",\n   \"Email\":\"test.company@gmail.com\",\n   \"NumberOfEmployees\":65,\n   \"TotalNumberOfEmployees\":100,\n   \"ImportDefaultData\":false,\n   \"Industries\":[\n      {\n         \"Id\":0,\n         \"Name\":\"Industry 1\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Industry 2\"\n      }\n   ],\n   \"Branches\":[\n      {\n         \"Id\":0,\n         \"Name\":\"Branch 1\",\n         \"Address\":\"Address 1\",\n         \"Location\":\"Location 1\",\n         \"PostalCode\":\"Postal Code 1\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Branch 2\",\n         \"Address\":\"Address 2\",\n         \"Location\":\"Location 2\",\n         \"PostalCode\":\"Postal Code 2\"\n      }\n   ]\n}",
											"type": "text"
										},
										{
											"key": "LogoImageFile",
											"type": "file",
											"src": []
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/Dawem Collection.postman_collection.json"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": "/C:/Users/Leilla/Downloads/555(1).PNG"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Create"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Update Company",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "UpdateCompanyModelString",
											"value": "{\n   \"Id\":25,\n   \"CountryId\":65,\n   \"PreferredLanguageId\":17,\n  \"WebSite\":\"www.leillacompanytest1.com Edited\",\n   \"HeadquarterAddress\":\"Headquarter Address 1 edit\",\n   \"HeadquarterLocation\":\"Headquarter Location 1 edit\",\n   \"HeadquarterPostalCode\":\"Headquarter Postal Code 1 edit\",\n   \"Email\":\"test.company@gmail.com\",\n   \"NumberOfEmployees\":80,\n   \"TotalNumberOfEmployees\":250,\n   \"ImportDefaultData\":false,\n   \"Industries\":[\n      {\n         \"Id\":1,\n         \"Name\":\"Industry 1 edit\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Industry 3 new\"\n      }\n   ],\n   \"Branches\":[\n      {\n         \"Id\":1,\n         \"Name\":\"Branch 1 edit\",\n         \"Address\":\"Address 1 edit\",\n         \"Location\":\"Location 1 edit\",\n         \"PostalCode\":\"Postal Code 1 edit \"\n      },\n      {\n         \"Id\":2,\n         \"Name\":\"Branch 2 edit\",\n         \"Address\":\"Address 2 edit\",\n         \"Location\":\"Location 2 edit\",\n         \"PostalCode\":\"Postal Code 2 edit\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Branch 3\",\n         \"Address\":\"Address 3\",\n         \"Location\":\"Location 3\",\n         \"PostalCode\":\"Postal Code 3\"\n      }\n   ]\n}",
											"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
											"type": "text"
										},
										{
											"key": "LogoImageFile",
											"type": "file",
											"src": "/C:/Users/Leilla/Pictures/555.PNG"
										},
										{
											"key": "Attachments",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Update"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Companies For Grid",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Get"
									],
									"query": [
										{
											"key": "FreeText",
											"value": "",
											"disabled": true
										},
										{
											"key": "IsExport",
											"value": "true",
											"disabled": true
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "CountryId",
											"value": "",
											"description": "الدولة",
											"disabled": true
										},
										{
											"key": "SubscriptionType",
											"value": "",
											"description": "نوع الإشتراك",
											"disabled": true
										},
										{
											"key": "NumberOfEmployeesFrom",
											"value": "",
											"description": "عدد الموظفين من",
											"disabled": true
										},
										{
											"key": "NumberOfEmployeesTo",
											"value": "",
											"description": "عدد الموظفين إلي",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Companies For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/GetForDropDown?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "FreeText",
											"value": ""
										},
										{
											"key": "IsExport",
											"value": "false"
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Enable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Enable?companyId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Enable"
									],
									"query": [
										{
											"key": "companyId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Disable",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Disable?id=30&disableReason=the disable reason",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Disable"
									],
									"query": [
										{
											"key": "id",
											"value": "30"
										},
										{
											"key": "disableReason",
											"value": "the disable reason"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Delete",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/Delete?companyId=30",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"Delete"
									],
									"query": [
										{
											"key": "companyId",
											"value": "30"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Info",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/GetInfo?companyId=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"GetInfo"
									],
									"query": [
										{
											"key": "companyId",
											"value": "25"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get By Id",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/GetById?companyId=7",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"GetById"
									],
									"query": [
										{
											"key": "companyId",
											"value": "7"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Companies Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Company/GetCompaniesInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Company",
										"GetCompaniesInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum SubscriptionType\n{\n    Subscription, // إشتراك\n    Trial // فترة تجريبية\n}\n\n ```"
				},
				{
					"name": "Core",
					"item": [
						{
							"name": "Responsibilities",
							"item": [
								{
									"name": "Create Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Responsibility 1\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": 391,\r\n    \"name\": \"Responsibility 2 Admin Panel\",\r\n    \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/GetInfo?responsibilityid=15",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"GetInfo"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/GetById?responsibilityid=15",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"GetById"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibilities For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/delete?responsibilityid=8",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"delete"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/disable?Id=27&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "27"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/enable?responsibilityId=14",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"enable"
											],
											"query": [
												{
													"key": "responsibilityId",
													"value": "14"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibilities Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Responsibility/GetResponsibilitiesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Responsibility",
												"GetResponsibilitiesInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Create User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateUserModelString",
													"value": "{\n   \"Name\":\"Admin User 1\",\n   \"Email\":\"admin.user1@gmail.com\",\n   \"Password\":\"123456\",\n   \"ConfirmPassword\":\"123456\",\n   \"Responsibilities\":[\n      390,\n      391\n   ],\n   \"IsAdmin\":true,\n   \"IsActive\":\"true\"\n}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/نبيل.png"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateUserModelString",
													"value": "{\n   \"Id\":109,\n   \"Name\":\"Admin User 1\",\n   \"Email\":\"admin.user1@gmail.com\",\n   \"Password\":\"123456\",\n   \"ConfirmPassword\":\"123456\",\n   \"Responsibilities\":[\n      390,\n      391\n   ],\n   \"IsAdmin\":true,\n   \"IsActive\":\"true\"\n}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": "/C:/Users/Leilla/Downloads/Photos/product_barcode(1).png"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/Delete?userId=15",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"Delete"
											],
											"query": [
												{
													"key": "userId",
													"value": "15"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/GetInfo?userId=109",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"GetInfo"
											],
											"query": [
												{
													"key": "userId",
													"value": "109"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/GetById?userId=109",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"GetById"
											],
											"query": [
												{
													"key": "userId",
													"value": "109"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												},
												{
													"key": "FreeText",
													"value": "",
													"disabled": true
												},
												{
													"key": "Code",
													"value": "10",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/User/GetUsersInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"User",
												"GetUsersInformations"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "Get Header Informations",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Dashboard/GetHeaderInformations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Dashboard",
										"GetHeaderInformations"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "Permissions",
							"item": [
								{
									"name": "Create Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ForType\": 0, // 0 Responsibility  1 User\r\n    \"UserId\": null,\r\n    \"ResponsibilityId\": 390,\r\n    \"Screens\": [\r\n        {\r\n            \"ScreenId\": 0,\r\n            \"Actions\": [0,1,3]\r\n        },\r\n        {\r\n            \"ScreenId\": 1,\r\n            \"Actions\": [3]\r\n        },\r\n        {\r\n            \"ScreenId\": 2,\r\n            \"Actions\": [3]\r\n        },\r\n        {\r\n            \"ScreenId\": 3,\r\n            \"Actions\": [0,1,2,3]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": 5,\r\n    \"ForType\": 1, // 0 Responsibility  1 User\r\n    \"UserId\": 58,\r\n    \"ResponsibilityId\": null,\r\n    \"Screens\": [\r\n        {\r\n            \"ScreenId\": 0,\r\n            \"Actions\": [\r\n                0,\r\n                1,\r\n                3\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenId\": 1,\r\n            \"Actions\": [\r\n                3\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenId\": 2,\r\n            \"Actions\": [\r\n                3\r\n            ]\r\n        },\r\n        {\r\n            \"ScreenId\": 3,\r\n            \"Actions\": [\r\n                0,\r\n                1,\r\n                2,\r\n                3\r\n            ]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetInfo?permissionId=29",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetInfo"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "29"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Screens",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetPermissionScreens?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&PermissionId=12&FreeText=&ScreenCode&ActionCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetPermissionScreens"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "PermissionId",
													"value": "12"
												},
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "ScreenCode",
													"value": null
												},
												{
													"key": "ActionCode",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetById?permissionId=29",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetById"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "29"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check And Get Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/CheckAndGetPermission?ResponsibilityId=32",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"CheckAndGetPermission"
											],
											"query": [
												{
													"key": "ResponsibilityId",
													"value": "32"
												},
												{
													"key": "UserId",
													"value": "74",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permissions For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=&ScreenId=&ActionCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "ScreenId",
													"value": ""
												},
												{
													"key": "ActionCode",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/delete?permissionId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"delete"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permissions Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetPermissionsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetPermissionsInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Logs",
							"item": [
								{
									"name": "Get Permission Log Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/PermissionLog/GetInfo?permissionLogId=330",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"PermissionLog",
												"GetInfo"
											],
											"query": [
												{
													"key": "permissionLogId",
													"value": "330"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/PermissionLog/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&UserId&ScreenId&ActionCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"PermissionLog",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												},
												{
													"key": "UserId",
													"value": null
												},
												{
													"key": "ScreenId",
													"value": null
												},
												{
													"key": "ActionCode",
													"value": null
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Helpers",
							"item": [
								{
									"name": "Get Current User Menu Items",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetCurrentUserMenuItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetCurrentUserMenuItems"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Actions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Permission/GetAllActions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Permission",
												"GetAllActions"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "``` csharp\npublic enum AdminPanelApplicationScreenCode\n{\n    Company, //الشركات\n    Permission, // الصلاحيات\n    PermissionLog, // سجلات الصلاحيات\n    Responsibility, // المس\n    Plan,\n    Subscription,\n    User,\n    SubscriptionPayment\n}\npublic enum ApplicationAction\n{\n    AdditionAction, // الاضافة\n    EditAction,// التعديل\n    DeletionAction,// الحذف\n    ViewingAction,// المشاهدة\n    AcceptAction,// القبول\n    RejectAction,// الرفض\n    EnableAction,// التفعيل\n    DisableAction// التعطيل\n}\npublic enum ForResponsibilityOrUser\n{\n    Responsibility,\n    User\n}\n\n ```"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Plans",
							"item": [
								{
									"name": "Create Plan",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"NameTranslations\": [ // أول واحد في الشاشة - إسم / أسماء الخطة\r\n        {\r\n            \"LanguageId\": 17, // اختر اللغة\r\n            \"Name\": \"عربي 11\" // اختر اللغة\r\n        },\r\n        {\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"english 11\"\r\n        }\r\n    ],\r\n    \"MinNumberOfEmployees\": 2202, // أقل عدد من الموظفين\r\n    \"MaxNumberOfEmployees\": 2203, // أكبر عدد من الموظفين\r\n    \"EmployeeCost\": 12, // تكلفة الموظف الواحد\r\n    \"AllScreensAvailable\": false, // كل الشاشات متاحة ؟\r\n    \"ScreensIds\": [ // إختر الشاشات المتاحة\r\n        52,\r\n        53,\r\n        54\r\n    ], // الشاشات المتاحة - أختر الشاشات\r\n    \"IsTrial\": false, // فترة تجريبية\r\n    \"IsActive\": true, // الحالة\r\n    \"Notes\": \"notes\" // الملاحظات\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Plan",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 17,\r\n    \"NameTranslations\": [\r\n        {\r\n            \"Id\": 62,\r\n            \"LanguageId\": 17,\r\n            \"Name\": \"عربي معد 11\"\r\n        },\r\n        {\r\n            \"Id\": 63,\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"english Edited 11\"\r\n        }\r\n    ],\r\n    \"MinNumberOfEmployees\": 4000,\r\n    \"MaxNumberOfEmployees\": 4001,\r\n    \"EmployeeCost\": 0,\r\n    \"AllScreensAvailable\": false, // كل الشاشات متاحة ؟\r\n    \"ScreensIds\": [ // إختر الشاشات المتاحة\r\n        52,\r\n        53,\r\n        54\r\n    ],\r\n    \"IsTrial\": false,\r\n    \"IsActive\": true,\r\n    \"Notes\": \"notes\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plan Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/GetInfo?planid=25",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"GetInfo"
											],
											"query": [
												{
													"key": "planid",
													"value": "25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plan by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/GetById?planId=25",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"GetById"
											],
											"query": [
												{
													"key": "planId",
													"value": "25"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plans For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plans For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Plan",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/delete?planid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"delete"
											],
											"query": [
												{
													"key": "planid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Plans Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Plan/GetPlansInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Plan",
												"GetPlansInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Subscriptions",
							"item": [
								{
									"name": "Create Subscription",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"PlanId\": 16, // اختر الخطة\r\n    \"CompanyId\": 28,  // اختر الشركة\r\n    \"DurationInDays\": 30, // مدة الإشتراك بالأيام\r\n    \"StartDate\": \"2024-01-01\",  // تاريخ البداية\r\n    \"EndDate\": \"2024-01-31\",  // تاريخ النهاية\r\n    \"Status\": 0,  // حالة الإشتراك\r\n    \"RenewalCount\": 1,  // عدد مرات التجديد\r\n    \"FollowUpEmail\": \"leilla77@gmail.com\",  // البريد الإلكتروني للمتابعة\r\n    \"IsActive\": true,  // الحالة\r\n    \"Notes\": \"notes\"  // ملاحظات\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Subscription",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 103,\r\n    \"PlanId\": 16,\r\n    \"CompanyId\": 28,\r\n    \"DurationInDays\": 30,\r\n    \"StartDate\": \"2024-01-01\",\r\n    \"EndDate\": \"2024-01-31\",\r\n    \"Status\": 0,\r\n    \"RenewalCount\": 1,\r\n    \"FollowUpEmail\": \"leilla77@gmail.com\",\r\n    \"IsActive\": true,\r\n    \"Notes\": \"notes updated\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subscription Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/GetInfo?subscriptionid=103",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"GetInfo"
											],
											"query": [
												{
													"key": "subscriptionid",
													"value": "103"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Subscription Info",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/Subscription/GetInfo?subscriptionid=103",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"Subscription",
														"GetInfo"
													],
													"query": [
														{
															"key": "subscriptionid",
															"value": "103"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "393"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Thu, 16 May 2024 11:52:25 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": {\n        \"code\": 23,\n        \"planName\": \"المتقدمة\",  // إسم الخطة\n        \"companyName\": \"Leilla Company Test 6\",  // إسم الشركة\n        \"durationInDays\": 30,  // مدة الإشتراك بالأيام\n        \"startDate\": \"2024-01-01T00:00:00\",   /// تاريخ بداية الإشتراك\n        \"endDate\": \"2024-01-31T00:00:00\",/// تاريخ نهاية الإشتراك\n        \"status\": 3,  /// حالة الإشتراك\n        \"statusName\": \"غير نشط\",   /// حالة الإشتراك\n        \"renewalCount\": 1,   /// عدد مرات التجديد\n        \"followUpEmail\": \"leilla77@gmail.com\",   /// البريد الإلكتروني للمتابعة\n        \"isWaitingForApproval\": false,   /// في إنتظار التـاكيد\n        \"notes\": \"notes updated\",   // ملاحظات\n        \"isActive\": true  // الحالة\n    },\n    \"totalCount\": null\n}"
										}
									]
								},
								{
									"name": "Get Subscription by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/GetById?subscriptionId=103",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"GetById"
											],
											"query": [
												{
													"key": "subscriptionId",
													"value": "103"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subscriptions For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Subscriptions For Grid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/Subscription/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"Subscription",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "1078"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Thu, 16 May 2024 11:45:37 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"id\": 123,\n            \"code\": 30,  // كود الإشتراك\n            \"planName\": \"التجريبية\",  // إسم الخطة\n            \"companyName\": \"490900993298\",  // إسم الشركة\n            \"statusName\": \"تم الإنشاء\",  // حالة الإشتراك\n            \"isWaitingForApproval\": false,  // في إنتظار التأكيد\n            \"isActive\": true   // الحالة\n        }\n    ],\n    \"totalCount\": 30\n}"
										}
									]
								},
								{
									"name": "Get Subscription For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Subscription",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/delete?subscriptionid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"delete"
											],
											"query": [
												{
													"key": "subscriptionid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Accept",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Accept?subscriptionId=138&ActivationStartDate=05-05-2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Accept"
											],
											"query": [
												{
													"key": "subscriptionId",
													"value": "138",
													"description": "الإشتراك"
												},
												{
													"key": "ActivationStartDate",
													"value": "05-05-2024",
													"description": "تاريخ بداية التفعيل"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Enable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Enable?subscriptionId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Enable"
											],
											"query": [
												{
													"key": "subscriptionId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Disable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/Disable?id=30&disableReason=the disable reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"Disable"
											],
											"query": [
												{
													"key": "id",
													"value": "30"
												},
												{
													"key": "disableReason",
													"value": "the disable reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Subscriptions Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Subscription/GetSubscriptionsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Subscription",
												"GetSubscriptionsInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum SubscriptionStatus\n{\n    Created, // default status after account creation // تم الإنشاء\n    Confirmed, //after clicking the verification link // تم التأكيد\n    Active, // after payment approval by Dawem Admins // نشط\n    Deactivated // if subscription finished  // غير نشط\n}\n\n ```"
						},
						{
							"name": "Subscriptions Payments",
							"item": [
								{
									"name": "Create Subscription Payment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"SubscriptionId\": 103,   // اختر الإشتراك\r\n    \"Amount\": 187.75,   // المبلغ المدفوع\r\n    \"Date\": \"2024-02-01\",  // تاريخ عملية الدفع\r\n    \"IsActive\": true,  // الحالة\r\n    \"Notes\": \"notes\"  // ملاحظات\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Subscription Payment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 4200,\r\n    \"SubscriptionId\": 4200,\r\n    \"Amount\": 150.5,\r\n    \"Date\": 12,\r\n    \"IsActive\": true,\r\n    \"Notes\": \"notes\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subscription Payment Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/GetInfo?subscriptionPaymentid=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"GetInfo"
											],
											"query": [
												{
													"key": "subscriptionPaymentid",
													"value": "2"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Subscription Payment Info",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/GetInfo?subscriptionPaymentid=2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"SubscriptionPayment",
														"GetInfo"
													],
													"query": [
														{
															"key": "subscriptionPaymentid",
															"value": "2"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "233"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Thu, 16 May 2024 11:58:23 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": {\n        \"code\": 2,  // كود عملية الدفع\n        \"subscriptionInfo\": \"23-Leilla Company Test 6-المتقدمة\",    // معلومات الإشتراك\n        \"isActive\": true,  // الحالة\n        \"amount\": 187.75,  // المبلغ المدفوع\n        \"date\": \"2024-01-02T00:00:00\", // تاريخ عملية الدفع\n        \"notes\": \"notes\"   // ملاحظات\n    },\n    \"totalCount\": null\n}"
										}
									]
								},
								{
									"name": "Get Subscription Payment by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/GetById?subscriptionPaymentId=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"GetById"
											],
											"query": [
												{
													"key": "subscriptionPaymentId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subscriptions Payments For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Subscriptions Payments For Grid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"SubscriptionPayment",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "383"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Thu, 16 May 2024 11:55:46 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"id\": 2,\n            \"code\": 2, // كود عملية الدفع\n            \"subscriptionInfo\": \"23-Leilla Company Test 6-المتقدمة\",  // معلومات الإشتراك\n            \"isActive\": true,  // الحالة\n            \"amount\": 187.75 // المبلغ المدفوع\n        }\n    ],\n    \"totalCount\": 2\n}"
										}
									]
								},
								{
									"name": "Delete Subscription Payment",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/delete?subscriptionPaymentid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"delete"
											],
											"query": [
												{
													"key": "subscriptionPaymentid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Subscriptions Payments Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/GetSubscriptionPaymentsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"GetSubscriptionPaymentsInformations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Enable?subscriptionPaymentId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"Enable"
											],
											"query": [
												{
													"key": "subscriptionPaymentId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Disable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/SubscriptionPayment/Disable?id=30&disableReason=the disable reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"SubscriptionPayment",
												"Disable"
											],
											"query": [
												{
													"key": "id",
													"value": "30"
												},
												{
													"key": "disableReason",
													"value": "the disable reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "0."
						}
					]
				},
				{
					"name": "Settings",
					"item": [
						{
							"name": "Update Settings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Settings\": [\r\n        {\r\n            \"Id\": 1,\r\n            \"settingType\": 0,\r\n            \"value\": 10\r\n        },\r\n        {\r\n            \"Id\": 2,\r\n            \"settingType\": 1,\r\n            \"value\": 20\r\n        },\r\n        {\r\n            \"Id\": 3,\r\n            \"settingType\": 2,\r\n            \"value\": 30\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Setting/Update",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Setting",
										"Update"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Settings",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Setting/Get",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Setting",
										"Get"
									]
								}
							},
							"response": [
								{
									"name": "Get Settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Setting/Get",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Setting",
												"Get"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "583"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Date",
											"value": "Thu, 16 May 2024 12:01:15 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"groupType\": 0,\n            \"groupTypeName\": \"الخطط\",\n            \"settings\": [\n                {\n                    \"id\": 1,\n                    \"settingType\": 0,\n                    \"settingTypeName\": \"نسبة فترة السماح من فترة الإشتراك\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": \"15\"\n                },\n                {\n                    \"id\": 2,\n                    \"settingType\": 1,\n                    \"settingTypeName\": \"إجمالي الفترة التجريبية بالأيام\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": 20\n                },\n                {\n                    \"id\": 3,\n                    \"settingType\": 2,\n                    \"settingTypeName\": \"عدد موظفين الفترة التجريبية\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": 30\n                }\n            ]\n        },\n        {\n            \"groupType\": 0,\n            \"groupTypeName\": \"الموظفين\",\n            \"settings\": [\n                {\n                    \"id\": 1,\n                    \"settingType\": 0,\n                    \"settingTypeName\": \"نسبة فترة السماح من فترة الإشتراك\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": 10\n                },\n                {\n                    \"id\": 2,\n                    \"settingType\": 1,\n                    \"settingTypeName\": \"إجمالي الفترة التجريبية بالأيام\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": 20\n                },\n                {\n                    \"id\": 3,\n                    \"settingType\": 2,\n                    \"settingTypeName\": \"عدد موظفين الفترة التجريبية\",\n                    \"valueType\": 1,\n                    \"valueTypeName\": \"رقم\",\n                    \"value\": 30\n                }\n            ]\n        }\n    ],\n    \"totalCount\": null\n}"
								}
							]
						}
					],
					"description": "``` csharp\npublic enum SettingValueType\n{\n   String, // text box type text \n   Integer, // text box type number // step=\"0\"\n   Decimal, // text box type number  // step=\"any\"\n   Boolean  // check \n}\npublic enum AdminPanelSettingType\n{\n   PlanGracePeriodPercentage,\n   PlanTrialDurationInDays,\n   PlanTrialEmployeesCount\n}\n\n ```"
				},
				{
					"name": "Lookups",
					"item": [
						{
							"name": "Get Countries",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Lookups/GetCountries?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Lookups",
										"GetCountries"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Languages",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AdminPanelBearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/adminpanel/Lookups/GetLanguages?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"adminpanel",
										"Lookups",
										"GetLanguages"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "isexport",
											"value": "true",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Screens",
					"item": [
						{
							"name": "Screens",
							"item": [
								{
									"name": "Not Use It Create Screen",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ParentId\": 64, // المجموعة الأم\r\n    \"IsActive\": true, // الحالة\r\n    \"Notes\": \"notes\", // الملاحظات\r\n    \"Order\": 100, // الترتيب\r\n    \"Icon\": \"fa-credit-card\", // الأيقونة\r\n    \"URL\": \"\", // المسار\r\n    \"AuthenticationType\": 1,\r\n    \"NameTranslations\": [ // أول واحد في الشاشة - إسم / أسماء الشاشة\r\n        {\r\n            \"LanguageId\": 17, // اختر اللغة\r\n            \"Name\": \"شاشة تجربة\" // اختر اللغة\r\n        },\r\n        {\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"Test Screen\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Screen",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 66,\r\n    \"ParentId\": 64, // المجموعة الأم\r\n    \"IsActive\": true, // الحالة\r\n    \"Notes\": \"notes\", // الملاحظات\r\n    \"Order\": 100, // الترتيب\r\n    \"Icon\": \"fa-credit-card\", // الأيقونة\r\n    \"URL\": \"/user/vacations\", // المسار\r\n    \"NameTranslations\": [ // أول واحد في الشاشة - إسم / أسماء الشاشة\r\n        {\r\n            \"Id\": 131,\r\n            \"LanguageId\": 17, // اختر اللغة\r\n            \"Name\": \"شاشة تجربة معدلة\" // اختر اللغة\r\n        },\r\n        {\r\n            \"Id\": 132,\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"Test Screen 22\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screen Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/GetInfo?screenid=10",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"GetInfo"
											],
											"query": [
												{
													"key": "screenid",
													"value": "10"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Screen Info",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/Screen/GetInfo?screenid=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"Screen",
														"GetInfo"
													],
													"query": [
														{
															"key": "screenid",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "462"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Mon, 03 Jun 2024 18:33:17 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": {\n        \"authenticationTypeName\": \"لوحة الادارة\", // نوع التطبيق\n        \"name\": \"الشاشات\", // إسم الشاشة\n        \"parentName\": \"التعريفات\", // إسم الجموعة الأم\n        \"isActive\": true,\n        \"notes\": null,\n        \"icon\": null, // الأيقونة\n        \"url\": null, /// المسار\n        \"actions\": [ // الإجراءات المتاحة\n            \"الإضافة\",\n            \"التعديل\",\n            \"الحذف\",\n            \"المشاهدة\",\n            \"التمكين\",\n            \"التعطيل\"\n        ],\n        \"nameTranslations\": [ // إسم / اسماء الشاشة\n            {\n                \"languageName\": \"العربية\",\n                \"name\": \"الشاشات\"\n            },\n            {\n                \"languageName\": \"English\",\n                \"name\": \"Screens\"\n            }\n        ]\n    },\n    \"totalCount\": null\n}"
										}
									]
								},
								{
									"name": "Get Screen by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/GetById?screenId=56",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"GetById"
											],
											"query": [
												{
													"key": "screenId",
													"value": "56"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screens For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Screens For Grid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/Screen/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"Screen",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "784"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Mon, 03 Jun 2024 18:29:22 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"id\": 56,\n            \"name\": \"الإستدعاءات - للموظفين\", // إسم الشاشة\n            \"parentName\": null, // إسم المجموعة\n            \"authenticationType\": 2, \n            \"authenticationTypeName\": \"تطبيق الموظفين\", // نوع التطبيق\n            \"isActive\": true\n        },\n        {\n            \"id\": 55,\n            \"name\": \"الحضور و الإنصراف\",\n            \"parentName\": \"الحضور و الإنصراف\",\n            \"type\": 1,\n            \"typeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 54,\n            \"name\": \"ملف الشركة\",\n            \"parentName\": \"الإعدادات\",\n            \"type\": 1,\n            \"typeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 53,\n            \"name\": \"تقرير ملخص الحضور\",\n            \"parentName\": null,\n            \"type\": 1,\n            \"typeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 52,\n            \"name\": \"سجلات الإستدعاءات \",\n            \"parentName\": \"الإستدعاءات\",\n            \"type\": 1,\n            \"typeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        }\n    ],\n    \"totalCount\": 56\n}"
										}
									]
								},
								{
									"name": "Get Screens For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&LocalAuthenticationType=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "true",
													"disabled": true
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "LocalAuthenticationType",
													"value": "1",
													"description": "public enum AuthenticationType\n{\n    DawemAdmin, // تطبيق الويب\n    DawemEmployee  // تطبيق الموبايل\n}\n"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Screen",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/delete?screenId=66",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"delete"
											],
											"query": [
												{
													"key": "screenId",
													"value": "66"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screens Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/GetScreensInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"GetScreensInformations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Screens With Available Actions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/Screen/GetAllScreensWithAvailableActions?IsForMenu=true",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"Screen",
												"GetAllScreensWithAvailableActions"
											],
											"query": [
												{
													"key": "IsForMenu",
													"value": "true"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Enable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Screen/Enable?screenId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Screen",
												"Enable"
											],
											"query": [
												{
													"key": "screenId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Disable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Screen/Disable?id=30&disableReason=the disable reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Screen",
												"Disable"
											],
											"query": [
												{
													"key": "id",
													"value": "30"
												},
												{
													"key": "disableReason",
													"value": "the disable reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum AuthenticationType\n{\n    AdminPanel,\n    DawemAdmin,\n    DawemEmployee\n}\npublic enum ApplicationActionCode\n{\n    AdditionAction,\n    EditAction,\n    DeletionAction,\n    ViewingAction,\n    AcceptAction,\n    RejectAction,\n    EnableAction,\n    DisableAction\n}\n\n ```"
						},
						{
							"name": "Screen Groups",
							"item": [
								{
									"name": "Create Screen Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"AuthenticationType\": 1, // نوع التطبيق\r\n    \"ParentId\": 61, // إختر المجموعة\r\n    \"IsActive\": true, // الحالة\r\n    \"Notes\": \"notes\", // الملاحظات\r\n    \"Order\": 1, // الترتيب\r\n    \"Icon\": \"fa-user\", // الأيقونة   \r\n    \"NameTranslations\": [ // إسم / أسماء الشاشة\r\n        {\r\n            \"LanguageId\": 17, // اختر اللغة\r\n            \"Name\": \"عربي مكرر\" // اختر اللغة\r\n        },\r\n        {\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"english - dup\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Screen Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Id\": 65,\r\n    \"ParentId\": 61, // إختر المجموعة\r\n    \"IsActive\": true, // الحالة\r\n    \"Notes\": \"notes\", // الملاحظات\r\n    \"Order\": 1, // الترتيب\r\n    \"Icon\": \"fa-user\", // الأيقونة\r\n    \"AuthenticationType\": 1, // نوع التطبيق\r\n    \"NameTranslations\": [ // إسم / أسماء الشاشة\r\n        {\r\n            \"Id\":129,\r\n            \"LanguageId\": 17, // اختر اللغة\r\n            \"Name\": \"إعدادات مخصصة\" // اختر اللغة\r\n        },\r\n        {\r\n            \"Id\":130,\r\n            \"LanguageId\": 18,\r\n            \"Name\": \"Custom Settings\"\r\n        }\r\n    ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screen Group Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/GetInfo?screenGroupId=65",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"GetInfo"
											],
											"query": [
												{
													"key": "screenGroupId",
													"value": "65"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Screen Group Info",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/GetInfo?screenGroupId=65",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"ScreenGroup",
														"GetInfo"
													],
													"query": [
														{
															"key": "screenGroupId",
															"value": "65"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "407"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET"
												},
												{
													"key": "Date",
													"value": "Sat, 01 Jun 2024 20:32:58 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": {\n        \"id\": 0,\n        \"name\": \"إعدادات مخصصة\", // إسم المجموعة\n        \"isActive\": true,\n        \"notes\": \"notes\",\n        \"icon\": \"fa-user\", // الأيقونة\n        \"parentName\": \"الإعدادات\", // إسم المجموعة الأم\n        \"authenticationTypeName\": \"تطبيق الويب\", // نوع التطبيق\n        \"order\": 1, // الترتيب\n        \"actions\": null,\n        \"nameTranslations\": [ // الأسماء\n            {\n                \"languageName\": \"العربية\",\n                \"name\": \"إعدادات مخصصة\"\n            },\n            {\n                \"languageName\": \"English\",\n                \"name\": \"Custom Settings\"\n            }\n        ]\n    },\n    \"totalCount\": null\n}"
										}
									]
								},
								{
									"name": "Get Screen Group by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/GetById?screenGroupId=64",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"GetById"
											],
											"query": [
												{
													"key": "screenGroupId",
													"value": "64"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screen Groups For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Get?PagingEnabled=true&PageSize=5&PageNumber=0&LocalAuthenticationType=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "true",
													"disabled": true
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "LocalAuthenticationType",
													"value": "1",
													"description": "نوع التطبيق"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Screen Groups For Grid",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Get?PagingEnabled=true&PageSize=5&PageNumber=0&LocalAuthenticationType=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"adminpanel",
														"ScreenGroup",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "true",
															"disabled": true
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "LocalAuthenticationType",
															"value": "1",
															"description": "نوع التطبيق"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "719"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "X-Powered-By",
													"value": "ASP.NET"
												},
												{
													"key": "Date",
													"value": "Sat, 01 Jun 2024 20:31:48 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"id\": 65,\n            \"name\": \"إعدادات مخصصة\", // إسم المجموعة\n            \"parentName\": \"الإعدادات\", // المجموعة الأم\n            \"authenticationTypeName\": \"تطبيق الويب\", // نوع التطبيق\n            \"isActive\": true\n        },\n        {\n            \"id\": 64,\n            \"name\": \"الحضور و الإنصراف\",\n            \"parentName\": \"الموظفين\",\n            \"authenticationTypeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 61,\n            \"name\": \"الإعدادات\",\n            \"parentName\": null,\n            \"authenticationTypeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 60,\n            \"name\": \"الإستدعاءات\",\n            \"parentName\": null,\n            \"authenticationTypeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        },\n        {\n            \"id\": 59,\n            \"name\": \"الطلبات\",\n            \"parentName\": null,\n            \"authenticationTypeName\": \"تطبيق الويب\",\n            \"isActive\": true\n        }\n    ],\n    \"totalCount\": 7\n}"
										}
									]
								},
								{
									"name": "Get Screen Groups For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&LocalAuthenticationType=1&Id=64",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "LocalAuthenticationType",
													"value": "1",
													"description": "public enum AuthenticationType\n{\n    AdminPanel, // لوحة الإدارة\n    DawemAdmin, // تطبيق الويب\n    DawemEmployee  // تطبيق الموبايل\n}\n"
												},
												{
													"key": "Id",
													"value": "64"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Screen Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/delete?screenGroupId=65",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"delete"
											],
											"query": [
												{
													"key": "screenGroupId",
													"value": "65"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Screens Groups Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/GetScreenGroupsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"GetScreenGroupsInformations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Enable?screenGroupId=68",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"Enable"
											],
											"query": [
												{
													"key": "screenGroupId",
													"value": "68"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Disable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{AdminPanelBearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/adminpanel/ScreenGroup/Disable?id=68&disableReason=the disable reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"adminpanel",
												"ScreenGroup",
												"Disable"
											],
											"query": [
												{
													"key": "id",
													"value": "68"
												},
												{
													"key": "disableReason",
													"value": "the disable reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum AuthenticationType\n{\n    AdminPanel, // لوحة الإدارة\n    DawemAdmin, // تطبيق الويب\n    DawemEmployee  // تطبيق الموبايل\n}\n\n ```"
						}
					],
					"description": "``` csharp\npublic enum ApplicationActionCode\n{\n    AdditionAction,\n    EditAction,\n    DeletionAction,\n    ViewingAction,\n    AcceptAction,\n    RejectAction,\n    EnableAction,\n    DisableAction\n}\npublic enum AuthenticationType\n{\n    AdminPanel, // لوحة الإدارة\n    DawemAdmin, // تطبيق الويب\n    DawemEmployee  // تطبيق الموبايل\n}\npublic enum GroupOrScreenType\n{\n    Group,\n    Screen\n}\n\n ```"
				}
			]
		},
		{
			"name": "Dawem",
			"item": [
				{
					"name": "Authentication",
					"item": [
						{
							"name": "Verify Company Code",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Email\": \"elsayed.mohammedshouse@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    \"CompanyCode\": null,\n    \"ApplicationType\": 0 // Web = 0 , Android = 1 , Ios = 2\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/VerifyCompanyCode?identityCode=FRTBFEDRFG",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"VerifyCompanyCode"
									],
									"query": [
										{
											"key": "identityCode",
											"value": "FRTBFEDRFG"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Sign In",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Email\": \"elsayed.mohammed70@gmail.com\",\n    \"Password\": \"123456\",\n    //\"Email\": \"amirakelany8@gmail.com\",\n    //\"Password\": \"123456789\",\n    \"RememberMe\": true,\n    //\"CompanyId\": 7,\n    \"ApplicationType\": 0 ,// Web = 0 , Android = 1 , Ios = 2\n    \"FCMToken\": \"fake web or android or ios token\",\n    \"FingerprintMobileCode\":\"newcodetest\"\n}"
								},
								"url": {
									"raw": "https://stageapi.dawem.app/api/Authentication/SignIn",
									"protocol": "https",
									"host": [
										"stageapi",
										"dawem",
										"app"
									],
									"path": [
										"api",
										"Authentication",
										"SignIn"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": [
								{
									"name": "Sign In",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Email\": \"mostafaabdelmaaboud3@gmail.com\",\n    \"Password\": \"123456\",\n    \"RememberMe\": true,\n    //\"CompanyId\": 7,\n    \"ApplicationType\": 0 ,// Web = 0 , Android = 1 , Ios = 2\n    \"FCMToken\": \"fake web or android or ios token\",\n    \"FingerprintMobileCode\":\"\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Authentication/SignIn",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Authentication",
												"SignIn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "6787"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Date",
											"value": "Sun, 30 Jun 2024 20:49:01 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"state\": 1,\n    \"message\": \"تم تسجيل الدخول بنجاح\",\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhZG1pbkBkYXdlbS5hcHAiLCJqdGkiOiIzOTc2MmM1ZS0xN2NkLTRmOWYtYmM1ZS0yNDM0MjY2MTUxMGMiLCJ1bmlxdWVfbmFtZSI6IjIyIiwiVXNlcklkIjoiMjIiLCJDb21wYW55SWQiOiI3IiwiQXBwbGljYXRpb25UeXBlIjoiMCIsIlJlbWVtYmVyTWUiOiJ0cnVlIiwicm9sZSI6WyJGVUxMQUNDRVNTIiwiSE9VU0VLRUVQSU5HIl0sIm5iZiI6MTcxOTc4MDU0MSwiZXhwIjoxNzIwMDM5NzQxLCJpYXQiOjE3MTk3ODA1NDEsImlzcyI6IkNvbXBhbnlJc3N1ZXIuY29tIiwiYXVkIjoiQ29tcGFueUlzc3Vlci5jb20ifQ.HlXoyWzvvdzAkICP2KhweXh7mxoJGWXRqt-t6Qd-uBk\",\n        \"userId\": 22,\n        \"isAdmin\": true,\n        \"menuItems\": [\n            {\n                \"id\": 13,\n                \"groupOrScreenType\": 1,\n                \"name\": \"لوحة التحكم\",\n                \"icon\": \"bi-file-bar-graph\",\n                \"url\": \"/user/dashboard\",\n                \"availableActions\": [\n                    3\n                ],\n                \"children\": null\n            },\n            {\n                \"id\": 53,\n                \"groupOrScreenType\": 1,\n                \"name\": \"تقرير ملخص الحضور\",\n                \"icon\": \"bi-fingerprint\",\n                \"url\": null,\n                \"availableActions\": [\n                    3\n                ],\n                \"children\": null\n            },\n            {\n                \"id\": 57,\n                \"groupOrScreenType\": 0,\n                \"name\": \"التعريفات\",\n                \"icon\": \"bi-diagram-3\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 12,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أنواع التكليفات\",\n                        \"icon\": \"bi-stack\",\n                        \"url\": \"/user/assignmentType\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 14,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الأقسام\",\n                        \"icon\": \"bi-grid-3x3-gap\",\n                        \"url\": \"/user/sections\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 25,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أجهزة البصمة\",\n                        \"icon\": \"bi-fingerprint\",\n                        \"url\": \"/user/fingerPrintDevice\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 26,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المجموعات\",\n                        \"icon\": \"bi-grid-3x3-gap\",\n                        \"url\": \"/user/groups\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 27,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"العطلات الرسمية\",\n                        \"icon\": \"bi-plug\",\n                        \"url\": \"/user/holidays\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 29,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المسميات الوظيفية\",\n                        \"icon\": \"bi-filter\",\n                        \"url\": \"/user/jobTitles\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 30,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أنواع التبريرات\",\n                        \"icon\": \"bi-clipboard-check\",\n                        \"url\": \"/user/justificationsType\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 33,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أنواع الأذونات\",\n                        \"icon\": \"bi-key\",\n                        \"url\": \"/user/permissionType\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 40,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المسؤوليات\",\n                        \"icon\": \"bi-diagram-3\",\n                        \"url\": \"/user/responsibility\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 44,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الورديات\",\n                        \"icon\": \"bi-clock\",\n                        \"url\": \"/user/shifts\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 45,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أنواع المهمات\",\n                        \"icon\": \"bi-list-task\",\n                        \"url\": \"/user/taskType\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 46,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المستخدمين\",\n                        \"icon\": \"bi-person\",\n                        \"url\": \"/user/users\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 48,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أنواع الأجازات\",\n                        \"icon\": \"bi-plug\",\n                        \"url\": \"/user/vacationType\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 49,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"المناطق\",\n                        \"icon\": \"bi-geo-alt\",\n                        \"url\": \"/user/zones\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 58,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الموظفين\",\n                \"icon\": \"bi-people\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 15,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الموظفين\",\n                        \"icon\": \"bi-people\",\n                        \"url\": \"/user/employees\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 59,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الطلبات\",\n                \"icon\": \"bi-question-circle\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 34,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"كل الطلبات\",\n                        \"icon\": \"bi-question-circle\",\n                        \"url\": \"/user/requests\",\n                        \"availableActions\": [\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 35,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"طلبات التكليفات\",\n                        \"icon\": \"bi-stack\",\n                        \"url\": \"/user/assignments\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 36,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"طلبات التبريرات\",\n                        \"icon\": \"bi-clipboard-check\",\n                        \"url\": \"/user/justifications\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 37,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"طلبات الأذونات\",\n                        \"icon\": \"bi-key\",\n                        \"url\": \"/user/permissions\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 38,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"طلبات المهمات\",\n                        \"icon\": \"bi-list-task\",\n                        \"url\": \"/user/tasks\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 39,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"طلبات الأجازات\",\n                        \"icon\": \"bi-plug\",\n                        \"url\": \"/user/vacations\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 60,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الإستدعاءات\",\n                \"icon\": \"bi-telephone\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 50,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الجزاءات\",\n                        \"icon\": \"bi-fire\",\n                        \"url\": \"/user/sanctions\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 51,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الإستدعاءات\",\n                        \"icon\": \"bi-telephone\",\n                        \"url\": \"/user/summons\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3,\n                            6,\n                            7\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 52,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"سجلات الإستدعاءات \",\n                        \"icon\": \"bi-clock-history\",\n                        \"url\": \"/user/summonMissingLogs\",\n                        \"availableActions\": [\n                            3\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 61,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الإعدادات\",\n                \"icon\": \"bi-gear\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 31,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الصلاحيات\",\n                        \"icon\": \"bi-key\",\n                        \"url\": \"/user/userPermissions\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 32,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"سجلات الصلاحيات\",\n                        \"icon\": \"bi-clock-history\",\n                        \"url\": \"/user/PermissionLog\",\n                        \"availableActions\": [\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 47,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"أرصدة الأجازات\",\n                        \"icon\": \"bi-minecart-loaded\",\n                        \"url\": \"/user/vacationBalance\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 54,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"ملف الشركة\",\n                        \"icon\": \"bi-building\",\n                        \"url\": \"/user/updateCompany\",\n                        \"availableActions\": [\n                            1,\n                            3\n                        ],\n                        \"children\": null\n                    }\n                ]\n            },\n            {\n                \"id\": 64,\n                \"groupOrScreenType\": 0,\n                \"name\": \"الحضور و الإنصراف\",\n                \"icon\": \"bi-fingerprint\",\n                \"url\": null,\n                \"availableActions\": [],\n                \"children\": [\n                    {\n                        \"id\": 41,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الجدولة\",\n                        \"icon\": \"bi-pin\",\n                        \"url\": \"/user/tables\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 42,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"خطط الجدولة\",\n                        \"icon\": \"bi-menu-app\",\n                        \"url\": \"/user/schedualPlan\",\n                        \"availableActions\": [\n                            0,\n                            1,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 43,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"سجلات خطط الجدولة\",\n                        \"icon\": \"bi-clock-history\",\n                        \"url\": \"/user/scheduleLogs\",\n                        \"availableActions\": [\n                            3\n                        ],\n                        \"children\": null\n                    },\n                    {\n                        \"id\": 55,\n                        \"groupOrScreenType\": 1,\n                        \"name\": \"الحضور و الإنصراف\",\n                        \"icon\": \"bi-fingerprint\",\n                        \"url\": \"/user/employment\",\n                        \"availableActions\": [\n                            0,\n                            2,\n                            3\n                        ],\n                        \"children\": null\n                    }\n                ]\n            }\n        ]\n    },\n    \"totalCount\": null\n}"
								}
							]
						},
						{
							"name": "Sign Out",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/SignOut",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"SignOut"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Sign Up",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"companyName\": \"Test Company 2\",\n    \"companyCountryId\": 65,\n    \"companyAddress\": \"No Address For Company\",\n    \"companyEmail\": \"dawem.test.empty.2@gmail.com\",\n    \"password\": \"123456\",\n    \"confirmPassword\": \"123456\",\n    \"userEmail\": \"dawem.test.empty.2@gmail.com\",\n    \"userMobileCountryId\": 65,\n    \"userMobileNumber\": \"01214565876\",\n    \"name\": \"Test User\",\n    \"numberOfEmployees\": 200,\n    \"IsTrial\": true,   // Radio Buttons to select Trial OR Subscription,\n    \"subscriptionDurationInMonths\": null,\n    \"agreed\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/SignUp",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"SignUp"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Change Password",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"OldPassword\": \"12345678\",\n    \"NewPassword\": \"1234567\",\n    \"ConfirmNewPassword\": \"1234567\",\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/ChangePassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"ChangePassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Request Reset Password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/RequestResetPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"RequestResetPassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Reset Password",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"UserEmail\": \"elsayed.mohammed70@gmail.com\",\n    \"ResetToken\": \"CfDJ8JIaNsoev7JKvBnV5hqeRiVGRg2wAjqYHfF0VzYuFGlF7P6meMcVwaruwF3ShP8ho3lajP65EKHvlEQtNkPXliEgAnSfXAtvDY1XGGvWGF5RgZTK56JiJJJpamDuNleVRO4RZOJBxOp/PW5oK+2w/G5wRRwqFtqWyrTVVjHIpl1DPiXV3G6S8b/7919HAg5zpA==\",\n    \"NewPassword\": \"12345678\",\n    \"ConfirmNewPassword\": \"12345678\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Authentication/ResetPassword",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Authentication",
										"ResetPassword"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Lookups",
					"item": [
						{
							"name": "Get Countries",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Lookups/GetCountries?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Lookups",
										"GetCountries"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Languages",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseUrl}}/api/Lookups/GetLanguages?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Lookups",
										"GetLanguages"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "isexport",
											"value": "true",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Notifications",
					"item": [
						{
							"name": "Get Notifications",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/Get?PagingEnabled=true&PageSize=5&PageNumber=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"Get"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get UnViewed Notification Count",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "en"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/GetUnViewedNotificationCount",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"GetUnViewedNotificationCount"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark As Viewd",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/MarkAsViewed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"MarkAsViewed"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Mark As Read",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Notification/MarkAsRead?notificationId=13",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Notification",
										"MarkAsRead"
									],
									"query": [
										{
											"key": "notificationId",
											"value": "13"
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum NotificationType\n{\n    NewVacationRequest,\n    AcceptingVacationRequest,\n    RejectingVacationRequest,\n    NewTaskRequest,\n    AcceptingTaskRequest,\n    RejectingTaskRequest,\n    NewJustificationRequest,\n    AcceptingJustificationRequest, \n    RejectingJustificationRequest,\n    AddingInMission,\n    NewPermissionRequent,\n    AcceptingPermissionRequest,\n    RejectingPermissionRequest,\n    NewAssignmentRequest,\n    AcceptingAssignmentRequest,\n    RejectingAssignmentRequest,\n    NewSummon,\n    SummonMissed,\n    NewChangeInSchedule,\n    DoNotForgetSummon,\n    DoNotForgetSignIn,\n    ForgetSignIn,\n    DoNotForgetSignOut,\n    ForgetSignOut\n}\npublic enum NotificationStatus\n{\n    Info,\n    Warning,\n    Error\n}\npublic enum NotificationPriority\n{\n    High,\n    Medium,\n    Low\n}\n\n ```"
				},
				{
					"name": "Core",
					"item": [
						{
							"name": "Employees",
							"item": [
								{
									"name": "Create Employee",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "CreateEmployeeModelString",
													"value": "{\n   \"IsActive\":true,\n   \"AttendanceType\":1,\n   \"name\":\"AmgadMohamedTest\",\n   \"DirectManagerId\":42,\n   \"email\":\"amgad.mohamed@gmail.com\",\n   \"address\":\"dss\",\n   \"EmployeeType\":1,\n   \"mobileNumber\":\"05544554\",\n   \"mobileCountryId\":65,\n   \"JobTitleId\":1,\n   \"DepartmentId\":15,\n   \"JoiningDate\":\"11/28/2023\",\n   \"AllowChangeFingerprintMobileCode\":false,\n   \"ScheduleId\":3,\n   \"EmployeeNumber\":\"2901\",\n   \"ZoneIds\":[\n      27\n   ]\n}",
													"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\n\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Employee",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\n   \"Id\":13,\n   \"IsActive\":true,\n   \"AttendanceType\":1,\n   \"name\":\"موظف للتجربة\",\n   \"DirectManagerId\":42,\n   \"email\":\"dawem.app@gmjail.com\",\n   \"address\":\"ش ابن الحكم متفرع من الخنذندار - مربع خالد بن الوليد - القاهرة\",\n   \"EmployeeType\":1,\n   \"mobileCountryId\":65,\n   \"mobileNumber\":\"0554453254\",\n   \"JobTitleId\":1,\n   \"DepartmentId\":15,\n   \"JoiningDate\":\"11/28/2023\",\n   \"AllowChangeFingerprintMobileCode\":false,\n   \"ScheduleId\":3,\n   \"EmployeeNumber\":\"21\",\n   \"ZoneIds\":[\n      4,\n      6,\n      12,\n      13\n   ]\n}",
													"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": "/C:/Users/Amgad/Desktop/szss.jpg"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Specific Data For Employee",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\n\"address\":\" مصر الجديده القاهره\"\n}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": "/C:/Users/Amgad/Desktop/amgadmohamed.jpg"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/UpdateSpecificData",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"UpdateSpecificData"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Get?PagingEnabled=true&PageSize=5&PageNumber=14",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": "دان عبد",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "true",
													"disabled": true
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "14"
												},
												{
													"key": "Code",
													"value": "",
													"disabled": true
												},
												{
													"key": "DepartmentId",
													"value": "",
													"disabled": true
												},
												{
													"key": "JobTitleId",
													"value": "",
													"disabled": true
												},
												{
													"key": "ScheduleId",
													"value": "",
													"disabled": true
												},
												{
													"key": "DirectManagerId",
													"value": "42",
													"disabled": true
												},
												{
													"key": "EmployeeNumber",
													"value": "21",
													"disabled": true
												},
												{
													"key": "Status",
													"value": "",
													"description": "public enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}",
													"disabled": true
												},
												{
													"key": "Id",
													"value": "13",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "FreeText",
													"value": "موظف للتجر",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "false",
													"disabled": true
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "WithoutCurrentEmployee",
													"value": "false",
													"disabled": true
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "16",
													"disabled": true
												},
												{
													"key": "Status",
													"value": "",
													"description": "public enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}",
													"disabled": true
												},
												{
													"key": "",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get  Dropdown Not Have User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetForDropDownEmployeeNotHaveUser?PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetForDropDownEmployeeNotHaveUser"
											],
											"query": [
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "FreeText",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Enable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Enable?employeeId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Enable"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Disable",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Disable?id=30&disableReason=the disable reason",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Disable"
											],
											"query": [
												{
													"key": "id",
													"value": "30"
												},
												{
													"key": "disableReason",
													"value": "the disable reason"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/Delete?employeeId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"Delete"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete OTP By EmployeeId",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeOTP/DeleteOTPByEmployeeId?employeeId=30",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeOTP",
												"DeleteOTPByEmployeeId"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "30"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetInfo?employeeId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetInfo"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Current Employee Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetCurrentEmployeeInfo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetCurrentEmployeeInfo"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetById?employeeId=175",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetById"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "175"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetEmployeesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetEmployeesInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees Schedule Plan In Period",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/GetCurrentEmployeeSchedulePlanInCurrentMonth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"GetCurrentEmployeeSchedulePlanInCurrentMonth"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum AttendanceType\n{\n    FullAttendance,\n    PartialAttendance,\n    FreeOrShiftAttendance\n}\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}\npublic enum FilterEmployeeStatus\n{\n    Available,\n    InTaskOrAssignment,\n    InVacationOrOutside\n}\n\n ```\n\nAllowChangeFingerprintMobileCode => السماح بتعديل كود موبايل البصمة"
						},
						{
							"name": "Department",
							"item": [
								{
									"name": "Create Department",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"IT DEP ZONE 51\",\r\n  \"isActive\": true,\r\n  \"parentId\": 5,\r\n  \"managerId\": 13,\r\n  \"managerDelegatorIds\": [\r\n    13,14,15\r\n  ],\r\n  \"zoneIds\": [\r\n   4,6\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Department",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\" : 15,\r\n  \"name\": \"قسم نظم المعلومات\",\r\n  \"isActive\": true,\r\n  \"parentId\": 14,\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    16,17\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Department Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/GetInfo?departmentid=27",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"GetInfo"
											],
											"query": [
												{
													"key": "departmentid",
													"value": "27"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Department by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/GetById?departmentid=15",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"GetById"
											],
											"query": [
												{
													"key": "departmentid",
													"value": "15"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Departments For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "3"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Department For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Department For Tree",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/GetForTree?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&ParentId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"GetForTree"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "IsBaseParent",
													"value": "true",
													"disabled": true
												},
												{
													"key": "ParentId",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Department",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/delete?departmentid=8",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"delete"
											],
											"query": [
												{
													"key": "departmentid",
													"value": "8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Department",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/disable?Id=27&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "27"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Department",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/enable?departmentId=14",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"enable"
											],
											"query": [
												{
													"key": "departmentId",
													"value": "14"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Departments Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/GetDepartmentsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"GetDepartmentsInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Responsibilities",
							"item": [
								{
									"name": "Create Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"Responsibility 1\",\r\n    \"forEmployeesApplication\": false, // لتطبيق الموظفين ؟\r\n    \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": 119,\r\n    \"name\": \"Responsibility 1\",\r\n    \"forEmployeesApplication\": false, // لتطبيق الموظفين ؟\r\n    \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/GetInfo?responsibilityid=119",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"GetInfo"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "119"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/GetById?responsibilityid=119",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"GetById"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "119"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibilities For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibility For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/delete?responsibilityid=8",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"delete"
											],
											"query": [
												{
													"key": "responsibilityid",
													"value": "8"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/disable?Id=27&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "27"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Responsibility",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/enable?responsibilityId=14",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"enable"
											],
											"query": [
												{
													"key": "responsibilityId",
													"value": "14"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Responsibilities Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Responsibility/GetResponsibilitiesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Responsibility",
												"GetResponsibilitiesInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Holiday Type",
							"item": [
								{
									"name": "Create Holiday Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Holiday Type 3\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Holiday Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Holiday Type 11\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Type Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/GetInfo?holidayTypeid=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"GetInfo"
											],
											"query": [
												{
													"key": "holidayTypeid",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Type by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/GetById?holidayTypeid=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"GetById"
											],
											"query": [
												{
													"key": "holidayTypeid",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Types For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Type For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												},
												{
													"key": "Ids",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Holiday Type",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/delete?holidayTypeid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"delete"
											],
											"query": [
												{
													"key": "holidayTypeid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Holiday Types Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/HolidayType/GetHolydayTypesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"HolidayType",
												"GetHolydayTypesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Holidays",
							"item": [
								{
									"name": "Admin",
									"item": [
										{
											"name": "Create Holiday",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"فرح\",\r\n  \"isActive\": true,\r\n  \"dateType\": 0,\r\n  \"startDate\": \"2023-12-23\",\r\n  \"endDate\": \"2023-12-30\",\r\n  \"notes\": \"تجربه البدايه والنهايه\",\r\n  \"isSpecifiedByYear\": false\r\n\r\n}\r\n\r\n"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Holiday",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\" : \"12\",\r\n  \"name\": \"عيد الاضحي\",\r\n  \"isActive\": true,\r\n  \"dateType\": 1,\r\n  \"startDate\": \"1445-10-12\",\r\n  \"endDate\": \"1445-14-12\",\r\n  \"notes\": \"عيد الاضحي مدته ابعه ايام\",\r\n   \"isSpecifiedByYear\": false\r\n\r\n}\r\n\r\n\r\n"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Holiday Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/GetInfo?HolidayId=11",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"GetInfo"
													],
													"query": [
														{
															"key": "HolidayId",
															"value": "11"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Holiday by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/GetById?holidayId=9",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"GetById"
													],
													"query": [
														{
															"key": "holidayId",
															"value": "9"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Holidays For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "DateType",
															"value": "1",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Holidays For Dropdown",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "ids",
															"value": "1",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Holiday",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/delete?Holidayid=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"delete"
													],
													"query": [
														{
															"key": "Holidayid",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Enable Holiday",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/enable?HolidayId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"enable"
													],
													"query": [
														{
															"key": "HolidayId",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Disable Holiday",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/disable?Id=27&DisableReason=gggg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"disable"
													],
													"query": [
														{
															"key": "Id",
															"value": "27"
														},
														{
															"key": "DisableReason",
															"value": "gggg"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Holidays Information",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Holiday/GetHolidaiesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Holiday",
														"GetHolidaiesInformations"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Employee",
									"item": [
										{
											"name": "Get Holidays For Employee",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeHoliday/Get",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeHoliday",
														"Get"
													]
												}
											},
											"response": []
										}
									]
								}
							],
							"description": "0."
						},
						{
							"name": "Vacation Balance",
							"item": [
								{
									"name": "Create Vacation Balance",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ForType\": 0, // 0 Employees, 1 Groups, 2 Departments\r\n    \"EmployeeId\": 13,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": null,\r\n    \"Year\": 2023,\r\n    \"VacationType\": 0, // 0 Ordinary, 1 Emergency, 2 Sick, 3 FemaleVacation, 4 Other\r\n    \"Balance\": 30,\r\n    \"notes\": \"notes 2000\",\r\n    \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Vacation Balance",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\":1,\r\n    \"ForType\": 2, // 0 Employees, 1 Groups, 2 Departments\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": 4,\r\n    \"Year\": 2020,\r\n    \"DefaultVacationType\": 1, // 0 Ordinary, 1 Emergency, 2 Sick, 3 FemaleVacation, 4 Other\r\n    \"Balance\": 6,\r\n    \"notes\": \"notes 2000\",\r\n    \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/GetInfo?vacationBalanceId=50",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"GetInfo"
											],
											"query": [
												{
													"key": "vacationBalanceId",
													"value": "50"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/GetById?vacationBalanceId=5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"GetById"
											],
											"query": [
												{
													"key": "vacationBalanceId",
													"value": "5"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "FreeText",
													"value": "",
													"description": "search employee name "
												},
												{
													"key": "Code",
													"value": "7",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/delete?vacationBalanceId=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"delete"
											],
											"query": [
												{
													"key": "vacationBalanceId",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Vacation Balances Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/VacationBalance/GetVacationBalancesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"VacationBalance",
												"GetVacationBalancesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "public enum ForType  \n{  \nEmployees,  \nGroups,  \nDepartments  \n}\n\npublic enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
						},
						{
							"name": "Users",
							"item": [
								{
									"name": "Pre Sign Up",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CompanyVerificationCode\": \"HvUwrdK7zb\",\r\n    \"EmployeeNumber\": \"241\",\r\n    \"password\": \"123456\",\r\n    \"confirmPassword\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeOTP/PreSignUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeOTP",
												"PreSignUp"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Sign Up",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"CompanyVerficationCode\": \"HvUwrdK7zb\",\r\n    \"EmployeeNumber\": \"126\",\r\n    \"OTP\": \"39719\",\r\n    \"Password\": \"1234567\",\r\n    \"ConfirmPassword\": \"1234567\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/SignUp",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"SignUp"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Verify Email",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"UserId\": \"58\",\r\n    \"VerificationCode\": \"048919\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/VerifyEmail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"VerifyEmail"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Send Verification Code",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"UserId\": \"58\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/SendVerificationCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"SendVerificationCode"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Create User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"employeeId\": 107,\r\n  \"password\": \"123456\",\r\n  \"confirmPassword\": \"123456\",\r\n  \"isAdmin\": false,\r\n  \"responsibilities\": [\r\n    395\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": 0,\r\n  \"employeeId\": 0,\r\n  \"responsibilities\": [\r\n    0\r\n  ],\r\n  \"isAdmin\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/User/Delete?userId=15",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"Delete"
											],
											"query": [
												{
													"key": "userId",
													"value": "15"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/GetInfo?userId=70",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"GetInfo"
											],
											"query": [
												{
													"key": "userId",
													"value": "70"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/GetById?userId=70",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"GetById"
											],
											"query": [
												{
													"key": "userId",
													"value": "70"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get UserName By EmployeeId",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/GetUserNameByEmployeeId?employeeId=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"GetUserNameByEmployeeId"
											],
											"query": [
												{
													"key": "employeeId",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/User/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												},
												{
													"key": "FreeText",
													"value": "كيلاني",
													"disabled": true
												},
												{
													"key": "Code",
													"value": "10",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Users Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/User/GetUsersInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"User",
												"GetUsersInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Job Titles",
							"item": [
								{
									"name": "Create Job Title",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Job Title 2\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Job Title",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"مسمي وظيفي تجربة\",\r\n  \"isActive\": false\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Job Title Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/GetInfo?jobTitleid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"GetInfo"
											],
											"query": [
												{
													"key": "jobTitleid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Job Title by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/GetById?jobTitleid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"GetById"
											],
											"query": [
												{
													"key": "jobTitleid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Job Titles For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Job Title For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Job Title",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/delete?jobTitleid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"delete"
											],
											"query": [
												{
													"key": "jobTitleid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Job Titles Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/JobTitle/GetJobTitlesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"JobTitle",
												"GetJobTitlesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Groups",
							"item": [
								{
									"name": "Create Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"string\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n   13,14,15\r\n  ],\r\n  \"groupManagerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n   17,18,19\r\n  ],\r\n  \"zoneIds\": [\r\n    4,6\r\n  ]\r\n}\r\n\r\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": 29,\r\n  \"name\": \"Group After Add Zone Update\",\r\n  \"isActive\": true,\r\n  \"employeeIds\": [\r\n    15,17\r\n  ],\r\n  \"managerId\": 16,\r\n  \"managerDelegatorIds\": [\r\n    19\r\n  ],\r\n  \"zoneIds\": [\r\n   4\r\n  ]\r\n}\r\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Group Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetInfo?groupId=33",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetInfo"
											],
											"query": [
												{
													"key": "groupId",
													"value": "33"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Group by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetById?groupId=29",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetById"
											],
											"query": [
												{
													"key": "groupId",
													"value": "29"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Groups For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Group/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Groups For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "ids",
													"value": "1",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Group/delete?groupId=9",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"delete"
											],
											"query": [
												{
													"key": "groupId",
													"value": "9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Group/enable?groupId=27",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"enable"
											],
											"query": [
												{
													"key": "groupId",
													"value": "27"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Group",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Group/disable?Id=27&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "27"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Groups Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Group/GetGroupsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Group",
												"GetGroupsInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						},
						{
							"name": "Zones",
							"item": [
								{
									"name": "Create Zone",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Ahmed Nasr Zone 1\",\r\n  \"isActive\": true,\r\n  \"latitude\": 29.91045434030701,\r\n  \"longitude\": 30.947295846446366,\r\n  \"radius\": 5000\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Zone",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": 11,\r\n  \"name\": \"HR Department Zone Updated 11 \",\r\n  \"isActive\": true,\r\n  \"latitude\": 99.0000000,\r\n  \"longitude\": 170.0000000,\r\n  \"radius\": 200\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Zone",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/GetInfo?zoneId=9",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"GetInfo"
											],
											"query": [
												{
													"key": "zoneId",
													"value": "9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Zone By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Zone/GetById?zoneId=9",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"GetById"
											],
											"query": [
												{
													"key": "zoneId",
													"value": "9"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Zones For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Zone/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Zone For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids=4&Ids=6",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "4"
												},
												{
													"key": "Ids",
													"value": "6"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Zone",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Zone/enable?zoneId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"enable"
											],
											"query": [
												{
													"key": "zoneId",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Zone",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Zone/disable?Id=1&DisableReason=NotUsingYet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "1"
												},
												{
													"key": "DisableReason",
													"value": "NotUsingYet"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Zone",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Zone/delete?zoneId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"delete"
											],
											"query": [
												{
													"key": "zoneId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Zones Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/GetZonesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"GetZonesInformations"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "General",
					"item": [
						{
							"name": "Get Week Days For Dropdown",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/General/GetWeekDays",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"General",
										"GetWeekDays"
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						}
					]
				},
				{
					"name": "Schedules",
					"item": [
						{
							"name": "Schedules",
							"item": [
								{
									"name": "Create Schedule",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"دوام 1\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"WeekDay\": 0,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 1,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 2,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 3,\r\n            \"ShiftId\": 2\r\n        },\r\n        {\r\n            \"WeekDay\": 4,\r\n            \"ShiftId\": 3\r\n        },\r\n        {\r\n            \"WeekDay\": 5,\r\n            \"ShiftId\": 1\r\n        },\r\n        {\r\n            \"WeekDay\": 6,\r\n            \"ShiftId\": 2\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Schedule",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"3\",\r\n    \"name\": \"دوام 7\",\r\n    \"notes\": \"notes 7\",\r\n    \"isActive\": true,\r\n    \"scheduleDays\": [\r\n        {\r\n            \"id\": 4,\r\n            \"weekDay\": 0,\r\n            \"shiftId\": 4\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"weekDay\": 1,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 6,\r\n            \"weekDay\": 2,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 7,\r\n            \"weekDay\": 3,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 8,\r\n            \"weekDay\": 4,\r\n            \"shiftId\": 2\r\n        },\r\n        {\r\n            \"id\": 9,\r\n            \"weekDay\": 5,\r\n            \"shiftId\": 1\r\n        },\r\n        {\r\n            \"id\": 10,\r\n            \"weekDay\": 6,\r\n            \"shiftId\": 3\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/Delete?ScheduleId=7",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"Delete"
											],
											"query": [
												{
													"key": "ScheduleId",
													"value": "7"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/GetInfo?scheduleId=38",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"GetInfo"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "38"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/GetById?scheduleId=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"GetById"
											],
											"query": [
												{
													"key": "scheduleId",
													"value": "3"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedules For Gid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedules For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedules Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Schedule/GetSchedulesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Schedule",
												"GetSchedulesInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Shift Working Time",
							"item": [
								{
									"name": "Create Shift Working Time",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Shift 4\",\r\n  \"timePeriod\": 1, //0 am, 1 pm\r\n  \"checkInTime\": \"20:00:00\",\r\n  \"checkOutTime\": \"11:00:00\",\r\n  \"allowedMinutes\": 30,\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Shift Working Time",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\": \"2\",\r\n  \"name\": \"Shift 3 After Edit\",\r\n  \"timePeriod\": 0,  //0 am, 1 pm\r\n  \"checkInTime\": \"07:00:00\",\r\n  \"checkOutTime\": \"11:30:00\",\r\n  \"allowedMinutes\": 10,\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Shift Working Time Info",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetInfo?ShiftWorkingTimeId=29",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"GetInfo"
											],
											"query": [
												{
													"key": "ShiftWorkingTimeId",
													"value": "29"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Shift Working Time By ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetById?ShiftWorkingTimeId=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"GetById"
											],
											"query": [
												{
													"key": "ShiftWorkingTimeId",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Shift Working Time For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Shift Working Time For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Ids",
													"value": null
												},
												{
													"key": "Id",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Shift Working Time",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/delete?ShiftWorkingTimeId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"delete"
											],
											"query": [
												{
													"key": "ShiftWorkingTimeId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Shift Working Time",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/enable?ShiftWorkingTimeId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"enable"
											],
											"query": [
												{
													"key": "ShiftWorkingTimeId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Shift Working Time",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/disable?Id=1&DisableReason=gggg",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "1"
												},
												{
													"key": "DisableReason",
													"value": "gggg"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Shift Working Times Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/ShiftWorkingTime/GetShiftWorkingTimesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"ShiftWorkingTime",
												"GetShiftWorkingTimesInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Schedule Plan",
							"item": [
								{
									"name": "Create Schedule Plan",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"SchedulePlanType\": 0, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": 13,\r\n    \"GroupId\": null,\r\n    \"DepartmentId\": null,\r\n    \"ScheduleId\": 2,\r\n    \"DateFrom\": \"13/05/2024\",\r\n    \"notes\": \"notes 200\",\r\n    \"isActive\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"Create"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Update Schedule Plan",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"6\",\r\n    \"SchedulePlanType\": 1, // 0 Employee, 1 Group, 2 Department\r\n    \"EmployeeId\": null,\r\n    \"GroupId\": 4,\r\n    \"DepartmentId\": null,\r\n    \"ScheduleId\": 3,\r\n    \"DateFrom\": \"2024-01-02\",\r\n    \"notes\": \"notes 1\",\r\n    \"isActive\": true\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/Delete?schedulePlanId=7",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"Delete"
											],
											"query": [
												{
													"key": "schedulePlanId",
													"value": "7"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/GetInfo?schedulePlanId=43",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"GetInfo"
											],
											"query": [
												{
													"key": "schedulePlanId",
													"value": "43"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/GetById?schedulePlanId=9",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"GetById"
											],
											"query": [
												{
													"key": "schedulePlanId",
													"value": "9"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedule Plans For Gid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "FreeText",
													"value": "جزئي",
													"disabled": true
												},
												{
													"key": "Code",
													"value": "7",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedule Plans For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Ids&Id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Ids",
													"value": null
												},
												{
													"key": "Id",
													"value": null
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedule Plans Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text"
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlan/GetSchedulePlansInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlan",
												"GetSchedulePlansInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Schedule Plan Logs",
							"item": [
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateEmployeeModelString",
													"value": "{\"Id\": \"7\", \"DepartmentId\": \"3\",\n    \"Name\": \"22222222\",\n    \"JoiningDate\": \"01/01/2001\",\n    \"IsActive\": \"true\"}",
													"type": "text",
													"disabled": true
												},
												{
													"key": "ProfileImageFile",
													"type": "file",
													"src": [],
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlanLog/GetInfo?schedulePlanLogId=22",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlanLog",
												"GetInfo"
											],
											"query": [
												{
													"key": "schedulePlanLogId",
													"value": "22"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedule Plans Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlanLog/Get?IsExport=true&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlanLog",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "true"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Schedule Plan Log Employees",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SchedulePlanLog/GetSchedulePlanLogEmployees?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&SchedulePlanLogId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SchedulePlanLog",
												"GetSchedulePlanLogEmployees"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "SchedulePlanLogId",
													"value": "1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum ForType\n{\n    Employees,\n    Groups,\n    Departments\n}\n\n ```"
						}
					],
					"description": "``` csharp\npublic enum SchedulePlanType\n{\n    Employees,\n    Groups,\n    Departments\n}\n\n ```"
				},
				{
					"name": "Attendances",
					"item": [
						{
							"name": "Employee Attendances",
							"item": [
								{
									"name": "Create FingerPrint",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Latitude\": \"28.663108\",\r\n    \"Longitude\": \"30.814411\",\r\n    \"Type\": 0,\r\n    \"RecognitionWay\": 1,\r\n    \"FingerprintMobileCode\":\"newcodetest\"\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendance/CreateFingerPrint",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendance",
												"CreateFingerPrint"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Current FingerPrint Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendance/GetCurrentFingerPrintInfo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendance",
												"GetCurrentFingerPrintInfo"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": [
										{
											"name": "Get Current FingerPrint Info Before 12 AM",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": []
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeAttendance/GetCurrentFingerPrintInfo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeAttendance",
														"GetCurrentFingerPrintInfo"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Length",
													"value": "590"
												},
												{
													"key": "Content-Type",
													"value": "application/json"
												},
												{
													"key": "Server",
													"value": "Microsoft-IIS/10.0"
												},
												{
													"key": "Date",
													"value": "Tue, 30 Jul 2024 19:49:28 GMT"
												}
											],
											"cookie": [],
											"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": {\n        \"id\": 255,\n        \"code\": 66,\n        \"checkInDateTime\": \"2024-07-30T22:48:15.249129\",\n        \"checkOutDateTime\": null,\n        \"breakInDateTime\": null,\n        \"lastFingetPrintType\": 0,\n        \"defaultCheckType\": 1,\n        \"localDate\": \"2024-07-30T22:49:28.6185431Z\",\n        \"employeeStatus\": 1,\n        \"availableZones\": [\n            {\n                \"zoneId\": 0,\n                \"name\": \"موقع دوام وحدة العزل\",\n                \"latitude\": 30.017679032856247,\n                \"longitude\": 31.382102966308594,\n                \"radius\": 5000\n            },\n            {\n                \"zoneId\": 0,\n                \"name\": \"موقع دوام الاطباء الزائرين\",\n                \"latitude\": 29.91045434030701,\n                \"longitude\": 30.947295846446366,\n                \"radius\": 5000\n            }\n        ]\n    },\n    \"totalCount\": null\n}"
										}
									]
								},
								{
									"name": "Get Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attendance/GetInfo?employeeAttendanceId=220",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attendance",
												"GetInfo"
											],
											"query": [
												{
													"key": "employeeAttendanceId",
													"value": "220"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employee Attendances On Month",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendance/Get?Month=11&Year=2023",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendance",
												"Get"
											],
											"query": [
												{
													"key": "Month",
													"value": "11"
												},
												{
													"key": "Year",
													"value": "2023"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Attendances",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendance/GetAttendances?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendance",
												"GetAttendances"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Delete",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Attendance/delete?Id=23&Type=2",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attendance",
												"delete"
											],
											"query": [
												{
													"key": "Id",
													"value": "23"
												},
												{
													"key": "Type",
													"value": "2"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Employees Attendances Informations",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attendance/GetEmployeesAttendancesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attendance",
												"GetEmployeesAttendancesInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Current Employee Schedules",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendance/GetCurrentEmployeeSchedules?DateFrom=2024-07-19&DateTo=2024-07-22",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendance",
												"GetCurrentEmployeeSchedules"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "2024-07-19"
												},
												{
													"key": "DateTo",
													"value": "2024-07-22"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							],
							"description": "``` csharp\npublic enum EmployeeAttendanceStatus\n{\n    Success,\n    Warning,\n    Error\n}\npublic enum FingerPrintType // Type with Create Finger Print or Default type in get fingerprint info\n{\n    CheckIn,\n    CheckOut,\n    BreakIn,\n    BreakOut,\n    Summon,\n    NotSet\n}\npublic enum EmployeeStatus\n{\n    NotAttendYet,\n    AtWork,\n    AttendThenLeaved,\n    LeavedOnly\n}\npublic enum RecognitionWay\n{\n    NotSet,\n    FingerPrint,\n    FaceRecognition,\n    VoiceRecognition,\n    PaternRecognition,\n    PinRecognition,\n    PasswordRecognition\n}\npublic enum DeleteEmployeeAttendanceType\n{\n   CheckIn, بصمة الدخول\n   CheckOut, بصمة الخروج\n   Both كلاهما\n}\n\n ```"
						},
						{
							"name": "Fingerprint Devices",
							"item": [
								{
									"name": "Create Fingerprint Device",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.33.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Fingerprint Device",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"id\":1,\r\n  \"name\": \"Fingerprint Device 1\",\r\n  \"IpAddress\": \"10.5.20.120\",\r\n  \"PortNumber\": \"3020\",\r\n  \"Model\": \"ZK Techo\",\r\n  \"SerialNumber\": \"52302105421\",\r\n  \"isActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Fingerprint Device Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/GetInfo?fingerprintDeviceid=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"GetInfo"
											],
											"query": [
												{
													"key": "fingerprintDeviceid",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Fingerprint Device by ID",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/GetById?fingerprintDeviceid=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"GetById"
											],
											"query": [
												{
													"key": "fingerprintDeviceid",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Fingerprint Devices For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": "",
													"disabled": true
												},
												{
													"key": "Ids",
													"value": "",
													"disabled": true
												},
												{
													"key": "FreeText",
													"value": ""
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Fingerprint Device For Dropdown",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Fingerprint Device",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/delete?fingerprintDeviceid=3",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"delete"
											],
											"query": [
												{
													"key": "fingerprintDeviceid",
													"value": "3"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Disable Fingerprint Device",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/disable?Id=1&DisableReason=NotUsingYet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"disable"
											],
											"query": [
												{
													"key": "Id",
													"value": "1"
												},
												{
													"key": "DisableReason",
													"value": "NotUsingYet"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Enable Fingerprint Device",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/enable?fingerprintDeviceId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"enable"
											],
											"query": [
												{
													"key": "fingerprintDeviceId",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Fingerprint Devices Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/FingerprintDevice/GetFingerprintDevicesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"FingerprintDevice",
												"GetFingerprintDevicesInformations"
											]
										}
									},
									"response": []
								}
							],
							"description": "0."
						}
					],
					"description": "``` csharp\npublic enum FingerPrintType // Type with Create Finger Print or Default type in get fingerprint info\n{\n    CheckIn,\n    CheckOut,\n    BreakIn,\n    BreakOut,\n    Summon,\n    NotSet\n}\n\n ```"
				},
				{
					"name": "Requests",
					"item": [
						{
							"name": "Dawem Admins",
							"item": [
								{
									"name": "Task Request",
									"item": [
										{
											"name": "Create Task Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestTaskModelString",
															"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"02/18/2023\",\"DateTo\":\"02/18/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ULTIMA-USER-GUIDE.pdf"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Task Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestTaskModelString",
															"value": "{\"Id\":2,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Task Requests For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": "المعلاوي",
															"disabled": true
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Code",
															"value": "1",
															"disabled": true
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Reject?id=1&RejectReason=the reject reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the reject reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/GetInfo?requestId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "5"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/GetById?requestId=131",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "131"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Tasks Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestTask/GetTasksInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestTask",
														"GetTasksInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Vacation Request",
									"item": [
										{
											"name": "Create Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestVacationModelString",
															"value": "{\"IsNecessary\":true,\"ForEmployee\":true,\"EmployeeId\":13,\"VacationTypeId\":8,\"DateFrom\":\"02/08/2023\",\"DateTo\":\"02/08/2023\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestVacationModelString",
															"value": "{\"Id\":4,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"VacationTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Vacation Requests For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": ""
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Accept?requestId=99",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "99"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Reject?id=1&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/GetInfo?requestId=103",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "103"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/GetById?requestId=4",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "4"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Vacations Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestVacation/GetVacationsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestVacation",
														"GetVacationsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Permission Request",
									"item": [
										{
											"name": "Create Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestPermissionModelString",
															"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"PermissionTypeId\":1,\"DateFrom\":\"02/18/2024 11:30\",\"DateTo\":\"02/18/2024 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestPermissionModelString",
															"value": "{\"Id\":151,\"IsNecessary\":true,\"ForEmployee\":false,\"PermissionTypeId\":6,\"DateFrom\":\"12/13/2024 11:30\",\"DateTo\":\"12/13/2024 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Dawem Collection.postman_collection.json"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Permission Requests For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&IsExport=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": "المعلاوي",
															"disabled": true
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Code",
															"value": "75",
															"disabled": true
														},
														{
															"key": "IsExport",
															"value": "false"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Reject?id=1&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/GetInfo?requestId=195",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "195"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/GetById?requestId=4",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "4"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Permissions Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestPermission/GetPermissionsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestPermission",
														"GetPermissionsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Assignment Request",
									"item": [
										{
											"name": "Create Assignment Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestAssignmentModelString",
															"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":13,\"AssignmentTypeId\":1,\"DateFrom\":\"05/13/2023 11:30\",\"DateTo\":\"05/13/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Assignment Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestAssignmentModelString",
															"value": "{\"Id\":13,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"AssignmentTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Pictures/11.PNG"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Assignment Requests For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "FreeText",
															"value": "هند",
															"disabled": true
														},
														{
															"key": "Code",
															"value": "93",
															"disabled": true
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Accept?requestId=448",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "448"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Reject?id=13&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "13"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/GetInfo?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/GetById?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Assignments Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestAssignment/GetAssignmentsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestAssignment",
														"GetAssignmentsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Justification Request",
									"item": [
										{
											"name": "Create Justification Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestJustificationModelString",
															"value": "{\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"JustificationTypeId\":1,\"DateFrom\":\"01/05/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Justification Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestJustificationModelString",
															"value": "{\"id\":149,\"IsNecessary\":true,\"ForEmployee\":false,\"EmployeeId\":17,\"JustificationTypeId\":1,\"DateFrom\":\"01/06/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Amgad/Desktop/Warning.jpg"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Justification Requests For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": ""
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Accept?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Reject?id=13&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "13"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/GetInfo?requestId=297",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "297"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/GetById?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Justifications Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/RequestJustification/GetJustificationsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"RequestJustification",
														"GetJustificationsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Request",
									"item": [
										{
											"name": "Get",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": "Assignment Typ",
															"disabled": true
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/GetInfo?requestId=521",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "521"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/Reject?id=1&refuseReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "refuseReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Requests Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Request/GetRequestsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Request",
														"GetRequestsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Employees",
							"item": [
								{
									"name": "Task Request",
									"item": [
										{
											"name": "Create Task Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestTaskModelString",
															"value": "{\"IsNecessary\":true,\"TaskTypeId\":1,\"DateFrom\":\"04/02/2024 00:30:00\",\"DateTo\":\"04/02/2024 01:30:00\",\"TaskEmployeeIds\":[13],\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ULTIMA-USER-GUIDE.pdf"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Task Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestTaskModelString",
															"value": "{\"Id\":2,\"IsNecessary\":true,\"TaskTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"TaskEmployeeIds\":[56,57,60,61],\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Task Requests",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Get?Month=4&year=2024",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Get"
													],
													"query": [
														{
															"key": "Month",
															"value": "4"
														},
														{
															"key": "year",
															"value": "2024"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Reject?id=1&RejectReason=the reject reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the reject reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/GetInfo?requestId=131",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "131"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestTask/GetById?requestId=136",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestTask",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "136"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Vacation Request",
									"item": [
										{
											"name": "Create Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestVacationModelString",
															"value": "{\"IsNecessary\":true,\"VacationTypeId\":4,\"DateFrom\":\"02/05/2023\",\"DateTo\":\"02/10/2023\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate.xlsx",
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestVacationModelString",
															"value": "{\"Id\":4,\"IsNecessary\":true,\"VacationTypeId\":1,\"DateFrom\":\"12/02/2023\",\"DateTo\":\"12/06/2023\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Amgad Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Documents/ENG.Elsayed Hourly Rate 11-2023.xlsx"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Test upload.txt"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Vacation Requests",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&VacationStatus=2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": ""
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "VacationStatus",
															"value": "2",
															"description": "public enum VacationStatus\n{\n    Previous,\n    Current,        \n    Next\n}"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Accept?requestId=7",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "7"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Reject?id=1&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetInfo?requestId=4",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "4"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetById?requestId=4",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "4"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Vacations Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestVacation/GetVacationsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestVacation",
														"GetVacationsInformations"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									],
									"description": "public enum VacationStatus  \n{  \nPrevious,  \nCurrent,  \nNext  \n}"
								},
								{
									"name": "Permission Request",
									"item": [
										{
											"name": "Create Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestPermissionModelString",
															"value": "{\"IsNecessary\":true,\"PermissionTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Vacation Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestPermissionModelString",
															"value": "{\"Id\":11,\"IsNecessary\":true,\"PermissionTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Downloads/Dawem Collection.postman_collection.json"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Permission Requests",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": ""
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Reject?id=1&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/GetInfo?requestId=11",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "11"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestPermission/GetById?requestId=311",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestPermission",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "311"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Assignment Request",
									"item": [
										{
											"name": "Create Assignment Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestAssignmentModelString",
															"value": "{\"IsNecessary\":true,\"AssignmentTypeId\":1,\"DateFrom\":\"01/05/2023 11:30\",\"DateTo\":\"01/06/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Assignment Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestAssignmentModelString",
															"value": "{\"Id\":13,\"IsNecessary\":true,\"AssignmentTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Pictures/11.PNG"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Assignment Requests",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Get?Month=04&year=2024",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Get"
													],
													"query": [
														{
															"key": "Month",
															"value": "04"
														},
														{
															"key": "year",
															"value": "2024"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Accept?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Reject?id=13&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "13"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/GetInfo?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestAssignment/GetById?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestAssignment",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Justification Request",
									"item": [
										{
											"name": "Create Justification Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "CreateRequestJustificationModelString",
															"value": "{\"IsNecessary\":true,\"JustificationTypeId\":1,\"DateFrom\":\"01/05/2024 11:30\",\"DateTo\":\"01/10/2024 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": [],
															"disabled": true
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Create"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Update Justification Request",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "UpdateRequestJustificationModelString",
															"value": "{\"Id\":13,\"IsNecessary\":true,\"JustificationTypeId\":1,\"DateFrom\":\"12/05/2023 11:30\",\"DateTo\":\"12/10/2023 12:30\",\"Notes\":\"test notes\"}",
															"type": "text"
														},
														{
															"key": "Attachments",
															"type": "file",
															"src": "/C:/Users/Leilla/Pictures/11.PNG"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Update"
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Justification Requests",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Get?FreeText=&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": ""
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Accept?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Reject?id=13&RejectReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "13"
														},
														{
															"key": "RejectReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/GetInfo?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get By Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequestJustification/GetById?requestId=13",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequestJustification",
														"GetById"
													],
													"query": [
														{
															"key": "requestId",
															"value": "13"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								},
								{
									"name": "Request",
									"item": [
										{
											"name": "Get",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequest/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequest",
														"Get"
													],
													"query": [
														{
															"key": "FreeText",
															"value": "مهمة",
															"disabled": true
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Get Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequest/GetInfo?requestId=11",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequest",
														"GetInfo"
													],
													"query": [
														{
															"key": "requestId",
															"value": "11"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Accept",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequest/Accept?requestId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequest",
														"Accept"
													],
													"query": [
														{
															"key": "requestId",
															"value": "1"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Reject",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequest/Reject?id=1&refuseReason=the refuse reason",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequest",
														"Reject"
													],
													"query": [
														{
															"key": "id",
															"value": "1"
														},
														{
															"key": "refuseReason",
															"value": "the refuse reason"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										},
										{
											"name": "Delete",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"disabled": true
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeRequest/Delete?requestId=30",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeRequest",
														"Delete"
													],
													"query": [
														{
															"key": "requestId",
															"value": "30"
														}
													]
												},
												"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Request Types",
							"item": [
								{
									"name": "Assignment Type",
									"item": [
										{
											"name": "Create Assignment Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Assignment Type 5\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Assignment Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"id\":5,\r\n  \"name\": \"Assignment Type 55\",\r\n  \"isActive\": false\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Assignment Type Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/GetInfo?assignmentTypeId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"GetInfo"
													],
													"query": [
														{
															"key": "assignmentTypeId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Assignment Type by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/GetById?assignmentTypeId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"GetById"
													],
													"query": [
														{
															"key": "assignmentTypeId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Assignment Types For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null,
															"disabled": true
														},
														{
															"key": "Ids",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Assignment Type For Dropdown",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
												},
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null
														},
														{
															"key": "Ids",
															"value": null
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Assignment Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/delete?assignmentTypeId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"delete"
													],
													"query": [
														{
															"key": "assignmentTypeId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Assignment Types Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/AssignmentType/GetAssignmentTypesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"AssignmentType",
														"GetAssignmentTypesInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "0."
								},
								{
									"name": "Task Type",
									"item": [
										{
											"name": "Create Task Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Task Type 3\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Task Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"id\":3,\r\n  \"name\": \"Task Type 33\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Type Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/GetInfo?taskTypeid=3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"GetInfo"
													],
													"query": [
														{
															"key": "taskTypeid",
															"value": "3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Type by ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/GetById?taskTypeid=3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"GetById"
													],
													"query": [
														{
															"key": "taskTypeid",
															"value": "3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Types For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null,
															"disabled": true
														},
														{
															"key": "Ids",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Type For Dropdown",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
												},
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null
														},
														{
															"key": "Ids",
															"value": null
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Task Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/delete?taskTypeid=3",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"delete"
													],
													"query": [
														{
															"key": "taskTypeid",
															"value": "3"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Task Types Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/TaskType/GetTaskTypesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"TaskType",
														"GetTaskTypesInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "0."
								},
								{
									"name": "Justification Type",
									"item": [
										{
											"name": "Create Justification Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Tabreer 4\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Justification Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Tabreer 6 edited\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Justification Type Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/GetInfo?justificationTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"GetInfo"
													],
													"query": [
														{
															"key": "justificationTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Justification Type By ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/GetById?justificationTypeId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"GetById"
													],
													"query": [
														{
															"key": "justificationTypeId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Justification Type For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null,
															"disabled": true
														},
														{
															"key": "Ids",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Justification Type For Dropdown",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null
														},
														{
															"key": "Ids",
															"value": null
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Justification Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/delete?justificationTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"delete"
													],
													"query": [
														{
															"key": "justificationTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Justification Types Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/JustificationType/GetJustificationTypesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"JustificationType",
														"GetJustificationTypesInformations"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Permission Type",
									"item": [
										{
											"name": "Create Permission Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"Permission type 1\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Permission Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Permision 1 edited\",\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Permission Type Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/GetInfo?permissionTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"GetInfo"
													],
													"query": [
														{
															"key": "permissionTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Permission Type By ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/GetById?permissionTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"GetById"
													],
													"query": [
														{
															"key": "permissionTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Permission Type For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null,
															"disabled": true
														},
														{
															"key": "Ids",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Permission Type For Dropdown",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null
														},
														{
															"key": "Ids",
															"value": null
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Permission Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/delete?permissionTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"delete"
													],
													"query": [
														{
															"key": "permissionTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Permission Types Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/PermissionType/GetPermissionTypesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"PermissionType",
														"GetPermissionTypesInformations"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Vacation Type",
									"item": [
										{
											"name": "Create Vacation Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"name\": \"عارضة\",\r\n  \"isActive\": true,\r\n  \"DefaultType\":0 \r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Vacation Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"id\":6,\r\n  \"name\": \"Vacation 22 edited\",\r\n  \"DefaultType\":0 ,\r\n  \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Vacation Type Info",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/GetInfo?VacationTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"GetInfo"
													],
													"query": [
														{
															"key": "VacationTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Vacation Type By ID",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/GetById?VacationTypeId=1",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"GetById"
													],
													"query": [
														{
															"key": "VacationTypeId",
															"value": "1"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Vacation Type For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": "",
															"disabled": true
														},
														{
															"key": "Ids",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Vacation Type For Dropdown",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/GetForDropDown?IsExport=false&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Id&Ids",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null
														},
														{
															"key": "Ids",
															"value": null
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Vacation Type",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/delete?VacationTypeId=6",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"delete"
													],
													"query": [
														{
															"key": "VacationTypeId",
															"value": "6"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Vacation Types Informations",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/VacationType/GetVacationTypesInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"VacationType",
														"GetVacationTypesInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "public enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
								}
							],
							"description": "public enum VacationType  \n{  \nOrdinary,  \nEmergency,  \nSick,  \nFemaleVacation,  \nOther  \n}"
						}
					],
					"description": "public enum RequestType  \n{  \nAssignment,  \nJustifications,  \nPermissions,  \nTask,  \nVacations  \n}\n\npublic enum RequestStatus  \n{  \nPending,  \nAccepted,  \nRejected  \n}"
				},
				{
					"name": "Dashboard",
					"item": [
						{
							"name": "Dawem Admin",
							"item": [
								{
									"name": "Get Header Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetHeaderInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetHeaderInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees Attendances Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesAttendancesInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetEmployeesAttendancesInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Requests Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetRequestsStatus?Type=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetRequestsStatus"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "01-01-2023",
													"disabled": true
												},
												{
													"key": "DateTo",
													"value": "01-01-2024",
													"disabled": true
												},
												{
													"key": "Type",
													"value": "0"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetEmployeesStatus"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Departments Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetDepartmentsInformations?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Type=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetDepartmentsInformations"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Type",
													"value": "1",
													"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
												},
												{
													"key": "DateFrom",
													"value": "01-01-2023",
													"disabled": true
												},
												{
													"key": "DateTo",
													"value": "06-06-2023",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Employees Attendances Status",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetEmployeesAttendancesStatus?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=9&Type=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetEmployeesAttendancesStatus"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "9"
												},
												{
													"key": "Type",
													"value": "1",
													"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
												},
												{
													"key": "DateFrom",
													"value": "01-01-2023",
													"disabled": true
												},
												{
													"key": "DateTo",
													"value": "06-06-2023",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get Best Employees",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Dashboard/GetBestEmployees?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&Type=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Dashboard",
												"GetBestEmployees"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Type",
													"value": "1",
													"description": "public enum GetRequestsStatusType\n{\n    CurrentDay,\n    CurrentMonth,\n    CurrentYear\n}"
												},
												{
													"key": "DateFrom",
													"value": "01-01-2023",
													"disabled": true
												},
												{
													"key": "DateTo",
													"value": "06-06-2023",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Employee",
							"item": [
								{
									"name": "Get Header Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeDashboard/GetHeaderInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeDashboard",
												"GetHeaderInformations"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Permissions",
					"item": [
						{
							"name": "Permissions",
							"item": [
								{
									"name": "Create Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"ForType\": 1, // 0 Responsibility  1 User\r\n    \"UserId\": 71,\r\n    \"ResponsibilityId\": null,\r\n    \"Screens\": [\r\n        {\r\n            \"ScreenId\": 10,\r\n            \"Actions\": [0,1]\r\n        },\r\n        {\r\n            \"ScreenId\": 1,\r\n            \"Actions\": [3]\r\n        },\r\n        {\r\n            \"ScreenId\": 2,\r\n            \"Actions\": [0,1,3]\r\n        },\r\n        {\r\n            \"ScreenId\": 3,\r\n            \"Actions\": [0,1,2,3]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Permission/Create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"Create"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": 5,\r\n    \"ForType\": 1, // 0 Responsibility  1 User\r\n    \"UserId\": 58,\r\n    \"ResponsibilityId\": null,\r\n    \"Screens\": [\r\n        {\r\n            \"ScreenId\": 0,\r\n            \"Actions\": [0,1]\r\n        },\r\n        {\r\n            \"ScreenId\": 1,\r\n            \"Actions\": [3]\r\n        },\r\n        {\r\n            \"ScreenId\": 2,\r\n            \"Actions\": [0,1,3]\r\n        },\r\n        {\r\n            \"ScreenId\": 3,\r\n            \"Actions\": [0,1,2,3]\r\n        }\r\n    ],\r\n    \"IsActive\": true\r\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/Permission/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"Update"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetInfo?permissionId=12",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetInfo"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "12"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Screens",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetPermissionScreens?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&PermissionId=12&FreeText=&ScreenCode&ActionCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetPermissionScreens"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "PermissionId",
													"value": "12"
												},
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "ScreenCode",
													"value": null
												},
												{
													"key": "ActionCode",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission by Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetById?permissionId=1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetById"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Check And Get Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/CheckAndGetPermission?ResponsibilityId=408",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"CheckAndGetPermission"
											],
											"query": [
												{
													"key": "UserId",
													"value": "74",
													"disabled": true
												},
												{
													"key": "ResponsibilityId",
													"value": "408"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permissions For Grid",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&FreeText=&ScreenId&ActionCode",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"Get"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "FreeText",
													"value": ""
												},
												{
													"key": "ScreenId",
													"value": null
												},
												{
													"key": "ActionCode",
													"value": null
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Permission",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/delete?permissionId=4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"delete"
											],
											"query": [
												{
													"key": "permissionId",
													"value": "4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permissions Informations",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetPermissionsInformations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetPermissionsInformations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Permission Logs",
							"item": [
								{
									"name": "Get Permission Log Info",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{baseUrl}}/api/PermissionLog/GetInfo?permissionLogId=94170",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionLog",
												"GetInfo"
											],
											"query": [
												{
													"key": "permissionLogId",
													"value": "94170"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Permission Logs",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/PermissionLog/Get?FreeText&IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"PermissionLog",
												"Get"
											],
											"query": [
												{
													"key": "FreeText",
													"value": null
												},
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "UserId",
													"value": "",
													"description": "إختر المستخدم",
													"disabled": true
												},
												{
													"key": "ScreenId",
													"value": "",
													"description": "إختر الشاشة",
													"disabled": true
												},
												{
													"key": "ActionCode",
													"value": "",
													"description": "إختر الإجراء",
													"disabled": true
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Helpers",
							"item": [
								{
									"name": "Get Current User Menu Items",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetCurrentUserMenuItems",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetCurrentUserMenuItems"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Actions",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Permission/GetAllActions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Permission",
												"GetAllActions"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"description": "``` csharp\n public enum ApplicationScreenCode\n {\n     AssignmentType,\n     Dashboard,\n     Department,\n     Employee,\n     EmployeeAttendance,\n     EmployeeDashboard,\n     EmployeeHoliday,\n     EmployeeRequest,\n     EmployeeRequestAssignment,\n     EmployeeRequestJustification,\n     EmployeeRequestPermission,\n     EmployeeRequestTask,\n     EmployeeRequestVacation,\n     FingerprintDevice,\n     Group,\n     Holiday,\n     HolidayType,\n     JobTitle,\n     JustificationType,\n     Permission,\n     PermissionLog,\n     PermissionType,\n     Request,\n     RequestAssignment,\n     RequestJustification,\n     RequestPermission,\n     RequestTask,\n     RequestVacation,\n     Role,\n     Schedule,\n     SchedulePlan,\n     SchedulePlanBackgroundJobLog,\n     ShiftWorkingTime,\n     TaskType,\n     User,\n     VacationBalance,\n     VacationType,\n     Zone\n }\n public enum ApplicationAction\n{\n    AdditionAction, // الاضافة\n    EditAction,// التعديل\n    DeletionAction,// الحذف\n    ViewingAction,// المشاهدة\n    AcceptAction,// القبول\n    RejectAction,// الرفض\n    EnableAction,// التفعيل\n    DisableAction// التعطيل\n}\npublic enum ForResponsibilityOrUser\n{\n    Responsibility,\n    User\n}\n\n ```"
				},
				{
					"name": "Summons",
					"item": [
						{
							"name": "Dawem Admins",
							"item": [
								{
									"name": "Sanctions",
									"item": [
										{
											"name": "Create Sanction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"name\": \"Test Sanction 5\",\r\n    \"type\": 0,\r\n    \"WarningMessage\": \"يجب تسجيل البصمة والا يتم إرسال انذار\",\r\n    \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Sanction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": 5,\r\n    \"name\": \"Test Sanction 5 Edited\",\r\n    \"type\": 0,\r\n    \"WarningMessage\": \"يجب تسجيل البصمة والا يتم إرسال انذار\",\r\n    \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Sanction Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/GetInfo?sanctionId=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"GetInfo"
													],
													"query": [
														{
															"key": "sanctionId",
															"value": "10"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Sanction by Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/GetById?sanctionId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"GetById"
													],
													"query": [
														{
															"key": "sanctionId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Sanctions For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": "",
															"disabled": true
														},
														{
															"key": "Ids",
															"value": "",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Sanction For Dropdown",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"GetForDropDown"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": null,
															"disabled": true
														},
														{
															"key": "Ids",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Sanction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/delete?sanctionId=5",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"delete"
													],
													"query": [
														{
															"key": "sanctionId",
															"value": "5"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Disable Sanction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/disable?Id=4&DisableReason=gggg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"disable"
													],
													"query": [
														{
															"key": "Id",
															"value": "4"
														},
														{
															"key": "DisableReason",
															"value": "gggg"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Enable Sanction",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/enable?sanctionId=4",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"enable"
													],
													"query": [
														{
															"key": "sanctionId",
															"value": "4"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Sanctions Informations",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/api/Sanction/GetSanctionsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Sanction",
														"GetSanctionsInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "``` csharp\npublic enum SanctionType نوع الجزاء\n{\n    Notification, // تنبيه\n    CancelDayFingerprint  // الغاء بصمة اليوم\n}\n\n ```"
								},
								{
									"name": "Summon Logs",
									"item": [
										{
											"name": "Get Summon Log Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/SummonLog/GetInfo?summonLogId=5493",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"SummonLog",
														"GetInfo"
													],
													"query": [
														{
															"key": "summonLogId",
															"value": "5493"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summon Logs For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/SummonLog/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0&SummonDoneStatus&SummonDate&EmployeeNumber&SummonCode",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"SummonLog",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": "",
															"disabled": true
														},
														{
															"key": "Ids",
															"value": "",
															"disabled": true
														},
														{
															"key": "SummonDoneStatus",
															"value": null,
															"description": "حالة القيام بالإستدعاء ->  قام بالإستدعاء - لم يقم بالإستدعاء"
														},
														{
															"key": "SummonDate",
															"value": null,
															"description": "تاريخ الإستدعاء"
														},
														{
															"key": "EmployeeNumber",
															"value": null,
															"description": "الرقم الوظيفي للموظف"
														},
														{
															"key": "SummonCode",
															"value": null,
															"description": "كود الإستدعاء"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summon Logs Informations",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/api/SummonLog/GetSummonLogsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"SummonLog",
														"GetSummonLogsInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "``` csharp\npublic enum ForType\n{\n    Employees,\n    Groups,\n    Departments\n}\npublic enum TimeType\n{\n     Second,\n     Minute,\n     Hour\n}\npublic enum NotifyWay\n{\n    OnApp,\n    Email\n}\npublic enum SummonDoneStatus\n{\n    Done,\n    NotDone\n}\n\n ```"
								},
								{
									"name": "Summons",
									"item": [
										{
											"name": "Create Summon",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"forType\": 0,\r\n    \"forAllEmployees\": null, // boolean\r\n    \"allowedTime\": 5,\r\n    \"TimeType\": 2,\r\n    \"notifyWays\": [\r\n        0,\r\n        1\r\n    ],\r\n    \"LocalDateAndTime\": \"2024-04-23 20:00\",   \r\n    \"Employees\": [\r\n        13\r\n    ], // list\r\n    \"Groups\": [\r\n       \r\n    ], // list\r\n    \"Departments\":[\r\n        \r\n    ], // list\r\n    \"Sanctions\": [\r\n        1,\r\n        2\r\n    ], // list\r\n    \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Summon/Create",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"Create"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Summon",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"id\": 84,\r\n    \"forType\": 0,\r\n    \"forAllEmployees\": null, // boolean\r\n    \"allowedTime\": 30,\r\n    \"TimeType\": 0,\r\n    \"notifyWays\": [\r\n        0,\r\n        1\r\n    ],\r\n    \"LocalDateAndTime\": \"2018-03-29 13:40\",   \r\n    \"Employees\": [\r\n        78\r\n    ], // list\r\n    \"Groups\": null, // list\r\n    \"Departments\": null, // list\r\n    \"Sanctions\": [\r\n        1,\r\n        2\r\n    ], // list\r\n    \"isActive\": true\r\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/api/Summon/Update",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"Update"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summon Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "lang",
														"value": "ar",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/Summon/GetInfo?summonId=194",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"GetInfo"
													],
													"query": [
														{
															"key": "summonId",
															"value": "194"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summon by Id",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Summon/GetById?summonId=68",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"GetById"
													],
													"query": [
														{
															"key": "summonId",
															"value": "68"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summons For Grid",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Summon/Get?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"Get"
													],
													"query": [
														{
															"key": "IsExport",
															"value": "false"
														},
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": "",
															"disabled": true
														},
														{
															"key": "Ids",
															"value": "",
															"disabled": true
														},
														{
															"key": "Status",
															"value": null,
															"disabled": true
														},
														{
															"key": "Date",
															"value": null,
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Summon",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Summon/delete?summonId=84",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"delete"
													],
													"query": [
														{
															"key": "summonId",
															"value": "84"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Disable Summon",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Summon/disable?Id=84&DisableReason=gggg",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"disable"
													],
													"query": [
														{
															"key": "Id",
															"value": "84"
														},
														{
															"key": "DisableReason",
															"value": "gggg"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Enable Summon",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/Summon/enable?summonId=84",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"enable"
													],
													"query": [
														{
															"key": "summonId",
															"value": "84"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summons Informations",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/api/Summon/GetSummonsInformations",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"Summon",
														"GetSummonsInformations"
													]
												}
											},
											"response": []
										}
									],
									"description": "``` csharp\npublic enum SummonStatus\n{\n    NotStarted,\n    OnGoing,\n    Finished\n}\n\n ```"
								}
							]
						},
						{
							"name": "Employees",
							"item": [
								{
									"name": "Summons",
									"item": [
										{
											"name": "Get Summons",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeSummon/Get?PagingEnabled=true&PageSize=5&PageNumber=0&Status=2",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeSummon",
														"Get"
													],
													"query": [
														{
															"key": "PagingEnabled",
															"value": "true"
														},
														{
															"key": "PageSize",
															"value": "5"
														},
														{
															"key": "PageNumber",
															"value": "0"
														},
														{
															"key": "Id",
															"value": "",
															"disabled": true
														},
														{
															"key": "Ids",
															"value": "",
															"disabled": true
														},
														{
															"key": "Status",
															"value": "2"
														},
														{
															"key": "Date ",
															"value": "2024-05-09",
															"description": "2024-05-09  or  2024/05/09 or 05/09/2024 or 05-09-2024",
															"disabled": true
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Summon Info",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{BearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "lang",
														"value": "ar"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{baseUrl}}/api/EmployeeSummon/GetInfo?summonId=68",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"EmployeeSummon",
														"GetInfo"
													],
													"query": [
														{
															"key": "summonId",
															"value": "68"
														}
													]
												}
											},
											"response": []
										}
									],
									"description": "``` csharp\n public enum SummonStatus\n {\n     NotStarted,\n     OnGoing,\n     Finished,\n     FinishedAndMissed\n }\n\n ```"
								}
							]
						}
					],
					"description": "``` csharp\npublic enum SummonStatus\n{\n    NotStarted,\n    OnGoing,\n    Finished,\n    FinishedAndMissed\n}\n\n ```"
				},
				{
					"name": "Reports OLD",
					"item": [
						{
							"name": "Get Attendance Summary",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/AttendanceSummaryReport/GetAttendanceSummary?PagingEnabled=true&PageSize=5&PageNumber=0&DateFrom=04-04-2024&DateTo=04-04-2024&EmployeesIds=13",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"AttendanceSummaryReport",
										"GetAttendanceSummary"
									],
									"query": [
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "DateFrom",
											"value": "04-04-2024"
										},
										{
											"key": "DateTo",
											"value": "04-04-2024"
										},
										{
											"key": "FreeText",
											"value": "معلاوي",
											"disabled": true
										},
										{
											"key": "IsExport",
											"value": "true",
											"description": "assign true if you need all data to export in pdf or excel",
											"disabled": true
										},
										{
											"key": "EmployeesIds",
											"value": "13"
										},
										{
											"key": "FilterType",
											"value": "5",
											"description": "طريقة التصفية ---- إختر طريقة التصفية",
											"disabled": true
										},
										{
											"key": "FilterTypeFrom",
											"value": "100",
											"description": "مثال 1 ---- قيمة التصفية من ( ساعات العمل ) \nمثال 2 ---- إدخل قيمة التصفية من ( التأخير )\nمثال 3 ---- قيمة التصفية من ( الوقت الإضافي ) ",
											"disabled": true
										},
										{
											"key": "FilterTypeTo",
											"value": "200",
											"description": "مثال 1 ---- قيمة التصفية إلي ( ساعات العمل ) \nمثال 2 ---- قيمة التصفية إلي ( التأخير ) \nمثال 3 ---- قيمة التصفية إلي ( الوقت الإضافي )",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": [
								{
									"name": "Get Attendance Summary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AttendanceSummaryReport/GetAttendanceSummary?PagingEnabled=true&PageSize=5&PageNumber=0&DateFrom=10-18-2023&DateTo=12-12-2023&EmployeesIds=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AttendanceSummaryReport",
												"GetAttendanceSummary"
											],
											"query": [
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "DateFrom",
													"value": "10-18-2023"
												},
												{
													"key": "DateTo",
													"value": "12-12-2023"
												},
												{
													"key": "FreeText",
													"value": "معلاوي",
													"disabled": true
												},
												{
													"key": "IsExport",
													"value": "true",
													"description": "assign true if you need all data to export in pdf or excel",
													"disabled": true
												},
												{
													"key": "EmployeesIds",
													"value": "13"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Length",
											"value": "409"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "Server",
											"value": "Microsoft-IIS/10.0"
										},
										{
											"key": "Date",
											"value": "Mon, 18 Mar 2024 20:33:56 GMT"
										}
									],
									"cookie": [],
									"body": "{\n    \"state\": 1,\n    \"message\": \"تم بنجاح\",\n    \"data\": [\n        {\n            \"employeeId\": 13,\n            \"employeeNumber\": 21, //  الرقم الوظيفي\n            \"employeeName\": \"امجد المعلاوي\",  //  إسم الموظف\n            \"shouldAttendCount\": \"48 يوم\",  // الحضور الإفتراضي\n            \"actualAttendCount\": \"9 يوم\",  // الحضور الفعلي\n            \"vacationsCount\": \"0 يوم\",  // الأجازات\n            \"absencesCount\": \"39 يوم\",  // الغياب\n            \"workingHoursCount\": \"61.30 ساعة\",  // وقت العمل\n            \"lateArrivalsCount\": \"19.42 ساعة\",  // التأخير\n            \"earlyDeparturesCount\": \"9.03 ساعة\",  // المغادرة مبكرا\n            \"overTimeCount\": \"48.81 ساعة\"  // الوقت الإضافي\n        }\n    ],\n    \"totalCount\": 1\n}"
								}
							]
						}
					],
					"description": "``` csharp\npublic enum ReportFilterType\n{\n    ActualAttend, // الحضور الفعلي\n    EarlyDepartures, // المغادرة مبكرا\n    LateArrivals, // التأخير\n    OverTime, // الوقت الإضافي\n    Vacations, // الأجازات\n    WorkingHours    // ساعات العمل    \n}\n\n ```"
				},
				{
					"name": "Excel",
					"item": [
						{
							"name": "Employees",
							"item": [
								{
									"name": "Export Draft",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Employee/CreateExportDraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"CreateExportDraft"
											]
										}
									},
									"response": []
								},
								{
									"name": "Import Employees From Excel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/C:/Users/Amgad/Downloads/EmployeeAttendanceEmptyDraft (2).xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Employee/CreateImportDataFromExcel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Employee",
												"CreateImportDataFromExcel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Departments",
							"item": [
								{
									"name": "Export Draft",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/CreateExportDraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"CreateExportDraft"
											]
										}
									},
									"response": []
								},
								{
									"name": "Import Departments From Excel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/C:/Users/Amgad/Downloads/DepartmentEmptyDraft (1).xls"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Department/CreateImportDataFromExcel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"CreateImportDataFromExcel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Zones",
							"item": [
								{
									"name": "Export Draft",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Department/CreateExportDraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Department",
												"CreateExportDraft"
											]
										}
									},
									"response": []
								},
								{
									"name": "Import Zones From Excel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/C:/Users/Amgad/Downloads/ZoneEmptyDraft (1) (2).xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Zone/CreateImportDataFromExcel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Zone",
												"CreateImportDataFromExcel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Employees Attendance",
							"item": [
								{
									"name": "Export Draft",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Attendance/CreateExportDraft",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attendance",
												"CreateExportDraft"
											]
										}
									},
									"response": []
								},
								{
									"name": "Import Employees Attendance From Excel",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"type": "file",
													"src": "/C:/Users/Amgad/Downloads/EmployeeAttendanceEmptyDraft (Case 2).xlsx"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Attendance/CreateImportDataFromExcel",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Attendance",
												"CreateImportDataFromExcel"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Providers",
					"item": [
						{
							"name": "Companies",
							"item": [
								{
									"name": "Update Company",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "UpdateCompanyModelString",
													"value": "{\n   \"PreferredLanguageId\":17,\n   \"WebSite\":\"www.leillacompanytest1.com Edited\",\n   \"HeadquarterAddress\":\"Headquarter Address 1 edit\",\n\"HeadquarterLocationLatitude\": \"28.663108\",\n\"HeadquarterLocationLongitude\": \"30.814411\",\n   \"HeadquarterPostalCode\":\"Headquarter Postal Code 1 edit\",\n   \"Email\":\"test.company@gmail.com\",\n   \"TotalNumberOfEmployees\":250,\n   \"LogoImageName\":null,\n   \"ImportDefaultData\":false,\n   \"AttachmentsNames\":[\"attach 1\", \"attach 2\"],\n   \"Industries\":[\n      {\n         \"Id\":1,\n         \"Name\":\"Industry 1 edit\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Industry 3 new\"\n      }\n   ],\n   \"Branches\":[\n      {\n         \"Id\":1,\n         \"Name\":\"Branch 1 edit\",\n         \"Address\":\"Address 1 edit\",\n         \"Latitude\": \"28.663108\",\n         \"Longitude\": \"30.814411\",\n         \"PostalCode\":\"Postal Code 1 edit \"\n      },\n      {\n         \"Id\":2,\n         \"Name\":\"Branch 2 edit\",\n         \"Address\":\"Address 2 edit\",\n         \"Latitude\": \"28.663108\",\n         \"Longitude\": \"30.814411\",\n         \"PostalCode\":\"Postal Code 2 edit\"\n      },\n      {\n         \"Id\":0,\n         \"Name\":\"Branch 3\",\n         \"Address\":\"Address 3\",\n         \"Latitude\": \"28.663108\",\n         \"Longitude\": \"30.814411\",\n         \"PostalCode\":\"Postal Code 3\"\n      }\n   ]\n}",
													"description": "public enum AttendanceType\n    {\n        FullAttendance,\n        PartialAttendance,\n        FreeOrShiftAttendance\n    }\npublic enum EmployeeType\n{\n    Military,\n    CivilService,\n    Contract,\n    ContractFromCompany,\n}",
													"type": "text"
												},
												{
													"key": "LogoImageFile",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/555.PNG"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/111.PNG"
												},
												{
													"key": "Attachments",
													"type": "file",
													"src": "/C:/Users/Leilla/Pictures/555.PNG"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/api/Company/Update",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"Update"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/Company/GetById",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"Company",
												"GetById"
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Company Branches",
							"item": [
								{
									"name": "Get Company Branches For Dropdown",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/api/CompanyBranch/GetForDropDown?IsExport=false&PagingEnabled=true&PageSize=5&PageNumber=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"CompanyBranch",
												"GetForDropDown"
											],
											"query": [
												{
													"key": "IsExport",
													"value": "false"
												},
												{
													"key": "PagingEnabled",
													"value": "true"
												},
												{
													"key": "PageSize",
													"value": "5"
												},
												{
													"key": "PageNumber",
													"value": "0"
												},
												{
													"key": "Id",
													"value": null,
													"disabled": true
												},
												{
													"key": "Ids",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get By Id",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "lang",
												"value": "ar"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/CompanyBranch/GetById?branchId=34",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"CompanyBranch",
												"GetById"
											],
											"query": [
												{
													"key": "branchId",
													"value": "34"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Reports",
					"item": [
						{
							"name": "Attendance Reports",
							"item": [
								{
									"name": "GetEmployeeDailyAttendanceGroupByDay",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeDailyAttendanceGroupByDay/GetEmployeeDailyAttendanceGroupByDay?DateFrom=05/01/2024&EmployeeIds=30&DateTo=05/31/2024&EmployeeIds=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeDailyAttendanceGroupByDay",
												"GetEmployeeDailyAttendanceGroupByDay"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "الحضور اليومي للموظفين"
												},
												{
													"key": "EmployeeIds",
													"value": "30"
												},
												{
													"key": "DepartmentIds",
													"value": "15",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "12",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "1",
													"disabled": true
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "13"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetEmployeeAttendanceByDepartmentReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAttendanceByDepartment/GetEmployeeAttendanceByDepartmentReport?DateFrom=04/01/2024&DateTo=06/12/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAttendanceByDepartment",
												"GetEmployeeAttendanceByDepartmentReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "الحضور والانصراف للموظفين بالقسم"
												},
												{
													"key": "DateTo",
													"value": "06/12/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "13",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetAttendaceLeaveStatusShortGroupByJobReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AttendaceLeaveStatusShortGroupByJob/GetAttendaceLeaveStatusShortGroupByJobReport?DateFrom=05/01/2024&DateTo=05/31/2024&EmployeeIds=13",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AttendaceLeaveStatusShortGroupByJob",
												"GetAttendaceLeaveStatusShortGroupByJobReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "مختصر الحضور والانصراف بالمسمي الوظيفي"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "13"
												},
												{
													"key": "DepartmentIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetLateEarlyArrivalGroupByDepartmentReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/LateEarlyArrivalGroupByDepartment/GetLateEarlyArrivalGroupByDepartmentReport?DateFrom=05/01/2024&DateTo=06/02/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"LateEarlyArrivalGroupByDepartment",
												"GetLateEarlyArrivalGroupByDepartmentReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "الحضور مبكرا او متأخرا بالقسم"
												},
												{
													"key": "DateTo",
													"value": "06/02/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetAttendanceDetailsByEmployeeIDReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AttendanceDetailsByEmployeeID/GetAttendanceDetailsByEmployeeIDReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AttendanceDetailsByEmployeeID",
												"GetAttendanceDetailsByEmployeeIDReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "تفاصيل الحضور والانصراف"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetLateEarlyArrivalGroupByEmployeeReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/LateEarlyArrivalGroupByEmployee/GetLateEarlyArrivalGroupByEmployeeReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"LateEarlyArrivalGroupByEmployee",
												"GetLateEarlyArrivalGroupByEmployeeReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "الحضور مبكرا او متأخرا بالموظفين"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetEmployeeAbsenseInPeriodGroupByEmployeeReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAbsenseInPeriodGroupByEmployee/GetEmployeeAbsenseInPeriodGroupByEmployeeReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAbsenseInPeriodGroupByEmployee",
												"GetEmployeeAbsenseInPeriodGroupByEmployeeReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "غياب الموظفين فى فتره "
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "100",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetEmployeeAbsenseInPeriodGroupByDepartmentReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/EmployeeAbsenseInPeriodGroupByDepartment/GetEmployeeAbsenseInPeriodGroupByDepartmentReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"EmployeeAbsenseInPeriodGroupByDepartment",
												"GetEmployeeAbsenseInPeriodGroupByDepartmentReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "غياب الموظفين فى فتره بالقسم"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "100",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetOverTimeInSelectedPeriodReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/OverTimeInSelectedPeriod/GetOverTimeInSelectedPeriodReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"OverTimeInSelectedPeriod",
												"GetOverTimeInSelectedPeriodReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "الوقت الاضافى فى فتره "
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "100",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetAttendaceLeaveSummaryReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/AttendaceLeaveSummary/GetAttendaceLeaveSummaryReport?DateFrom=05/01/2024&DateTo=05/31/2024",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"AttendaceLeaveSummary",
												"GetAttendaceLeaveSummaryReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "05/01/2024",
													"description": "ملخص الحضور والانصراف"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "EmployeeIds",
													"value": "100",
													"disabled": true
												},
												{
													"key": "DepartmentIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Summons Reports",
							"item": [
								{
									"name": "GetBriefingSummonsInPeriodReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/BriefingSummonsInPeriod/GetBriefingSummonsInPeriodReport?DateFrom=04/01/2024&DateTo=05/31/2024&DepartmentIds=150&NoOfRequiredEmployeeFrom&NoOfRequiredEmployeeTo&PercentageOfDoneFrom&PercentageOfDoneTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"BriefingSummonsInPeriod",
												"GetBriefingSummonsInPeriodReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "ملخص الاستدعاءات فى فتره"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "DepartmentIds",
													"value": "150"
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "ZoneIds",
													"value": "",
													"disabled": true
												},
												{
													"key": "AllowedTimeWithMinutesFrom",
													"value": null,
													"disabled": true
												},
												{
													"key": "AllowedTimeWithMinutesTo",
													"value": null,
													"disabled": true
												},
												{
													"key": "NoOfRequiredEmployeeFrom",
													"value": null
												},
												{
													"key": "NoOfRequiredEmployeeTo",
													"value": null
												},
												{
													"key": "PercentageOfDoneFrom",
													"value": null
												},
												{
													"key": "PercentageOfDoneTo",
													"value": null
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetSummonsDetailsGroupByEmployeeReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SummonsDetailsGroupByEmployee/GetSummonsDetailsGroupByEmployeeReport?DateFrom=04/01/2024&DateTo=05/31/2024&Employees=13&NotifiyWay&AllowedTimeWithMinutesFrom&AllowedTimeWithMinutesTo&DoneStatus",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SummonsDetailsGroupByEmployee",
												"GetSummonsDetailsGroupByEmployeeReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "تفاصيل الاستدعاءات بالموظف"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "DepartmentIds",
													"value": "150",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "Employees",
													"value": "13"
												},
												{
													"key": "NotifiyWay",
													"value": null,
													"description": "طريقه الاشعار     public enum NotifyWay\n {\n     OnApp,\n     Email\n }"
												},
												{
													"key": "AllowedTimeWithMinutesFrom",
													"value": null,
													"description": "الوقت المسموح بالدقائق من"
												},
												{
													"key": "AllowedTimeWithMinutesTo",
													"value": null,
													"description": "الوقت المسموح بالدقائق الى "
												},
												{
													"key": "DoneStatus",
													"value": null,
													"description": "حاله تنفيذ الاستدعاء "
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetSummonsDetailsInPeriodReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/SummonsDetailsInPeriod/GetSummonsDetailsInPeriodReport?DateFrom=04/01/2024&DateTo=05/31/2024&Employees=13&NotifyWay&AllowedTimeWithMinutesFrom&AllowedTimeWithMinutesTo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"SummonsDetailsInPeriod",
												"GetSummonsDetailsInPeriodReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "تفاصيل الاستدعاءات فى فتره"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "DepartmentIds",
													"value": "150",
													"disabled": true
												},
												{
													"key": "JobTitleIds",
													"value": "0",
													"disabled": true
												},
												{
													"key": "Employees",
													"value": "13"
												},
												{
													"key": "NotifyWay",
													"value": null,
													"description": "طريقه الاشعار"
												},
												{
													"key": "AllowedTimeWithMinutesFrom",
													"value": null,
													"description": "الوقت المسموح بالدقائق الى "
												},
												{
													"key": "AllowedTimeWithMinutesTo",
													"value": null,
													"description": "الوقت المسموح بالدقائق من"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						},
						{
							"name": "Statistics Reports",
							"item": [
								{
									"name": "GetStatisticsOverAperiodReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/StatisticsOverAperiod/GetStatisticsOverAperiodReport?DateFrom=04/01/2024&DateTo=05/31/2024&OrderBy=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"StatisticsOverAperiod",
												"GetStatisticsOverAperiodReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "الاحصائيات خلال فتره على مستوي الشركه"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "OrderBy",
													"value": "0",
													"description": "الترتيب ب نسبه الغياب 0 نسبه التأخير 1"
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetStatisticsReportOverAperiodByDepartmentReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/StatisticsReportOverAperiodByDepartment/GetStatisticsReportOverAperiodByDepartmentReport?DateFrom=04/01/2024&DateTo=05/31/2024&OrderBy=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"StatisticsReportOverAperiodByDepartment",
												"GetStatisticsReportOverAperiodByDepartmentReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "الاحصائيات خلال فتره بالقسم"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "OrderBy",
													"value": "0",
													"description": "will be number depends on 0 for absensenPercentage  , 1 for latePercentage"
												},
												{
													"key": "DepartmentIDs",
													"value": null,
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								},
								{
									"name": "GetStatisticsReportOverAperiodGroupByMonthReport",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{BearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "lang",
												"value": "ar",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/StatisticsReportOverAperiodGroupByMonth/GetStatisticsReportOverAperiodGroupByMonthReport?DateFrom=04/01/2024&DateTo=05/31/2024&OrderBy=0",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"StatisticsReportOverAperiodGroupByMonth",
												"GetStatisticsReportOverAperiodGroupByMonthReport"
											],
											"query": [
												{
													"key": "DateFrom",
													"value": "04/01/2024",
													"description": "الاحصائيات خلال فتره بالشهر"
												},
												{
													"key": "DateTo",
													"value": "05/31/2024"
												},
												{
													"key": "OrderBy",
													"value": "0",
													"description": "will be number depends on 0 for absensenPercentage  , 1 for latePercentage"
												},
												{
													"key": "DepartmentIDs",
													"value": "",
													"disabled": true
												}
											]
										},
										"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Screens",
					"item": [
						{
							"name": "Get All Screens With Available Actions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/Screen/GetAllScreensWithAvailableActions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Screen",
										"GetAllScreensWithAvailableActions"
									],
									"query": [
										{
											"key": "IsForMenu",
											"value": "true",
											"disabled": true
										}
									]
								},
								"description": "## Add an order to the database\n\nYou can send a `POST` request to the `/orders` endpoint to create a new order and add it to the `orders` database. Open the body tab, edit the JSON object to match the item you want to add an order of, then click `Send`.\n\n![Add order](https://user-images.githubusercontent.com/5029719/76755799-6b2df100-677c-11ea-8605-8f8b948de90e.png)\n\n> Since this sample API is built using a mock server, the same object will be added regardless of what you enter."
							},
							"response": []
						},
						{
							"name": "Get Screens For Dropdown",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{BearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "lang",
										"value": "ar"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "  {\r\n  \"companyId\": 0,\r\n  \"branchId\": 0,\r\n  \"lang\": \"\",\r\n  \"id\": 0,\r\n  \"pagingEnabled\": true,\r\n  \"pageSize\": 10,\r\n  \"pageNumber\": 0,\r\n  \"freeText\": \"\",\r\n  \"orderByDirection\": 0,\r\n  \"forGridView\": true,\r\n  \"isActive\": true\r\n  }"
								},
								"url": {
									"raw": "{{baseUrl}}/api/Screen/GetForDropDown?PagingEnabled=true&PageSize=5&PageNumber=0&LocalAuthenticationType=1&FreeText=الأقسام",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"Screen",
										"GetForDropDown"
									],
									"query": [
										{
											"key": "IsExport",
											"value": "true",
											"disabled": true
										},
										{
											"key": "PagingEnabled",
											"value": "true"
										},
										{
											"key": "PageSize",
											"value": "5"
										},
										{
											"key": "PageNumber",
											"value": "0"
										},
										{
											"key": "LocalAuthenticationType",
											"value": "1",
											"description": "public enum AuthenticationType\n{\n    DawemAdmin, // تطبيق الويب\n    DawemEmployee  // تطبيق الموبايل\n}\n"
										},
										{
											"key": "FreeText",
											"value": "الأقسام"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "``` csharp\npublic enum ApplicationActionCode\n{ \n    AdditionAction,\n    EditAction,\n    DeletionAction,\n    ViewingAction,\n    AcceptAction,\n    RejectAction,\n    EnableAction,\n    DisableAction\n}\npublic enum AuthenticationType\n{\n    AdminPanel,\n    DawemAdmin,\n    DawemEmployee\n}\npublic enum GroupOrScreenType\n{\n    Group,\n    Screen\n}\n\n ```"
				}
			]
		}
	]
}